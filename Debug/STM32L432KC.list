
STM32L432KC.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000018c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003dd8  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003dc  08003f68  08003f68  00013f68  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004344  08004344  000201d4  2**0
                  CONTENTS
  4 .ARM          00000000  08004344  08004344  000201d4  2**0
                  CONTENTS
  5 .preinit_array 00000000  08004344  08004344  000201d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004344  08004344  00014344  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004348  08004348  00014348  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d4  20000000  0800434c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  000201d4  2**0
                  CONTENTS
 10 .bss          00000038  200001d4  200001d4  000201d4  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000020c  2000020c  000201d4  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000201d4  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000340c  00000000  00000000  00020204  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000a87  00000000  00000000  00023610  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000200  00000000  00000000  00024098  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000178  00000000  00000000  00024298  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00017cc8  00000000  00000000  00024410  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00003c03  00000000  00000000  0003c0d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00080adc  00000000  00000000  0003fcdb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000c07b7  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000016d4  00000000  00000000  000c0808  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .stab         000000b4  00000000  00000000  000c1edc  2**2
                  CONTENTS, READONLY, DEBUGGING
 23 .stabstr      00000183  00000000  00000000  000c1f90  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001d4 	.word	0x200001d4
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08003f50 	.word	0x08003f50

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001d8 	.word	0x200001d8
 80001cc:	08003f50 	.word	0x08003f50

080001d0 <strlen>:
 80001d0:	4603      	mov	r3, r0
 80001d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001d6:	2a00      	cmp	r2, #0
 80001d8:	d1fb      	bne.n	80001d2 <strlen+0x2>
 80001da:	1a18      	subs	r0, r3, r0
 80001dc:	3801      	subs	r0, #1
 80001de:	4770      	bx	lr

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__NVIC_ClearPendingIRQ>:
  \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 8000ba8:	b480      	push	{r7}
 8000baa:	b083      	sub	sp, #12
 8000bac:	af00      	add	r7, sp, #0
 8000bae:	4603      	mov	r3, r0
 8000bb0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000bb2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bb6:	2b00      	cmp	r3, #0
 8000bb8:	db0c      	blt.n	8000bd4 <__NVIC_ClearPendingIRQ+0x2c>
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000bba:	79fb      	ldrb	r3, [r7, #7]
 8000bbc:	f003 021f 	and.w	r2, r3, #31
 8000bc0:	4907      	ldr	r1, [pc, #28]	; (8000be0 <__NVIC_ClearPendingIRQ+0x38>)
 8000bc2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bc6:	095b      	lsrs	r3, r3, #5
 8000bc8:	2001      	movs	r0, #1
 8000bca:	fa00 f202 	lsl.w	r2, r0, r2
 8000bce:	3360      	adds	r3, #96	; 0x60
 8000bd0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000bd4:	bf00      	nop
 8000bd6:	370c      	adds	r7, #12
 8000bd8:	46bd      	mov	sp, r7
 8000bda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bde:	4770      	bx	lr
 8000be0:	e000e100 	.word	0xe000e100

08000be4 <main>:
#include <tim.h>
volatile uint16_t adc_sample;
float potentiometer_voltage;
uint32_t sample_period = 100000;//Time in us
int main (void)
{
 8000be4:	b580      	push	{r7, lr}
 8000be6:	af00      	add	r7, sp, #0
	//----------Setup------------------------------//
	//Led configuration (PB3->D13)
	gpio_LED_config();
 8000be8:	f000 f928 	bl	8000e3c <gpio_LED_config>
	//Clock Source 80MHz
	rcc_MSI_config();
 8000bec:	f000 f974 	bl	8000ed8 <rcc_MSI_config>
	//Brief TIM2 Configuration
	tim_TIM2_delayConfig();
 8000bf0:	f000 fa96 	bl	8001120 <tim_TIM2_delayConfig>
	//ADC GPIO Pin PA1(A1)->Potentiometer Configuration
	adc_GPIO_config();
 8000bf4:	f000 f866 	bl	8000cc4 <adc_GPIO_config>
	/*
	 * ADC Single Channel Auto-delayed
	 * Continuous Conversion Mode
	 */
	adc_single_channel_auto_delayed_continuous_conv_config();
 8000bf8:	f000 f890 	bl	8000d1c <adc_single_channel_auto_delayed_continuous_conv_config>
	//PWM Output GPIO Configuration(PA2->A7)
	tim_TIM15_PWM_GPIO_config();
 8000bfc:	f000 fad0 	bl	80011a0 <tim_TIM15_PWM_GPIO_config>
	//TIM 15 in PWM output mode
	tim_TIM15_PWM_config();
 8000c00:	f000 fb0e 	bl	8001220 <tim_TIM15_PWM_config>
	//Take samples after this delay
	tim_TIM2_usDelay(sample_period);
 8000c04:	4b02      	ldr	r3, [pc, #8]	; (8000c10 <main+0x2c>)
 8000c06:	681b      	ldr	r3, [r3, #0]
 8000c08:	4618      	mov	r0, r3
 8000c0a:	f000 fab1 	bl	8001170 <tim_TIM2_usDelay>
	//----------Loop forever-----------------------//
	while(1)
 8000c0e:	e7fe      	b.n	8000c0e <main+0x2a>
 8000c10:	20000000 	.word	0x20000000

08000c14 <TIM2_IRQHandler>:
	}
	return 0;
}

void TIM2_IRQHandler(void)
{
 8000c14:	b580      	push	{r7, lr}
 8000c16:	af00      	add	r7, sp, #0
	//Take sample value
	adc_sample= ADC1->DR;
 8000c18:	4b07      	ldr	r3, [pc, #28]	; (8000c38 <TIM2_IRQHandler+0x24>)
 8000c1a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000c1c:	b29a      	uxth	r2, r3
 8000c1e:	4b07      	ldr	r3, [pc, #28]	; (8000c3c <TIM2_IRQHandler+0x28>)
 8000c20:	801a      	strh	r2, [r3, #0]
	tim_PWM_setBrightness(adc_sample);
 8000c22:	4b06      	ldr	r3, [pc, #24]	; (8000c3c <TIM2_IRQHandler+0x28>)
 8000c24:	881b      	ldrh	r3, [r3, #0]
 8000c26:	b29b      	uxth	r3, r3
 8000c28:	4618      	mov	r0, r3
 8000c2a:	f000 fb69 	bl	8001300 <tim_PWM_setBrightness>
	//Clear interruption pending flag
	NVIC_ClearPendingIRQ(TIM2_IRQn);
 8000c2e:	201c      	movs	r0, #28
 8000c30:	f7ff ffba 	bl	8000ba8 <__NVIC_ClearPendingIRQ>
}
 8000c34:	bf00      	nop
 8000c36:	bd80      	pop	{r7, pc}
 8000c38:	50040000 	.word	0x50040000
 8000c3c:	200001f0 	.word	0x200001f0

08000c40 <__io_putchar>:
#include "uart.h"

int __io_putchar(int ch);
int _write(int file,char *ptr, int len);

int __io_putchar(int ch) {
 8000c40:	b580      	push	{r7, lr}
 8000c42:	b084      	sub	sp, #16
 8000c44:	af00      	add	r7, sp, #0
 8000c46:	6078      	str	r0, [r7, #4]
 uint8_t c[1];
 c[0] = ch & 0x00FF;
 8000c48:	687b      	ldr	r3, [r7, #4]
 8000c4a:	b2db      	uxtb	r3, r3
 8000c4c:	733b      	strb	r3, [r7, #12]
 uart_UART1_TX(&c[0], 1, 100);
 8000c4e:	f107 030c 	add.w	r3, r7, #12
 8000c52:	2264      	movs	r2, #100	; 0x64
 8000c54:	2101      	movs	r1, #1
 8000c56:	4618      	mov	r0, r3
 8000c58:	f000 fb80 	bl	800135c <uart_UART1_TX>
 return ch;
 8000c5c:	687b      	ldr	r3, [r7, #4]
}
 8000c5e:	4618      	mov	r0, r3
 8000c60:	3710      	adds	r7, #16
 8000c62:	46bd      	mov	sp, r7
 8000c64:	bd80      	pop	{r7, pc}

08000c66 <_write>:

int _write(int file,char *ptr, int len) {
 8000c66:	b580      	push	{r7, lr}
 8000c68:	b086      	sub	sp, #24
 8000c6a:	af00      	add	r7, sp, #0
 8000c6c:	60f8      	str	r0, [r7, #12]
 8000c6e:	60b9      	str	r1, [r7, #8]
 8000c70:	607a      	str	r2, [r7, #4]
 int DataIdx;
 for(DataIdx= 0; DataIdx< len; DataIdx++) {
 8000c72:	2300      	movs	r3, #0
 8000c74:	617b      	str	r3, [r7, #20]
 8000c76:	e009      	b.n	8000c8c <_write+0x26>
  __io_putchar(*ptr++);
 8000c78:	68bb      	ldr	r3, [r7, #8]
 8000c7a:	1c5a      	adds	r2, r3, #1
 8000c7c:	60ba      	str	r2, [r7, #8]
 8000c7e:	781b      	ldrb	r3, [r3, #0]
 8000c80:	4618      	mov	r0, r3
 8000c82:	f7ff ffdd 	bl	8000c40 <__io_putchar>
 for(DataIdx= 0; DataIdx< len; DataIdx++) {
 8000c86:	697b      	ldr	r3, [r7, #20]
 8000c88:	3301      	adds	r3, #1
 8000c8a:	617b      	str	r3, [r7, #20]
 8000c8c:	697a      	ldr	r2, [r7, #20]
 8000c8e:	687b      	ldr	r3, [r7, #4]
 8000c90:	429a      	cmp	r2, r3
 8000c92:	dbf1      	blt.n	8000c78 <_write+0x12>
 }
 return len;
 8000c94:	687b      	ldr	r3, [r7, #4]
}
 8000c96:	4618      	mov	r0, r3
 8000c98:	3718      	adds	r7, #24
 8000c9a:	46bd      	mov	sp, r7
 8000c9c:	bd80      	pop	{r7, pc}
	...

08000ca0 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @retval None
  */

void SystemInit(void)
{
 8000ca0:	b480      	push	{r7}
 8000ca2:	af00      	add	r7, sp, #0
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
#endif

  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 8000ca4:	4b06      	ldr	r3, [pc, #24]	; (8000cc0 <SystemInit+0x20>)
 8000ca6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000caa:	4a05      	ldr	r2, [pc, #20]	; (8000cc0 <SystemInit+0x20>)
 8000cac:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000cb0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
#endif
}
 8000cb4:	bf00      	nop
 8000cb6:	46bd      	mov	sp, r7
 8000cb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cbc:	4770      	bx	lr
 8000cbe:	bf00      	nop
 8000cc0:	e000ed00 	.word	0xe000ed00

08000cc4 <adc_GPIO_config>:

/*
 * @brief ADC GPIO Pin PA1(A1)->Potentiometer
 */
void adc_GPIO_config(void)
{
 8000cc4:	b480      	push	{r7}
 8000cc6:	af00      	add	r7, sp, #0
	//Enable GPIO port A clock
	RCC->AHB2ENR |= (RCC_AHB2ENR_GPIOAEN);
 8000cc8:	4b09      	ldr	r3, [pc, #36]	; (8000cf0 <adc_GPIO_config+0x2c>)
 8000cca:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000ccc:	4a08      	ldr	r2, [pc, #32]	; (8000cf0 <adc_GPIO_config+0x2c>)
 8000cce:	f043 0301 	orr.w	r3, r3, #1
 8000cd2:	64d3      	str	r3, [r2, #76]	; 0x4c
	//Pin mode as analog mode
	GPIOA->MODER |= (GPIO_MODER_MODE1);
 8000cd4:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000cd8:	681b      	ldr	r3, [r3, #0]
 8000cda:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 8000cde:	f043 030c 	orr.w	r3, r3, #12
 8000ce2:	6013      	str	r3, [r2, #0]
}
 8000ce4:	bf00      	nop
 8000ce6:	46bd      	mov	sp, r7
 8000ce8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cec:	4770      	bx	lr
 8000cee:	bf00      	nop
 8000cf0:	40021000 	.word	0x40021000

08000cf4 <adc_ADCVREG_STUP_delay>:
/*
 * @brief delay for ADC voltage regulator start-up time(20us)
 * A 80Mhz->CM=12.5ns->CM x 2000=25us>20us
 */
void adc_ADCVREG_STUP_delay(void)
{
 8000cf4:	b480      	push	{r7}
 8000cf6:	b083      	sub	sp, #12
 8000cf8:	af00      	add	r7, sp, #0
	volatile uint32_t i;
	for (i=0;i<2000;i++) {}
 8000cfa:	2300      	movs	r3, #0
 8000cfc:	607b      	str	r3, [r7, #4]
 8000cfe:	e002      	b.n	8000d06 <adc_ADCVREG_STUP_delay+0x12>
 8000d00:	687b      	ldr	r3, [r7, #4]
 8000d02:	3301      	adds	r3, #1
 8000d04:	607b      	str	r3, [r7, #4]
 8000d06:	687b      	ldr	r3, [r7, #4]
 8000d08:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8000d0c:	d3f8      	bcc.n	8000d00 <adc_ADCVREG_STUP_delay+0xc>
}
 8000d0e:	bf00      	nop
 8000d10:	bf00      	nop
 8000d12:	370c      	adds	r7, #12
 8000d14:	46bd      	mov	sp, r7
 8000d16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d1a:	4770      	bx	lr

08000d1c <adc_single_channel_auto_delayed_continuous_conv_config>:

/*
 * @brief ADC Single Channel Auto-delayed Continuous Conversion Mode
 */
void adc_single_channel_auto_delayed_continuous_conv_config(void)
{
 8000d1c:	b580      	push	{r7, lr}
 8000d1e:	af00      	add	r7, sp, #0
	//Enable ADC clock
	RCC->AHB2ENR |= (RCC_AHB2ENR_ADCEN);
 8000d20:	4b43      	ldr	r3, [pc, #268]	; (8000e30 <adc_single_channel_auto_delayed_continuous_conv_config+0x114>)
 8000d22:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d24:	4a42      	ldr	r2, [pc, #264]	; (8000e30 <adc_single_channel_auto_delayed_continuous_conv_config+0x114>)
 8000d26:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000d2a:	64d3      	str	r3, [r2, #76]	; 0x4c
	//Select HCLK/1 as ADC clock source
	ADC1_COMMON->CCR &=~(ADC_CCR_CKMODE);
 8000d2c:	4b41      	ldr	r3, [pc, #260]	; (8000e34 <adc_single_channel_auto_delayed_continuous_conv_config+0x118>)
 8000d2e:	689b      	ldr	r3, [r3, #8]
 8000d30:	4a40      	ldr	r2, [pc, #256]	; (8000e34 <adc_single_channel_auto_delayed_continuous_conv_config+0x118>)
 8000d32:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000d36:	6093      	str	r3, [r2, #8]
	ADC1_COMMON->CCR |= (ADC_CCR_CKMODE_0);
 8000d38:	4b3e      	ldr	r3, [pc, #248]	; (8000e34 <adc_single_channel_auto_delayed_continuous_conv_config+0x118>)
 8000d3a:	689b      	ldr	r3, [r3, #8]
 8000d3c:	4a3d      	ldr	r2, [pc, #244]	; (8000e34 <adc_single_channel_auto_delayed_continuous_conv_config+0x118>)
 8000d3e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000d42:	6093      	str	r3, [r2, #8]
	//Exit the Deep-power-down mode
	ADC1->CR &=~ (ADC_CR_DEEPPWD);
 8000d44:	4b3c      	ldr	r3, [pc, #240]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000d46:	689b      	ldr	r3, [r3, #8]
 8000d48:	4a3b      	ldr	r2, [pc, #236]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000d4a:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
 8000d4e:	6093      	str	r3, [r2, #8]
	//Enable the ADC internal voltage regulator
	ADC1->CR |= (ADC_CR_ADVREGEN);
 8000d50:	4b39      	ldr	r3, [pc, #228]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000d52:	689b      	ldr	r3, [r3, #8]
 8000d54:	4a38      	ldr	r2, [pc, #224]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000d56:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000d5a:	6093      	str	r3, [r2, #8]
	//Wait for the startup time of the ADC voltage regulator
	adc_ADCVREG_STUP_delay();
 8000d5c:	f7ff ffca 	bl	8000cf4 <adc_ADCVREG_STUP_delay>
	////ADC Calibration
	//Single-Ended Input mode calibration
	ADC1->CR &=~ (ADC_CR_ADCALDIF);
 8000d60:	4b35      	ldr	r3, [pc, #212]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000d62:	689b      	ldr	r3, [r3, #8]
 8000d64:	4a34      	ldr	r2, [pc, #208]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000d66:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8000d6a:	6093      	str	r3, [r2, #8]
	//Calibration start
	ADC1->CR |= (ADC_CR_ADCAL);
 8000d6c:	4b32      	ldr	r3, [pc, #200]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000d6e:	689b      	ldr	r3, [r3, #8]
 8000d70:	4a31      	ldr	r2, [pc, #196]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000d72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000d76:	6093      	str	r3, [r2, #8]
	//Wait until calibration is stopped
	while (ADC1->CR & ADC_CR_ADCAL);
 8000d78:	bf00      	nop
 8000d7a:	4b2f      	ldr	r3, [pc, #188]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000d7c:	689b      	ldr	r3, [r3, #8]
 8000d7e:	2b00      	cmp	r3, #0
 8000d80:	dbfb      	blt.n	8000d7a <adc_single_channel_auto_delayed_continuous_conv_config+0x5e>
	//Right Align Mode
	ADC1->CFGR &=~ (ADC_CFGR_ALIGN);
 8000d82:	4b2d      	ldr	r3, [pc, #180]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000d84:	68db      	ldr	r3, [r3, #12]
 8000d86:	4a2c      	ldr	r2, [pc, #176]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000d88:	f023 0320 	bic.w	r3, r3, #32
 8000d8c:	60d3      	str	r3, [r2, #12]
    //Continuous Conversion Mode
	ADC1->CFGR |= (ADC_CFGR_CONT);
 8000d8e:	4b2a      	ldr	r3, [pc, #168]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000d90:	68db      	ldr	r3, [r3, #12]
 8000d92:	4a29      	ldr	r2, [pc, #164]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000d94:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000d98:	60d3      	str	r3, [r2, #12]
	//Auto-delayed Mode
	ADC1->CFGR |= (ADC_CFGR_AUTDLY);
 8000d9a:	4b27      	ldr	r3, [pc, #156]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000d9c:	68db      	ldr	r3, [r3, #12]
 8000d9e:	4a26      	ldr	r2, [pc, #152]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000da0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000da4:	60d3      	str	r3, [r2, #12]
	//Sample time to 24.5 ADC CLK Cycles
	//Tconv= (24.5+12.5) ADC CLK Cycles = 37 ADC clock cycles = 462.5ns
	//Max Sample Frequency = 2.16MHz
	ADC1->SMPR1 &=~ (ADC_SMPR1_SMP6);
 8000da6:	4b24      	ldr	r3, [pc, #144]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000da8:	695b      	ldr	r3, [r3, #20]
 8000daa:	4a23      	ldr	r2, [pc, #140]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000dac:	f423 13e0 	bic.w	r3, r3, #1835008	; 0x1c0000
 8000db0:	6153      	str	r3, [r2, #20]
	ADC1->SMPR1 |= (0x3UL << ADC_SMPR1_SMP6_Pos);
 8000db2:	4b21      	ldr	r3, [pc, #132]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000db4:	695b      	ldr	r3, [r3, #20]
 8000db6:	4a20      	ldr	r2, [pc, #128]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000db8:	f443 2340 	orr.w	r3, r3, #786432	; 0xc0000
 8000dbc:	6153      	str	r3, [r2, #20]
	//Single Channel Mode
	ADC1->SQR1 &=~(ADC_SQR1_L);
 8000dbe:	4b1e      	ldr	r3, [pc, #120]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000dc0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000dc2:	4a1d      	ldr	r2, [pc, #116]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000dc4:	f023 030f 	bic.w	r3, r3, #15
 8000dc8:	6313      	str	r3, [r2, #48]	; 0x30
	//Select channel to convert: PA1(A1)->ADC12_IN6
	ADC1->SQR1  &=~ (ADC_SQR1_SQ1);
 8000dca:	4b1b      	ldr	r3, [pc, #108]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000dcc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000dce:	4a1a      	ldr	r2, [pc, #104]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000dd0:	f423 63f8 	bic.w	r3, r3, #1984	; 0x7c0
 8000dd4:	6313      	str	r3, [r2, #48]	; 0x30
	ADC1->SQR1  &=~ (0x6UL << (6U));
 8000dd6:	4b18      	ldr	r3, [pc, #96]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000dd8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000dda:	4a17      	ldr	r2, [pc, #92]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000ddc:	f423 73c0 	bic.w	r3, r3, #384	; 0x180
 8000de0:	6313      	str	r3, [r2, #48]	; 0x30
	//Software Trigger
	ADC1->CFGR &=~ (ADC_CFGR_EXTEN);
 8000de2:	4b15      	ldr	r3, [pc, #84]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000de4:	68db      	ldr	r3, [r3, #12]
 8000de6:	4a14      	ldr	r2, [pc, #80]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000de8:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8000dec:	60d3      	str	r3, [r2, #12]
    //Clear the ADC ready flag(It is cleared by writing 1 to it.)
	ADC1->ISR |=(ADC_ISR_ADRDY);
 8000dee:	4b12      	ldr	r3, [pc, #72]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000df0:	681b      	ldr	r3, [r3, #0]
 8000df2:	4a11      	ldr	r2, [pc, #68]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000df4:	f043 0301 	orr.w	r3, r3, #1
 8000df8:	6013      	str	r3, [r2, #0]
	//Enable ADC
	ADC1->CR |=(ADC_CR_ADEN);
 8000dfa:	4b0f      	ldr	r3, [pc, #60]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000dfc:	689b      	ldr	r3, [r3, #8]
 8000dfe:	4a0e      	ldr	r2, [pc, #56]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000e00:	f043 0301 	orr.w	r3, r3, #1
 8000e04:	6093      	str	r3, [r2, #8]
	//Wait until ADC is ready
	while (!(ADC1->CR & ADC_CR_ADEN));
 8000e06:	bf00      	nop
 8000e08:	4b0b      	ldr	r3, [pc, #44]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000e0a:	689b      	ldr	r3, [r3, #8]
 8000e0c:	f003 0301 	and.w	r3, r3, #1
 8000e10:	2b00      	cmp	r3, #0
 8000e12:	d0f9      	beq.n	8000e08 <adc_single_channel_auto_delayed_continuous_conv_config+0xec>
	//Clear the ADC ready flag again
	ADC1->ISR |=(ADC_ISR_ADRDY);
 8000e14:	4b08      	ldr	r3, [pc, #32]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000e16:	681b      	ldr	r3, [r3, #0]
 8000e18:	4a07      	ldr	r2, [pc, #28]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000e1a:	f043 0301 	orr.w	r3, r3, #1
 8000e1e:	6013      	str	r3, [r2, #0]
	//Start the first conversion
	ADC1->CR |=(ADC_CR_ADSTART);
 8000e20:	4b05      	ldr	r3, [pc, #20]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000e22:	689b      	ldr	r3, [r3, #8]
 8000e24:	4a04      	ldr	r2, [pc, #16]	; (8000e38 <adc_single_channel_auto_delayed_continuous_conv_config+0x11c>)
 8000e26:	f043 0304 	orr.w	r3, r3, #4
 8000e2a:	6093      	str	r3, [r2, #8]
}
 8000e2c:	bf00      	nop
 8000e2e:	bd80      	pop	{r7, pc}
 8000e30:	40021000 	.word	0x40021000
 8000e34:	50040300 	.word	0x50040300
 8000e38:	50040000 	.word	0x50040000

08000e3c <gpio_LED_config>:

/*
 * Brief LEDs GPIO Configuration PB3(On-board Led 3(Green))
 */
void gpio_LED_config(void)
{
 8000e3c:	b480      	push	{r7}
 8000e3e:	af00      	add	r7, sp, #0
  //Enable GPIO port B clock
  RCC->AHB2ENR |= (RCC_AHB2ENR_GPIOBEN);
 8000e40:	4b14      	ldr	r3, [pc, #80]	; (8000e94 <gpio_LED_config+0x58>)
 8000e42:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000e44:	4a13      	ldr	r2, [pc, #76]	; (8000e94 <gpio_LED_config+0x58>)
 8000e46:	f043 0302 	orr.w	r3, r3, #2
 8000e4a:	64d3      	str	r3, [r2, #76]	; 0x4c
  //Pin mode to output
  GPIOB->MODER &= ~(GPIO_MODER_MODE3);
 8000e4c:	4b12      	ldr	r3, [pc, #72]	; (8000e98 <gpio_LED_config+0x5c>)
 8000e4e:	681b      	ldr	r3, [r3, #0]
 8000e50:	4a11      	ldr	r2, [pc, #68]	; (8000e98 <gpio_LED_config+0x5c>)
 8000e52:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8000e56:	6013      	str	r3, [r2, #0]
  GPIOB->MODER |= (GPIO_MODER_MODE3_0);
 8000e58:	4b0f      	ldr	r3, [pc, #60]	; (8000e98 <gpio_LED_config+0x5c>)
 8000e5a:	681b      	ldr	r3, [r3, #0]
 8000e5c:	4a0e      	ldr	r2, [pc, #56]	; (8000e98 <gpio_LED_config+0x5c>)
 8000e5e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000e62:	6013      	str	r3, [r2, #0]
  //Seting output as PushPull
  GPIOB->OTYPER &= ~(GPIO_OTYPER_ODR_3);
 8000e64:	4b0c      	ldr	r3, [pc, #48]	; (8000e98 <gpio_LED_config+0x5c>)
 8000e66:	685b      	ldr	r3, [r3, #4]
 8000e68:	4a0b      	ldr	r2, [pc, #44]	; (8000e98 <gpio_LED_config+0x5c>)
 8000e6a:	f023 0308 	bic.w	r3, r3, #8
 8000e6e:	6053      	str	r3, [r2, #4]
  //Setting as High Speed Output
  GPIOB->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR3);
 8000e70:	4b09      	ldr	r3, [pc, #36]	; (8000e98 <gpio_LED_config+0x5c>)
 8000e72:	689b      	ldr	r3, [r3, #8]
 8000e74:	4a08      	ldr	r2, [pc, #32]	; (8000e98 <gpio_LED_config+0x5c>)
 8000e76:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8000e7a:	6093      	str	r3, [r2, #8]
  GPIOB->OSPEEDR |= (GPIO_OSPEEDER_OSPEEDR3_1);
 8000e7c:	4b06      	ldr	r3, [pc, #24]	; (8000e98 <gpio_LED_config+0x5c>)
 8000e7e:	689b      	ldr	r3, [r3, #8]
 8000e80:	4a05      	ldr	r2, [pc, #20]	; (8000e98 <gpio_LED_config+0x5c>)
 8000e82:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000e86:	6093      	str	r3, [r2, #8]
}
 8000e88:	bf00      	nop
 8000e8a:	46bd      	mov	sp, r7
 8000e8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e90:	4770      	bx	lr
 8000e92:	bf00      	nop
 8000e94:	40021000 	.word	0x40021000
 8000e98:	48000400 	.word	0x48000400

08000e9c <__NVIC_ClearPendingIRQ>:
{
 8000e9c:	b480      	push	{r7}
 8000e9e:	b083      	sub	sp, #12
 8000ea0:	af00      	add	r7, sp, #0
 8000ea2:	4603      	mov	r3, r0
 8000ea4:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000ea6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000eaa:	2b00      	cmp	r3, #0
 8000eac:	db0c      	blt.n	8000ec8 <__NVIC_ClearPendingIRQ+0x2c>
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000eae:	79fb      	ldrb	r3, [r7, #7]
 8000eb0:	f003 021f 	and.w	r2, r3, #31
 8000eb4:	4907      	ldr	r1, [pc, #28]	; (8000ed4 <__NVIC_ClearPendingIRQ+0x38>)
 8000eb6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000eba:	095b      	lsrs	r3, r3, #5
 8000ebc:	2001      	movs	r0, #1
 8000ebe:	fa00 f202 	lsl.w	r2, r0, r2
 8000ec2:	3360      	adds	r3, #96	; 0x60
 8000ec4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8000ec8:	bf00      	nop
 8000eca:	370c      	adds	r7, #12
 8000ecc:	46bd      	mov	sp, r7
 8000ece:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ed2:	4770      	bx	lr
 8000ed4:	e000e100 	.word	0xe000e100

08000ed8 <rcc_MSI_config>:

/*
 * Brief MSI Clock Config
 */
void rcc_MSI_config(void)
{
 8000ed8:	b480      	push	{r7}
 8000eda:	af00      	add	r7, sp, #0
	  *            PLL_Q                          = 4
	  *            Flash Latency(WS)              = 4
	  */
    ////MSI Configuration
  //Disable write protection of BDCR
  RCC->APB1ENR1 |=(RCC_APB1ENR1_PWREN);
 8000edc:	4b57      	ldr	r3, [pc, #348]	; (800103c <rcc_MSI_config+0x164>)
 8000ede:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000ee0:	4a56      	ldr	r2, [pc, #344]	; (800103c <rcc_MSI_config+0x164>)
 8000ee2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000ee6:	6593      	str	r3, [r2, #88]	; 0x58
  PWR->CR1 |=(PWR_CR1_DBP);
 8000ee8:	4b55      	ldr	r3, [pc, #340]	; (8001040 <rcc_MSI_config+0x168>)
 8000eea:	681b      	ldr	r3, [r3, #0]
 8000eec:	4a54      	ldr	r2, [pc, #336]	; (8001040 <rcc_MSI_config+0x168>)
 8000eee:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000ef2:	6013      	str	r3, [r2, #0]
	//Power On LSE for HW Automatic Calibration
  RCC->BDCR |= (RCC_BDCR_LSEON);
 8000ef4:	4b51      	ldr	r3, [pc, #324]	; (800103c <rcc_MSI_config+0x164>)
 8000ef6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8000efa:	4a50      	ldr	r2, [pc, #320]	; (800103c <rcc_MSI_config+0x164>)
 8000efc:	f043 0301 	orr.w	r3, r3, #1
 8000f00:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
	//Wait until LSE ready
	while(!(RCC->BDCR & RCC_BDCR_LSERDY ));
 8000f04:	bf00      	nop
 8000f06:	4b4d      	ldr	r3, [pc, #308]	; (800103c <rcc_MSI_config+0x164>)
 8000f08:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8000f0c:	f003 0302 	and.w	r3, r3, #2
 8000f10:	2b00      	cmp	r3, #0
 8000f12:	d0f8      	beq.n	8000f06 <rcc_MSI_config+0x2e>
	//Active MSI PLL Mode
	//(MSI ON by default)
	RCC->CR |= (RCC_CR_MSIPLLEN);
 8000f14:	4b49      	ldr	r3, [pc, #292]	; (800103c <rcc_MSI_config+0x164>)
 8000f16:	681b      	ldr	r3, [r3, #0]
 8000f18:	4a48      	ldr	r2, [pc, #288]	; (800103c <rcc_MSI_config+0x164>)
 8000f1a:	f043 0304 	orr.w	r3, r3, #4
 8000f1e:	6013      	str	r3, [r2, #0]



	////PLL Configuration
	//Disable PLL
	RCC->CR &= ~(RCC_CR_PLLON);
 8000f20:	4b46      	ldr	r3, [pc, #280]	; (800103c <rcc_MSI_config+0x164>)
 8000f22:	681b      	ldr	r3, [r3, #0]
 8000f24:	4a45      	ldr	r2, [pc, #276]	; (800103c <rcc_MSI_config+0x164>)
 8000f26:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8000f2a:	6013      	str	r3, [r2, #0]
	//Wait for PLL Ready is cleared
	while((RCC->CR & RCC_CR_PLLRDY ));
 8000f2c:	bf00      	nop
 8000f2e:	4b43      	ldr	r3, [pc, #268]	; (800103c <rcc_MSI_config+0x164>)
 8000f30:	681b      	ldr	r3, [r3, #0]
 8000f32:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000f36:	2b00      	cmp	r3, #0
 8000f38:	d1f9      	bne.n	8000f2e <rcc_MSI_config+0x56>
	//Select MSI as PLL clock source
	RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLSRC);
 8000f3a:	4b40      	ldr	r3, [pc, #256]	; (800103c <rcc_MSI_config+0x164>)
 8000f3c:	68db      	ldr	r3, [r3, #12]
 8000f3e:	4a3f      	ldr	r2, [pc, #252]	; (800103c <rcc_MSI_config+0x164>)
 8000f40:	f023 0303 	bic.w	r3, r3, #3
 8000f44:	60d3      	str	r3, [r2, #12]
	RCC->PLLCFGR |= (RCC_PLLCFGR_PLLSRC_MSI);
 8000f46:	4b3d      	ldr	r3, [pc, #244]	; (800103c <rcc_MSI_config+0x164>)
 8000f48:	68db      	ldr	r3, [r3, #12]
 8000f4a:	4a3c      	ldr	r2, [pc, #240]	; (800103c <rcc_MSI_config+0x164>)
 8000f4c:	f043 0301 	orr.w	r3, r3, #1
 8000f50:	60d3      	str	r3, [r2, #12]
	//PLL_M=1
	RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLM);
 8000f52:	4b3a      	ldr	r3, [pc, #232]	; (800103c <rcc_MSI_config+0x164>)
 8000f54:	68db      	ldr	r3, [r3, #12]
 8000f56:	4a39      	ldr	r2, [pc, #228]	; (800103c <rcc_MSI_config+0x164>)
 8000f58:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8000f5c:	60d3      	str	r3, [r2, #12]
	//PLL_N=40
	RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLN);
 8000f5e:	4b37      	ldr	r3, [pc, #220]	; (800103c <rcc_MSI_config+0x164>)
 8000f60:	68db      	ldr	r3, [r3, #12]
 8000f62:	4a36      	ldr	r2, [pc, #216]	; (800103c <rcc_MSI_config+0x164>)
 8000f64:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8000f68:	60d3      	str	r3, [r2, #12]
	RCC->PLLCFGR |= (0x28FUL << (8U));
 8000f6a:	4b34      	ldr	r3, [pc, #208]	; (800103c <rcc_MSI_config+0x164>)
 8000f6c:	68db      	ldr	r3, [r3, #12]
 8000f6e:	4a33      	ldr	r2, [pc, #204]	; (800103c <rcc_MSI_config+0x164>)
 8000f70:	f443 3323 	orr.w	r3, r3, #166912	; 0x28c00
 8000f74:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8000f78:	60d3      	str	r3, [r2, #12]
	//PLL_R
	RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLR);
 8000f7a:	4b30      	ldr	r3, [pc, #192]	; (800103c <rcc_MSI_config+0x164>)
 8000f7c:	68db      	ldr	r3, [r3, #12]
 8000f7e:	4a2f      	ldr	r2, [pc, #188]	; (800103c <rcc_MSI_config+0x164>)
 8000f80:	f023 63c0 	bic.w	r3, r3, #100663296	; 0x6000000
 8000f84:	60d3      	str	r3, [r2, #12]
	//PLL_Q
	RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLQ);
 8000f86:	4b2d      	ldr	r3, [pc, #180]	; (800103c <rcc_MSI_config+0x164>)
 8000f88:	68db      	ldr	r3, [r3, #12]
 8000f8a:	4a2c      	ldr	r2, [pc, #176]	; (800103c <rcc_MSI_config+0x164>)
 8000f8c:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
 8000f90:	60d3      	str	r3, [r2, #12]
	RCC->PLLCFGR |= (RCC_PLLCFGR_PLLQ_0);
 8000f92:	4b2a      	ldr	r3, [pc, #168]	; (800103c <rcc_MSI_config+0x164>)
 8000f94:	68db      	ldr	r3, [r3, #12]
 8000f96:	4a29      	ldr	r2, [pc, #164]	; (800103c <rcc_MSI_config+0x164>)
 8000f98:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000f9c:	60d3      	str	r3, [r2, #12]
	//PLL_P
	RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLP);
 8000f9e:	4b27      	ldr	r3, [pc, #156]	; (800103c <rcc_MSI_config+0x164>)
 8000fa0:	68db      	ldr	r3, [r3, #12]
 8000fa2:	4a26      	ldr	r2, [pc, #152]	; (800103c <rcc_MSI_config+0x164>)
 8000fa4:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8000fa8:	60d3      	str	r3, [r2, #12]
	//Enable PLL
	RCC->CR |= (RCC_CR_PLLON);
 8000faa:	4b24      	ldr	r3, [pc, #144]	; (800103c <rcc_MSI_config+0x164>)
 8000fac:	681b      	ldr	r3, [r3, #0]
 8000fae:	4a23      	ldr	r2, [pc, #140]	; (800103c <rcc_MSI_config+0x164>)
 8000fb0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000fb4:	6013      	str	r3, [r2, #0]
  //Enable PLLCLK output(R)
  RCC->PLLCFGR |= (RCC_PLLCFGR_PLLREN);
 8000fb6:	4b21      	ldr	r3, [pc, #132]	; (800103c <rcc_MSI_config+0x164>)
 8000fb8:	68db      	ldr	r3, [r3, #12]
 8000fba:	4a20      	ldr	r2, [pc, #128]	; (800103c <rcc_MSI_config+0x164>)
 8000fbc:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000fc0:	60d3      	str	r3, [r2, #12]
	//Wait for PLL Ready is set
  while(!(RCC->CR & RCC_CR_PLLRDY ));
 8000fc2:	bf00      	nop
 8000fc4:	4b1d      	ldr	r3, [pc, #116]	; (800103c <rcc_MSI_config+0x164>)
 8000fc6:	681b      	ldr	r3, [r3, #0]
 8000fc8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000fcc:	2b00      	cmp	r3, #0
 8000fce:	d0f9      	beq.n	8000fc4 <rcc_MSI_config+0xec>
	//Flash Latency and prefetch
	FLASH->ACR &= ~(FLASH_ACR_LATENCY);
 8000fd0:	4b1c      	ldr	r3, [pc, #112]	; (8001044 <rcc_MSI_config+0x16c>)
 8000fd2:	681b      	ldr	r3, [r3, #0]
 8000fd4:	4a1b      	ldr	r2, [pc, #108]	; (8001044 <rcc_MSI_config+0x16c>)
 8000fd6:	f023 0307 	bic.w	r3, r3, #7
 8000fda:	6013      	str	r3, [r2, #0]
	FLASH->ACR |= (0x4UL << (0U));
 8000fdc:	4b19      	ldr	r3, [pc, #100]	; (8001044 <rcc_MSI_config+0x16c>)
 8000fde:	681b      	ldr	r3, [r3, #0]
 8000fe0:	4a18      	ldr	r2, [pc, #96]	; (8001044 <rcc_MSI_config+0x16c>)
 8000fe2:	f043 0304 	orr.w	r3, r3, #4
 8000fe6:	6013      	str	r3, [r2, #0]
	//PLL as clock source of SYSCLK
	RCC->CFGR &= ~(RCC_CFGR_SW_Msk);
 8000fe8:	4b14      	ldr	r3, [pc, #80]	; (800103c <rcc_MSI_config+0x164>)
 8000fea:	689b      	ldr	r3, [r3, #8]
 8000fec:	4a13      	ldr	r2, [pc, #76]	; (800103c <rcc_MSI_config+0x164>)
 8000fee:	f023 0303 	bic.w	r3, r3, #3
 8000ff2:	6093      	str	r3, [r2, #8]
	RCC->CFGR |= (RCC_CFGR_SW_Msk);
 8000ff4:	4b11      	ldr	r3, [pc, #68]	; (800103c <rcc_MSI_config+0x164>)
 8000ff6:	689b      	ldr	r3, [r3, #8]
 8000ff8:	4a10      	ldr	r2, [pc, #64]	; (800103c <rcc_MSI_config+0x164>)
 8000ffa:	f043 0303 	orr.w	r3, r3, #3
 8000ffe:	6093      	str	r3, [r2, #8]
	////Wait for clock change be stable
	while(!(RCC->CFGR & (0x3UL << (2U)) ));
 8001000:	bf00      	nop
 8001002:	4b0e      	ldr	r3, [pc, #56]	; (800103c <rcc_MSI_config+0x164>)
 8001004:	689b      	ldr	r3, [r3, #8]
 8001006:	f003 030c 	and.w	r3, r3, #12
 800100a:	2b00      	cmp	r3, #0
 800100c:	d0f9      	beq.n	8001002 <rcc_MSI_config+0x12a>
	//Clear prescalers
	RCC->CFGR &= ~(RCC_CFGR_PPRE1);
 800100e:	4b0b      	ldr	r3, [pc, #44]	; (800103c <rcc_MSI_config+0x164>)
 8001010:	689b      	ldr	r3, [r3, #8]
 8001012:	4a0a      	ldr	r2, [pc, #40]	; (800103c <rcc_MSI_config+0x164>)
 8001014:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8001018:	6093      	str	r3, [r2, #8]
	RCC->CFGR &= ~(RCC_CFGR_PPRE2);
 800101a:	4b08      	ldr	r3, [pc, #32]	; (800103c <rcc_MSI_config+0x164>)
 800101c:	689b      	ldr	r3, [r3, #8]
 800101e:	4a07      	ldr	r2, [pc, #28]	; (800103c <rcc_MSI_config+0x164>)
 8001020:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 8001024:	6093      	str	r3, [r2, #8]
	RCC->CFGR &= ~(RCC_CFGR_HPRE);
 8001026:	4b05      	ldr	r3, [pc, #20]	; (800103c <rcc_MSI_config+0x164>)
 8001028:	689b      	ldr	r3, [r3, #8]
 800102a:	4a04      	ldr	r2, [pc, #16]	; (800103c <rcc_MSI_config+0x164>)
 800102c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001030:	6093      	str	r3, [r2, #8]
}
 8001032:	bf00      	nop
 8001034:	46bd      	mov	sp, r7
 8001036:	f85d 7b04 	ldr.w	r7, [sp], #4
 800103a:	4770      	bx	lr
 800103c:	40021000 	.word	0x40021000
 8001040:	40007000 	.word	0x40007000
 8001044:	40022000 	.word	0x40022000

08001048 <rcc_msIncTicks>:
}
/*
 * Brief increment msTicks
 */
void rcc_msIncTicks(void)
{
 8001048:	b480      	push	{r7}
 800104a:	af00      	add	r7, sp, #0
  msTicks++;
 800104c:	4b04      	ldr	r3, [pc, #16]	; (8001060 <rcc_msIncTicks+0x18>)
 800104e:	681b      	ldr	r3, [r3, #0]
 8001050:	3301      	adds	r3, #1
 8001052:	4a03      	ldr	r2, [pc, #12]	; (8001060 <rcc_msIncTicks+0x18>)
 8001054:	6013      	str	r3, [r2, #0]
}
 8001056:	bf00      	nop
 8001058:	46bd      	mov	sp, r7
 800105a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800105e:	4770      	bx	lr
 8001060:	200001f4 	.word	0x200001f4

08001064 <rcc_msGetTicks>:
/*
 * Brief get msTicks
 */
uint32_t rcc_msGetTicks(void)
{
 8001064:	b480      	push	{r7}
 8001066:	af00      	add	r7, sp, #0
return msTicks;
 8001068:	4b03      	ldr	r3, [pc, #12]	; (8001078 <rcc_msGetTicks+0x14>)
 800106a:	681b      	ldr	r3, [r3, #0]
}
 800106c:	4618      	mov	r0, r3
 800106e:	46bd      	mov	sp, r7
 8001070:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001074:	4770      	bx	lr
 8001076:	bf00      	nop
 8001078:	200001f4 	.word	0x200001f4

0800107c <SysTick_Handler>:
}
/*
 * Brief SysTick Interrupt callback
 */
void SysTick_Handler(void)
{
 800107c:	b580      	push	{r7, lr}
 800107e:	af00      	add	r7, sp, #0
NVIC_ClearPendingIRQ(SysTick_IRQn);
 8001080:	f04f 30ff 	mov.w	r0, #4294967295
 8001084:	f7ff ff0a 	bl	8000e9c <__NVIC_ClearPendingIRQ>
rcc_msIncTicks();
 8001088:	f7ff ffde 	bl	8001048 <rcc_msIncTicks>
}
 800108c:	bf00      	nop
 800108e:	bd80      	pop	{r7, pc}

08001090 <__NVIC_EnableIRQ>:
{
 8001090:	b480      	push	{r7}
 8001092:	b083      	sub	sp, #12
 8001094:	af00      	add	r7, sp, #0
 8001096:	4603      	mov	r3, r0
 8001098:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800109a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800109e:	2b00      	cmp	r3, #0
 80010a0:	db0b      	blt.n	80010ba <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010a2:	79fb      	ldrb	r3, [r7, #7]
 80010a4:	f003 021f 	and.w	r2, r3, #31
 80010a8:	4907      	ldr	r1, [pc, #28]	; (80010c8 <__NVIC_EnableIRQ+0x38>)
 80010aa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010ae:	095b      	lsrs	r3, r3, #5
 80010b0:	2001      	movs	r0, #1
 80010b2:	fa00 f202 	lsl.w	r2, r0, r2
 80010b6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80010ba:	bf00      	nop
 80010bc:	370c      	adds	r7, #12
 80010be:	46bd      	mov	sp, r7
 80010c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010c4:	4770      	bx	lr
 80010c6:	bf00      	nop
 80010c8:	e000e100 	.word	0xe000e100

080010cc <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80010cc:	b480      	push	{r7}
 80010ce:	b083      	sub	sp, #12
 80010d0:	af00      	add	r7, sp, #0
 80010d2:	4603      	mov	r3, r0
 80010d4:	6039      	str	r1, [r7, #0]
 80010d6:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80010d8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010dc:	2b00      	cmp	r3, #0
 80010de:	db0a      	blt.n	80010f6 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80010e0:	683b      	ldr	r3, [r7, #0]
 80010e2:	b2da      	uxtb	r2, r3
 80010e4:	490c      	ldr	r1, [pc, #48]	; (8001118 <__NVIC_SetPriority+0x4c>)
 80010e6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010ea:	0112      	lsls	r2, r2, #4
 80010ec:	b2d2      	uxtb	r2, r2
 80010ee:	440b      	add	r3, r1
 80010f0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80010f4:	e00a      	b.n	800110c <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80010f6:	683b      	ldr	r3, [r7, #0]
 80010f8:	b2da      	uxtb	r2, r3
 80010fa:	4908      	ldr	r1, [pc, #32]	; (800111c <__NVIC_SetPriority+0x50>)
 80010fc:	79fb      	ldrb	r3, [r7, #7]
 80010fe:	f003 030f 	and.w	r3, r3, #15
 8001102:	3b04      	subs	r3, #4
 8001104:	0112      	lsls	r2, r2, #4
 8001106:	b2d2      	uxtb	r2, r2
 8001108:	440b      	add	r3, r1
 800110a:	761a      	strb	r2, [r3, #24]
}
 800110c:	bf00      	nop
 800110e:	370c      	adds	r7, #12
 8001110:	46bd      	mov	sp, r7
 8001112:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001116:	4770      	bx	lr
 8001118:	e000e100 	.word	0xe000e100
 800111c:	e000ed00 	.word	0xe000ed00

08001120 <tim_TIM2_delayConfig>:
#include <tim.h>
/*
 * @Brief Delay Timer Configuration - TIM2
 */
void tim_TIM2_delayConfig(void)
{
 8001120:	b580      	push	{r7, lr}
 8001122:	af00      	add	r7, sp, #0
	//Enable TIM 2 Timer CLOCK
	RCC->APB1ENR1 |= (RCC_APB1ENR1_TIM2EN);
 8001124:	4b11      	ldr	r3, [pc, #68]	; (800116c <tim_TIM2_delayConfig+0x4c>)
 8001126:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001128:	4a10      	ldr	r2, [pc, #64]	; (800116c <tim_TIM2_delayConfig+0x4c>)
 800112a:	f043 0301 	orr.w	r3, r3, #1
 800112e:	6593      	str	r3, [r2, #88]	; 0x58
	//Count Up Mode
	TIM2->CR1 &= ~(TIM_CR1_DIR);
 8001130:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001134:	681b      	ldr	r3, [r3, #0]
 8001136:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800113a:	f023 0310 	bic.w	r3, r3, #16
 800113e:	6013      	str	r3, [r2, #0]
	//Prescaler to 1MHz TCLOCK
	// CK_CNT=fCK_PSC / (PSC[15:0] + 1)
	TIM2->PSC = 80-1;//Ya que 80MHz/80 es 1MHz
 8001140:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001144:	224f      	movs	r2, #79	; 0x4f
 8001146:	629a      	str	r2, [r3, #40]	; 0x28
	//Enable TIM2 Update Interrupt
	TIM2->DIER |=(TIM_DIER_UIE);
 8001148:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800114c:	68db      	ldr	r3, [r3, #12]
 800114e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001152:	f043 0301 	orr.w	r3, r3, #1
 8001156:	60d3      	str	r3, [r2, #12]
	//Set the interrupt priority
	NVIC_SetPriority(TIM2_IRQn,0);
 8001158:	2100      	movs	r1, #0
 800115a:	201c      	movs	r0, #28
 800115c:	f7ff ffb6 	bl	80010cc <__NVIC_SetPriority>
	//Enable the interrupt
	NVIC_EnableIRQ(TIM2_IRQn);
 8001160:	201c      	movs	r0, #28
 8001162:	f7ff ff95 	bl	8001090 <__NVIC_EnableIRQ>
}
 8001166:	bf00      	nop
 8001168:	bd80      	pop	{r7, pc}
 800116a:	bf00      	nop
 800116c:	40021000 	.word	0x40021000

08001170 <tim_TIM2_usDelay>:
/*
 * @Brief Microsecond Delay - TIM2
 */
void tim_TIM2_usDelay(uint32_t us)
{
 8001170:	b480      	push	{r7}
 8001172:	b083      	sub	sp, #12
 8001174:	af00      	add	r7, sp, #0
 8001176:	6078      	str	r0, [r7, #4]
	//Setting autoreload value
	//The Counter is overflow when exceed this value
	TIM2->ARR = us - 1;
 8001178:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800117c:	687b      	ldr	r3, [r7, #4]
 800117e:	3b01      	subs	r3, #1
 8001180:	62d3      	str	r3, [r2, #44]	; 0x2c
	//Clock trigger
	TIM2->CR1 |= (TIM_CR1_CEN);
 8001182:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001186:	681b      	ldr	r3, [r3, #0]
 8001188:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800118c:	f043 0301 	orr.w	r3, r3, #1
 8001190:	6013      	str	r3, [r2, #0]
//	while(!(TIM2->SR & (TIM_SR_UIF)));
//	//Clock stop
//	TIM2->CR1 &= ~(TIM_CR1_CEN);
//	//Clear update interrupt flag
//	TIM2->SR &= ~(TIM_SR_UIF);
}
 8001192:	bf00      	nop
 8001194:	370c      	adds	r7, #12
 8001196:	46bd      	mov	sp, r7
 8001198:	f85d 7b04 	ldr.w	r7, [sp], #4
 800119c:	4770      	bx	lr
	...

080011a0 <tim_TIM15_PWM_GPIO_config>:

/*
 * @Brief PWM TIM15_CH1 GPIO Configuration(PA2->A7) - TIM15
 */
void tim_TIM15_PWM_GPIO_config(void)
{
 80011a0:	b480      	push	{r7}
 80011a2:	af00      	add	r7, sp, #0
	//Enable GPIO port A clock
	RCC->AHB2ENR |= (RCC_AHB2ENR_GPIOAEN);
 80011a4:	4b1d      	ldr	r3, [pc, #116]	; (800121c <tim_TIM15_PWM_GPIO_config+0x7c>)
 80011a6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80011a8:	4a1c      	ldr	r2, [pc, #112]	; (800121c <tim_TIM15_PWM_GPIO_config+0x7c>)
 80011aa:	f043 0301 	orr.w	r3, r3, #1
 80011ae:	64d3      	str	r3, [r2, #76]	; 0x4c
	//Setting as High Speed Output
	GPIOA->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR2);
 80011b0:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 80011b4:	689b      	ldr	r3, [r3, #8]
 80011b6:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 80011ba:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 80011be:	6093      	str	r3, [r2, #8]
	GPIOA->OSPEEDR |= (GPIO_OSPEEDER_OSPEEDR2_1);
 80011c0:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 80011c4:	689b      	ldr	r3, [r3, #8]
 80011c6:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 80011ca:	f043 0320 	orr.w	r3, r3, #32
 80011ce:	6093      	str	r3, [r2, #8]
	//Pin mode to alternate function mode(AF14)
	GPIOA->MODER &= ~(GPIO_MODER_MODER2);
 80011d0:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 80011d4:	681b      	ldr	r3, [r3, #0]
 80011d6:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 80011da:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 80011de:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (GPIO_MODER_MODER2_1);
 80011e0:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 80011e4:	681b      	ldr	r3, [r3, #0]
 80011e6:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 80011ea:	f043 0320 	orr.w	r3, r3, #32
 80011ee:	6013      	str	r3, [r2, #0]
	GPIOA->AFR[0] &= ~(GPIO_AFRL_AFRL2);
 80011f0:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 80011f4:	6a1b      	ldr	r3, [r3, #32]
 80011f6:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 80011fa:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 80011fe:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (0xEUL << GPIO_AFRL_AFSEL2_Pos);
 8001200:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8001204:	6a1b      	ldr	r3, [r3, #32]
 8001206:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 800120a:	f443 6360 	orr.w	r3, r3, #3584	; 0xe00
 800120e:	6213      	str	r3, [r2, #32]
}
 8001210:	bf00      	nop
 8001212:	46bd      	mov	sp, r7
 8001214:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001218:	4770      	bx	lr
 800121a:	bf00      	nop
 800121c:	40021000 	.word	0x40021000

08001220 <tim_TIM15_PWM_config>:
/*
 * @Brief Timer PWM Mode Configuration - TIM15
 * 10Hz fixed frequency
 */
void tim_TIM15_PWM_config(void)
{
 8001220:	b480      	push	{r7}
 8001222:	af00      	add	r7, sp, #0
	//Enable TIM15 clock
	RCC->APB2ENR|=(RCC_APB2ENR_TIM15EN);
 8001224:	4b34      	ldr	r3, [pc, #208]	; (80012f8 <tim_TIM15_PWM_config+0xd8>)
 8001226:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001228:	4a33      	ldr	r2, [pc, #204]	; (80012f8 <tim_TIM15_PWM_config+0xd8>)
 800122a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800122e:	6613      	str	r3, [r2, #96]	; 0x60
	//Periodic
	TIM15->CR1 &=~ (TIM_CR1_OPM);
 8001230:	4b32      	ldr	r3, [pc, #200]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 8001232:	681b      	ldr	r3, [r3, #0]
 8001234:	4a31      	ldr	r2, [pc, #196]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 8001236:	f023 0308 	bic.w	r3, r3, #8
 800123a:	6013      	str	r3, [r2, #0]
	//Mode-->Reset
	TIM15->CR2 &=~ (TIM_CR2_MMS);
 800123c:	4b2f      	ldr	r3, [pc, #188]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 800123e:	685b      	ldr	r3, [r3, #4]
 8001240:	4a2e      	ldr	r2, [pc, #184]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 8001242:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001246:	6053      	str	r3, [r2, #4]
	//Prescalar
	// CK_CNT=fCK_PSC / (PSC[15:0] + 1)
	TIM15->PSC =8000-1;//10kHz TIM15 CLK frequency
 8001248:	4b2c      	ldr	r3, [pc, #176]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 800124a:	f641 723f 	movw	r2, #7999	; 0x1f3f
 800124e:	629a      	str	r2, [r3, #40]	; 0x28
	//Period
	TIM15->ARR = 1000-1;//10Hz PWM signal frequency
 8001250:	4b2a      	ldr	r3, [pc, #168]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 8001252:	f240 32e7 	movw	r2, #999	; 0x3e7
 8001256:	62da      	str	r2, [r3, #44]	; 0x2c
	//Clear update interrupt flag
	TIM15->SR &=~ (0x1UL<< (0U));
 8001258:	4b28      	ldr	r3, [pc, #160]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 800125a:	691b      	ldr	r3, [r3, #16]
 800125c:	4a27      	ldr	r2, [pc, #156]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 800125e:	f023 0301 	bic.w	r3, r3, #1
 8001262:	6113      	str	r3, [r2, #16]
	//Disable Output Compare
	TIM15->CCER=0;
 8001264:	4b25      	ldr	r3, [pc, #148]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 8001266:	2200      	movs	r2, #0
 8001268:	621a      	str	r2, [r3, #32]
	//Compare and Capture as Output Mode
	TIM15->CCMR1 &=~ (TIM_CCMR1_CC1S);
 800126a:	4b24      	ldr	r3, [pc, #144]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 800126c:	699b      	ldr	r3, [r3, #24]
 800126e:	4a23      	ldr	r2, [pc, #140]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 8001270:	f023 0303 	bic.w	r3, r3, #3
 8001274:	6193      	str	r3, [r2, #24]
	////CH1 PWM output mode 1
	//CH1 is HIGH as long as TIMx_CNT<TIMx_CCR1 else is LOW
	TIM15->CCMR1 &=~ (TIM_CCMR1_OC1M);
 8001276:	4b21      	ldr	r3, [pc, #132]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 8001278:	699b      	ldr	r3, [r3, #24]
 800127a:	4a20      	ldr	r2, [pc, #128]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 800127c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001280:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001284:	6193      	str	r3, [r2, #24]
	TIM15->CCMR1 |= (0x7UL << TIM_CCMR1_OC1M_Pos);
 8001286:	4b1d      	ldr	r3, [pc, #116]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 8001288:	699b      	ldr	r3, [r3, #24]
 800128a:	4a1c      	ldr	r2, [pc, #112]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 800128c:	f043 0370 	orr.w	r3, r3, #112	; 0x70
 8001290:	6193      	str	r3, [r2, #24]
	//Enable preload and fast CC mode
	TIM15->CCMR1 |= (TIM_CCMR1_OC1PE);
 8001292:	4b1a      	ldr	r3, [pc, #104]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 8001294:	699b      	ldr	r3, [r3, #24]
 8001296:	4a19      	ldr	r2, [pc, #100]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 8001298:	f043 0308 	orr.w	r3, r3, #8
 800129c:	6193      	str	r3, [r2, #24]
	TIM15->CCMR1 |= (TIM_CCMR1_OC1FE);
 800129e:	4b17      	ldr	r3, [pc, #92]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 80012a0:	699b      	ldr	r3, [r3, #24]
 80012a2:	4a16      	ldr	r2, [pc, #88]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 80012a4:	f043 0304 	orr.w	r3, r3, #4
 80012a8:	6193      	str	r3, [r2, #24]
	//Enable auto-reload preload register
	TIM15->CR1 |= (TIM_CR1_ARPE);
 80012aa:	4b14      	ldr	r3, [pc, #80]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 80012ac:	681b      	ldr	r3, [r3, #0]
 80012ae:	4a13      	ldr	r2, [pc, #76]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 80012b0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80012b4:	6013      	str	r3, [r2, #0]
	//CH1 HIGH polarity
	TIM15->CCER &=~ (TIM_CCER_CC1P);
 80012b6:	4b11      	ldr	r3, [pc, #68]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 80012b8:	6a1b      	ldr	r3, [r3, #32]
 80012ba:	4a10      	ldr	r2, [pc, #64]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 80012bc:	f023 0302 	bic.w	r3, r3, #2
 80012c0:	6213      	str	r3, [r2, #32]
	//PWM Duty Cycle(Initially)
	TIM15->CCR1=0;
 80012c2:	4b0e      	ldr	r3, [pc, #56]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 80012c4:	2200      	movs	r2, #0
 80012c6:	635a      	str	r2, [r3, #52]	; 0x34
	//Enable OC CH1(not it's complementary channel)
	TIM15->BDTR |= (TIM_BDTR_MOE);
 80012c8:	4b0c      	ldr	r3, [pc, #48]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 80012ca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80012cc:	4a0b      	ldr	r2, [pc, #44]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 80012ce:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80012d2:	6453      	str	r3, [r2, #68]	; 0x44
	TIM15->CCER |= (TIM_CCER_CC1E);
 80012d4:	4b09      	ldr	r3, [pc, #36]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 80012d6:	6a1b      	ldr	r3, [r3, #32]
 80012d8:	4a08      	ldr	r2, [pc, #32]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 80012da:	f043 0301 	orr.w	r3, r3, #1
 80012de:	6213      	str	r3, [r2, #32]
	//Trigger on timer
	TIM15->CR1 |= (TIM_CR1_CEN);
 80012e0:	4b06      	ldr	r3, [pc, #24]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 80012e2:	681b      	ldr	r3, [r3, #0]
 80012e4:	4a05      	ldr	r2, [pc, #20]	; (80012fc <tim_TIM15_PWM_config+0xdc>)
 80012e6:	f043 0301 	orr.w	r3, r3, #1
 80012ea:	6013      	str	r3, [r2, #0]
}
 80012ec:	bf00      	nop
 80012ee:	46bd      	mov	sp, r7
 80012f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012f4:	4770      	bx	lr
 80012f6:	bf00      	nop
 80012f8:	40021000 	.word	0x40021000
 80012fc:	40014000 	.word	0x40014000

08001300 <tim_PWM_setBrightness>:
/**
 * @Brief PWM Duty Cycle  - Brightness(0-4096)
 */
void tim_PWM_setBrightness(uint16_t bright)
{
 8001300:	b480      	push	{r7}
 8001302:	b083      	sub	sp, #12
 8001304:	af00      	add	r7, sp, #0
 8001306:	4603      	mov	r3, r0
 8001308:	80fb      	strh	r3, [r7, #6]
TIM15->CCR1= (uint16_t)((TIM15->ARR+0.0f)*(bright/4096.0f));
 800130a:	4b11      	ldr	r3, [pc, #68]	; (8001350 <tim_PWM_setBrightness+0x50>)
 800130c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800130e:	ee07 3a90 	vmov	s15, r3
 8001312:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001316:	ed9f 7a0f 	vldr	s14, [pc, #60]	; 8001354 <tim_PWM_setBrightness+0x54>
 800131a:	ee37 7a87 	vadd.f32	s14, s15, s14
 800131e:	88fb      	ldrh	r3, [r7, #6]
 8001320:	ee07 3a90 	vmov	s15, r3
 8001324:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8001328:	ed9f 6a0b 	vldr	s12, [pc, #44]	; 8001358 <tim_PWM_setBrightness+0x58>
 800132c:	eec6 7a86 	vdiv.f32	s15, s13, s12
 8001330:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001334:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001338:	ee17 3a90 	vmov	r3, s15
 800133c:	b29a      	uxth	r2, r3
 800133e:	4b04      	ldr	r3, [pc, #16]	; (8001350 <tim_PWM_setBrightness+0x50>)
 8001340:	635a      	str	r2, [r3, #52]	; 0x34

}
 8001342:	bf00      	nop
 8001344:	370c      	adds	r7, #12
 8001346:	46bd      	mov	sp, r7
 8001348:	f85d 7b04 	ldr.w	r7, [sp], #4
 800134c:	4770      	bx	lr
 800134e:	bf00      	nop
 8001350:	40014000 	.word	0x40014000
 8001354:	00000000 	.word	0x00000000
 8001358:	45800000 	.word	0x45800000

0800135c <uart_UART1_TX>:
}
/*
 * @Brief UART1 Transmit
 */
bool uart_UART1_TX(uint8_t *data,uint8_t len,uint32_t timeout)
{
 800135c:	b580      	push	{r7, lr}
 800135e:	b086      	sub	sp, #24
 8001360:	af00      	add	r7, sp, #0
 8001362:	60f8      	str	r0, [r7, #12]
 8001364:	460b      	mov	r3, r1
 8001366:	607a      	str	r2, [r7, #4]
 8001368:	72fb      	strb	r3, [r7, #11]
  //Wait on TXE to start transmit
  //Write to DR as TXE flag is HIGH (Tx buffer Empty)
  uint8_t dataIdx = 0;
 800136a:	2300      	movs	r3, #0
 800136c:	75fb      	strb	r3, [r7, #23]
  uint32_t startTick = rcc_msGetTicks();
 800136e:	f7ff fe79 	bl	8001064 <rcc_msGetTicks>
 8001372:	6138      	str	r0, [r7, #16]
  while(dataIdx<len)
 8001374:	e01a      	b.n	80013ac <uart_UART1_TX+0x50>
  {
    if(USART1->ISR & USART_ISR_TXE) //Tx buffer empty
 8001376:	4b1a      	ldr	r3, [pc, #104]	; (80013e0 <uart_UART1_TX+0x84>)
 8001378:	69db      	ldr	r3, [r3, #28]
 800137a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800137e:	2b00      	cmp	r3, #0
 8001380:	d00a      	beq.n	8001398 <uart_UART1_TX+0x3c>
    {
      USART1->TDR = data[dataIdx];
 8001382:	7dfb      	ldrb	r3, [r7, #23]
 8001384:	68fa      	ldr	r2, [r7, #12]
 8001386:	4413      	add	r3, r2
 8001388:	781a      	ldrb	r2, [r3, #0]
 800138a:	4b15      	ldr	r3, [pc, #84]	; (80013e0 <uart_UART1_TX+0x84>)
 800138c:	b292      	uxth	r2, r2
 800138e:	851a      	strh	r2, [r3, #40]	; 0x28
      dataIdx++;
 8001390:	7dfb      	ldrb	r3, [r7, #23]
 8001392:	3301      	adds	r3, #1
 8001394:	75fb      	strb	r3, [r7, #23]
 8001396:	e009      	b.n	80013ac <uart_UART1_TX+0x50>
    }
    else //Manage timeout
    {
      if((rcc_msGetTicks() - startTick)>= timeout) return false;
 8001398:	f7ff fe64 	bl	8001064 <rcc_msGetTicks>
 800139c:	4602      	mov	r2, r0
 800139e:	693b      	ldr	r3, [r7, #16]
 80013a0:	1ad3      	subs	r3, r2, r3
 80013a2:	687a      	ldr	r2, [r7, #4]
 80013a4:	429a      	cmp	r2, r3
 80013a6:	d801      	bhi.n	80013ac <uart_UART1_TX+0x50>
 80013a8:	2300      	movs	r3, #0
 80013aa:	e015      	b.n	80013d8 <uart_UART1_TX+0x7c>
  while(dataIdx<len)
 80013ac:	7dfa      	ldrb	r2, [r7, #23]
 80013ae:	7afb      	ldrb	r3, [r7, #11]
 80013b0:	429a      	cmp	r2, r3
 80013b2:	d3e0      	bcc.n	8001376 <uart_UART1_TX+0x1a>
    }
  }
  //Wait for busy flag
  while(!(USART1->ISR & USART_ISR_TC))
 80013b4:	e009      	b.n	80013ca <uart_UART1_TX+0x6e>
  {
    if((rcc_msGetTicks() - startTick)>= timeout) return false;
 80013b6:	f7ff fe55 	bl	8001064 <rcc_msGetTicks>
 80013ba:	4602      	mov	r2, r0
 80013bc:	693b      	ldr	r3, [r7, #16]
 80013be:	1ad3      	subs	r3, r2, r3
 80013c0:	687a      	ldr	r2, [r7, #4]
 80013c2:	429a      	cmp	r2, r3
 80013c4:	d801      	bhi.n	80013ca <uart_UART1_TX+0x6e>
 80013c6:	2300      	movs	r3, #0
 80013c8:	e006      	b.n	80013d8 <uart_UART1_TX+0x7c>
  while(!(USART1->ISR & USART_ISR_TC))
 80013ca:	4b05      	ldr	r3, [pc, #20]	; (80013e0 <uart_UART1_TX+0x84>)
 80013cc:	69db      	ldr	r3, [r3, #28]
 80013ce:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80013d2:	2b00      	cmp	r3, #0
 80013d4:	d0ef      	beq.n	80013b6 <uart_UART1_TX+0x5a>
  }
  return true;
 80013d6:	2301      	movs	r3, #1


}
 80013d8:	4618      	mov	r0, r3
 80013da:	3718      	adds	r7, #24
 80013dc:	46bd      	mov	sp, r7
 80013de:	bd80      	pop	{r7, pc}
 80013e0:	40013800 	.word	0x40013800

080013e4 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* Set stack pointer */
 80013e4:	f8df d034 	ldr.w	sp, [pc, #52]	; 800141c <LoopForever+0x2>

/* Call the clock system initialization function.*/
    bl  SystemInit
 80013e8:	f7ff fc5a 	bl	8000ca0 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80013ec:	480c      	ldr	r0, [pc, #48]	; (8001420 <LoopForever+0x6>)
  ldr r1, =_edata
 80013ee:	490d      	ldr	r1, [pc, #52]	; (8001424 <LoopForever+0xa>)
  ldr r2, =_sidata
 80013f0:	4a0d      	ldr	r2, [pc, #52]	; (8001428 <LoopForever+0xe>)
  movs r3, #0
 80013f2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80013f4:	e002      	b.n	80013fc <LoopCopyDataInit>

080013f6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80013f6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80013f8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80013fa:	3304      	adds	r3, #4

080013fc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80013fc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80013fe:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001400:	d3f9      	bcc.n	80013f6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001402:	4a0a      	ldr	r2, [pc, #40]	; (800142c <LoopForever+0x12>)
  ldr r4, =_ebss
 8001404:	4c0a      	ldr	r4, [pc, #40]	; (8001430 <LoopForever+0x16>)
  movs r3, #0
 8001406:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001408:	e001      	b.n	800140e <LoopFillZerobss>

0800140a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800140a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800140c:	3204      	adds	r2, #4

0800140e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800140e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001410:	d3fb      	bcc.n	800140a <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8001412:	f000 f811 	bl	8001438 <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 8001416:	f7ff fbe5 	bl	8000be4 <main>

0800141a <LoopForever>:

LoopForever:
    b LoopForever
 800141a:	e7fe      	b.n	800141a <LoopForever>
  ldr   sp, =_estack    /* Set stack pointer */
 800141c:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8001420:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001424:	200001d4 	.word	0x200001d4
  ldr r2, =_sidata
 8001428:	0800434c 	.word	0x0800434c
  ldr r2, =_sbss
 800142c:	200001d4 	.word	0x200001d4
  ldr r4, =_ebss
 8001430:	2000020c 	.word	0x2000020c

08001434 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 8001434:	e7fe      	b.n	8001434 <ADC1_IRQHandler>
	...

08001438 <__libc_init_array>:
 8001438:	b570      	push	{r4, r5, r6, lr}
 800143a:	4d0d      	ldr	r5, [pc, #52]	; (8001470 <__libc_init_array+0x38>)
 800143c:	4c0d      	ldr	r4, [pc, #52]	; (8001474 <__libc_init_array+0x3c>)
 800143e:	1b64      	subs	r4, r4, r5
 8001440:	10a4      	asrs	r4, r4, #2
 8001442:	2600      	movs	r6, #0
 8001444:	42a6      	cmp	r6, r4
 8001446:	d109      	bne.n	800145c <__libc_init_array+0x24>
 8001448:	4d0b      	ldr	r5, [pc, #44]	; (8001478 <__libc_init_array+0x40>)
 800144a:	4c0c      	ldr	r4, [pc, #48]	; (800147c <__libc_init_array+0x44>)
 800144c:	f002 fd80 	bl	8003f50 <_init>
 8001450:	1b64      	subs	r4, r4, r5
 8001452:	10a4      	asrs	r4, r4, #2
 8001454:	2600      	movs	r6, #0
 8001456:	42a6      	cmp	r6, r4
 8001458:	d105      	bne.n	8001466 <__libc_init_array+0x2e>
 800145a:	bd70      	pop	{r4, r5, r6, pc}
 800145c:	f855 3b04 	ldr.w	r3, [r5], #4
 8001460:	4798      	blx	r3
 8001462:	3601      	adds	r6, #1
 8001464:	e7ee      	b.n	8001444 <__libc_init_array+0xc>
 8001466:	f855 3b04 	ldr.w	r3, [r5], #4
 800146a:	4798      	blx	r3
 800146c:	3601      	adds	r6, #1
 800146e:	e7f2      	b.n	8001456 <__libc_init_array+0x1e>
 8001470:	08004344 	.word	0x08004344
 8001474:	08004344 	.word	0x08004344
 8001478:	08004344 	.word	0x08004344
 800147c:	08004348 	.word	0x08004348

08001480 <memset>:
 8001480:	4402      	add	r2, r0
 8001482:	4603      	mov	r3, r0
 8001484:	4293      	cmp	r3, r2
 8001486:	d100      	bne.n	800148a <memset+0xa>
 8001488:	4770      	bx	lr
 800148a:	f803 1b01 	strb.w	r1, [r3], #1
 800148e:	e7f9      	b.n	8001484 <memset+0x4>

08001490 <__cvt>:
 8001490:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001494:	ec55 4b10 	vmov	r4, r5, d0
 8001498:	2d00      	cmp	r5, #0
 800149a:	460e      	mov	r6, r1
 800149c:	4619      	mov	r1, r3
 800149e:	462b      	mov	r3, r5
 80014a0:	bfbb      	ittet	lt
 80014a2:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 80014a6:	461d      	movlt	r5, r3
 80014a8:	2300      	movge	r3, #0
 80014aa:	232d      	movlt	r3, #45	; 0x2d
 80014ac:	700b      	strb	r3, [r1, #0]
 80014ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80014b0:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80014b4:	4691      	mov	r9, r2
 80014b6:	f023 0820 	bic.w	r8, r3, #32
 80014ba:	bfbc      	itt	lt
 80014bc:	4622      	movlt	r2, r4
 80014be:	4614      	movlt	r4, r2
 80014c0:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80014c4:	d005      	beq.n	80014d2 <__cvt+0x42>
 80014c6:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80014ca:	d100      	bne.n	80014ce <__cvt+0x3e>
 80014cc:	3601      	adds	r6, #1
 80014ce:	2102      	movs	r1, #2
 80014d0:	e000      	b.n	80014d4 <__cvt+0x44>
 80014d2:	2103      	movs	r1, #3
 80014d4:	ab03      	add	r3, sp, #12
 80014d6:	9301      	str	r3, [sp, #4]
 80014d8:	ab02      	add	r3, sp, #8
 80014da:	9300      	str	r3, [sp, #0]
 80014dc:	ec45 4b10 	vmov	d0, r4, r5
 80014e0:	4653      	mov	r3, sl
 80014e2:	4632      	mov	r2, r6
 80014e4:	f000 fccc 	bl	8001e80 <_dtoa_r>
 80014e8:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80014ec:	4607      	mov	r7, r0
 80014ee:	d102      	bne.n	80014f6 <__cvt+0x66>
 80014f0:	f019 0f01 	tst.w	r9, #1
 80014f4:	d022      	beq.n	800153c <__cvt+0xac>
 80014f6:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80014fa:	eb07 0906 	add.w	r9, r7, r6
 80014fe:	d110      	bne.n	8001522 <__cvt+0x92>
 8001500:	783b      	ldrb	r3, [r7, #0]
 8001502:	2b30      	cmp	r3, #48	; 0x30
 8001504:	d10a      	bne.n	800151c <__cvt+0x8c>
 8001506:	2200      	movs	r2, #0
 8001508:	2300      	movs	r3, #0
 800150a:	4620      	mov	r0, r4
 800150c:	4629      	mov	r1, r5
 800150e:	f7ff fadb 	bl	8000ac8 <__aeabi_dcmpeq>
 8001512:	b918      	cbnz	r0, 800151c <__cvt+0x8c>
 8001514:	f1c6 0601 	rsb	r6, r6, #1
 8001518:	f8ca 6000 	str.w	r6, [sl]
 800151c:	f8da 3000 	ldr.w	r3, [sl]
 8001520:	4499      	add	r9, r3
 8001522:	2200      	movs	r2, #0
 8001524:	2300      	movs	r3, #0
 8001526:	4620      	mov	r0, r4
 8001528:	4629      	mov	r1, r5
 800152a:	f7ff facd 	bl	8000ac8 <__aeabi_dcmpeq>
 800152e:	b108      	cbz	r0, 8001534 <__cvt+0xa4>
 8001530:	f8cd 900c 	str.w	r9, [sp, #12]
 8001534:	2230      	movs	r2, #48	; 0x30
 8001536:	9b03      	ldr	r3, [sp, #12]
 8001538:	454b      	cmp	r3, r9
 800153a:	d307      	bcc.n	800154c <__cvt+0xbc>
 800153c:	9b03      	ldr	r3, [sp, #12]
 800153e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001540:	1bdb      	subs	r3, r3, r7
 8001542:	4638      	mov	r0, r7
 8001544:	6013      	str	r3, [r2, #0]
 8001546:	b004      	add	sp, #16
 8001548:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800154c:	1c59      	adds	r1, r3, #1
 800154e:	9103      	str	r1, [sp, #12]
 8001550:	701a      	strb	r2, [r3, #0]
 8001552:	e7f0      	b.n	8001536 <__cvt+0xa6>

08001554 <__exponent>:
 8001554:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001556:	4603      	mov	r3, r0
 8001558:	2900      	cmp	r1, #0
 800155a:	bfb8      	it	lt
 800155c:	4249      	neglt	r1, r1
 800155e:	f803 2b02 	strb.w	r2, [r3], #2
 8001562:	bfb4      	ite	lt
 8001564:	222d      	movlt	r2, #45	; 0x2d
 8001566:	222b      	movge	r2, #43	; 0x2b
 8001568:	2909      	cmp	r1, #9
 800156a:	7042      	strb	r2, [r0, #1]
 800156c:	dd2a      	ble.n	80015c4 <__exponent+0x70>
 800156e:	f10d 0407 	add.w	r4, sp, #7
 8001572:	46a4      	mov	ip, r4
 8001574:	270a      	movs	r7, #10
 8001576:	46a6      	mov	lr, r4
 8001578:	460a      	mov	r2, r1
 800157a:	fb91 f6f7 	sdiv	r6, r1, r7
 800157e:	fb07 1516 	mls	r5, r7, r6, r1
 8001582:	3530      	adds	r5, #48	; 0x30
 8001584:	2a63      	cmp	r2, #99	; 0x63
 8001586:	f104 34ff 	add.w	r4, r4, #4294967295
 800158a:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800158e:	4631      	mov	r1, r6
 8001590:	dcf1      	bgt.n	8001576 <__exponent+0x22>
 8001592:	3130      	adds	r1, #48	; 0x30
 8001594:	f1ae 0502 	sub.w	r5, lr, #2
 8001598:	f804 1c01 	strb.w	r1, [r4, #-1]
 800159c:	1c44      	adds	r4, r0, #1
 800159e:	4629      	mov	r1, r5
 80015a0:	4561      	cmp	r1, ip
 80015a2:	d30a      	bcc.n	80015ba <__exponent+0x66>
 80015a4:	f10d 0209 	add.w	r2, sp, #9
 80015a8:	eba2 020e 	sub.w	r2, r2, lr
 80015ac:	4565      	cmp	r5, ip
 80015ae:	bf88      	it	hi
 80015b0:	2200      	movhi	r2, #0
 80015b2:	4413      	add	r3, r2
 80015b4:	1a18      	subs	r0, r3, r0
 80015b6:	b003      	add	sp, #12
 80015b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015ba:	f811 2b01 	ldrb.w	r2, [r1], #1
 80015be:	f804 2f01 	strb.w	r2, [r4, #1]!
 80015c2:	e7ed      	b.n	80015a0 <__exponent+0x4c>
 80015c4:	2330      	movs	r3, #48	; 0x30
 80015c6:	3130      	adds	r1, #48	; 0x30
 80015c8:	7083      	strb	r3, [r0, #2]
 80015ca:	70c1      	strb	r1, [r0, #3]
 80015cc:	1d03      	adds	r3, r0, #4
 80015ce:	e7f1      	b.n	80015b4 <__exponent+0x60>

080015d0 <_printf_float>:
 80015d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80015d4:	ed2d 8b02 	vpush	{d8}
 80015d8:	b08d      	sub	sp, #52	; 0x34
 80015da:	460c      	mov	r4, r1
 80015dc:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 80015e0:	4616      	mov	r6, r2
 80015e2:	461f      	mov	r7, r3
 80015e4:	4605      	mov	r5, r0
 80015e6:	f001 fa39 	bl	8002a5c <_localeconv_r>
 80015ea:	f8d0 a000 	ldr.w	sl, [r0]
 80015ee:	4650      	mov	r0, sl
 80015f0:	f7fe fdee 	bl	80001d0 <strlen>
 80015f4:	2300      	movs	r3, #0
 80015f6:	930a      	str	r3, [sp, #40]	; 0x28
 80015f8:	6823      	ldr	r3, [r4, #0]
 80015fa:	9305      	str	r3, [sp, #20]
 80015fc:	f8d8 3000 	ldr.w	r3, [r8]
 8001600:	f894 b018 	ldrb.w	fp, [r4, #24]
 8001604:	3307      	adds	r3, #7
 8001606:	f023 0307 	bic.w	r3, r3, #7
 800160a:	f103 0208 	add.w	r2, r3, #8
 800160e:	f8c8 2000 	str.w	r2, [r8]
 8001612:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001616:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800161a:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 800161e:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8001622:	9307      	str	r3, [sp, #28]
 8001624:	f8cd 8018 	str.w	r8, [sp, #24]
 8001628:	ee08 0a10 	vmov	s16, r0
 800162c:	4b9f      	ldr	r3, [pc, #636]	; (80018ac <_printf_float+0x2dc>)
 800162e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001632:	f04f 32ff 	mov.w	r2, #4294967295
 8001636:	f7ff fa79 	bl	8000b2c <__aeabi_dcmpun>
 800163a:	bb88      	cbnz	r0, 80016a0 <_printf_float+0xd0>
 800163c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001640:	4b9a      	ldr	r3, [pc, #616]	; (80018ac <_printf_float+0x2dc>)
 8001642:	f04f 32ff 	mov.w	r2, #4294967295
 8001646:	f7ff fa53 	bl	8000af0 <__aeabi_dcmple>
 800164a:	bb48      	cbnz	r0, 80016a0 <_printf_float+0xd0>
 800164c:	2200      	movs	r2, #0
 800164e:	2300      	movs	r3, #0
 8001650:	4640      	mov	r0, r8
 8001652:	4649      	mov	r1, r9
 8001654:	f7ff fa42 	bl	8000adc <__aeabi_dcmplt>
 8001658:	b110      	cbz	r0, 8001660 <_printf_float+0x90>
 800165a:	232d      	movs	r3, #45	; 0x2d
 800165c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001660:	4b93      	ldr	r3, [pc, #588]	; (80018b0 <_printf_float+0x2e0>)
 8001662:	4894      	ldr	r0, [pc, #592]	; (80018b4 <_printf_float+0x2e4>)
 8001664:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8001668:	bf94      	ite	ls
 800166a:	4698      	movls	r8, r3
 800166c:	4680      	movhi	r8, r0
 800166e:	2303      	movs	r3, #3
 8001670:	6123      	str	r3, [r4, #16]
 8001672:	9b05      	ldr	r3, [sp, #20]
 8001674:	f023 0204 	bic.w	r2, r3, #4
 8001678:	6022      	str	r2, [r4, #0]
 800167a:	f04f 0900 	mov.w	r9, #0
 800167e:	9700      	str	r7, [sp, #0]
 8001680:	4633      	mov	r3, r6
 8001682:	aa0b      	add	r2, sp, #44	; 0x2c
 8001684:	4621      	mov	r1, r4
 8001686:	4628      	mov	r0, r5
 8001688:	f000 f9d8 	bl	8001a3c <_printf_common>
 800168c:	3001      	adds	r0, #1
 800168e:	f040 8090 	bne.w	80017b2 <_printf_float+0x1e2>
 8001692:	f04f 30ff 	mov.w	r0, #4294967295
 8001696:	b00d      	add	sp, #52	; 0x34
 8001698:	ecbd 8b02 	vpop	{d8}
 800169c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80016a0:	4642      	mov	r2, r8
 80016a2:	464b      	mov	r3, r9
 80016a4:	4640      	mov	r0, r8
 80016a6:	4649      	mov	r1, r9
 80016a8:	f7ff fa40 	bl	8000b2c <__aeabi_dcmpun>
 80016ac:	b140      	cbz	r0, 80016c0 <_printf_float+0xf0>
 80016ae:	464b      	mov	r3, r9
 80016b0:	2b00      	cmp	r3, #0
 80016b2:	bfbc      	itt	lt
 80016b4:	232d      	movlt	r3, #45	; 0x2d
 80016b6:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 80016ba:	487f      	ldr	r0, [pc, #508]	; (80018b8 <_printf_float+0x2e8>)
 80016bc:	4b7f      	ldr	r3, [pc, #508]	; (80018bc <_printf_float+0x2ec>)
 80016be:	e7d1      	b.n	8001664 <_printf_float+0x94>
 80016c0:	6863      	ldr	r3, [r4, #4]
 80016c2:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 80016c6:	9206      	str	r2, [sp, #24]
 80016c8:	1c5a      	adds	r2, r3, #1
 80016ca:	d13f      	bne.n	800174c <_printf_float+0x17c>
 80016cc:	2306      	movs	r3, #6
 80016ce:	6063      	str	r3, [r4, #4]
 80016d0:	9b05      	ldr	r3, [sp, #20]
 80016d2:	6861      	ldr	r1, [r4, #4]
 80016d4:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 80016d8:	2300      	movs	r3, #0
 80016da:	9303      	str	r3, [sp, #12]
 80016dc:	ab0a      	add	r3, sp, #40	; 0x28
 80016de:	e9cd b301 	strd	fp, r3, [sp, #4]
 80016e2:	ab09      	add	r3, sp, #36	; 0x24
 80016e4:	ec49 8b10 	vmov	d0, r8, r9
 80016e8:	9300      	str	r3, [sp, #0]
 80016ea:	6022      	str	r2, [r4, #0]
 80016ec:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 80016f0:	4628      	mov	r0, r5
 80016f2:	f7ff fecd 	bl	8001490 <__cvt>
 80016f6:	9b06      	ldr	r3, [sp, #24]
 80016f8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80016fa:	2b47      	cmp	r3, #71	; 0x47
 80016fc:	4680      	mov	r8, r0
 80016fe:	d108      	bne.n	8001712 <_printf_float+0x142>
 8001700:	1cc8      	adds	r0, r1, #3
 8001702:	db02      	blt.n	800170a <_printf_float+0x13a>
 8001704:	6863      	ldr	r3, [r4, #4]
 8001706:	4299      	cmp	r1, r3
 8001708:	dd41      	ble.n	800178e <_printf_float+0x1be>
 800170a:	f1ab 0b02 	sub.w	fp, fp, #2
 800170e:	fa5f fb8b 	uxtb.w	fp, fp
 8001712:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8001716:	d820      	bhi.n	800175a <_printf_float+0x18a>
 8001718:	3901      	subs	r1, #1
 800171a:	465a      	mov	r2, fp
 800171c:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001720:	9109      	str	r1, [sp, #36]	; 0x24
 8001722:	f7ff ff17 	bl	8001554 <__exponent>
 8001726:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001728:	1813      	adds	r3, r2, r0
 800172a:	2a01      	cmp	r2, #1
 800172c:	4681      	mov	r9, r0
 800172e:	6123      	str	r3, [r4, #16]
 8001730:	dc02      	bgt.n	8001738 <_printf_float+0x168>
 8001732:	6822      	ldr	r2, [r4, #0]
 8001734:	07d2      	lsls	r2, r2, #31
 8001736:	d501      	bpl.n	800173c <_printf_float+0x16c>
 8001738:	3301      	adds	r3, #1
 800173a:	6123      	str	r3, [r4, #16]
 800173c:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8001740:	2b00      	cmp	r3, #0
 8001742:	d09c      	beq.n	800167e <_printf_float+0xae>
 8001744:	232d      	movs	r3, #45	; 0x2d
 8001746:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800174a:	e798      	b.n	800167e <_printf_float+0xae>
 800174c:	9a06      	ldr	r2, [sp, #24]
 800174e:	2a47      	cmp	r2, #71	; 0x47
 8001750:	d1be      	bne.n	80016d0 <_printf_float+0x100>
 8001752:	2b00      	cmp	r3, #0
 8001754:	d1bc      	bne.n	80016d0 <_printf_float+0x100>
 8001756:	2301      	movs	r3, #1
 8001758:	e7b9      	b.n	80016ce <_printf_float+0xfe>
 800175a:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 800175e:	d118      	bne.n	8001792 <_printf_float+0x1c2>
 8001760:	2900      	cmp	r1, #0
 8001762:	6863      	ldr	r3, [r4, #4]
 8001764:	dd0b      	ble.n	800177e <_printf_float+0x1ae>
 8001766:	6121      	str	r1, [r4, #16]
 8001768:	b913      	cbnz	r3, 8001770 <_printf_float+0x1a0>
 800176a:	6822      	ldr	r2, [r4, #0]
 800176c:	07d0      	lsls	r0, r2, #31
 800176e:	d502      	bpl.n	8001776 <_printf_float+0x1a6>
 8001770:	3301      	adds	r3, #1
 8001772:	440b      	add	r3, r1
 8001774:	6123      	str	r3, [r4, #16]
 8001776:	65a1      	str	r1, [r4, #88]	; 0x58
 8001778:	f04f 0900 	mov.w	r9, #0
 800177c:	e7de      	b.n	800173c <_printf_float+0x16c>
 800177e:	b913      	cbnz	r3, 8001786 <_printf_float+0x1b6>
 8001780:	6822      	ldr	r2, [r4, #0]
 8001782:	07d2      	lsls	r2, r2, #31
 8001784:	d501      	bpl.n	800178a <_printf_float+0x1ba>
 8001786:	3302      	adds	r3, #2
 8001788:	e7f4      	b.n	8001774 <_printf_float+0x1a4>
 800178a:	2301      	movs	r3, #1
 800178c:	e7f2      	b.n	8001774 <_printf_float+0x1a4>
 800178e:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8001792:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001794:	4299      	cmp	r1, r3
 8001796:	db05      	blt.n	80017a4 <_printf_float+0x1d4>
 8001798:	6823      	ldr	r3, [r4, #0]
 800179a:	6121      	str	r1, [r4, #16]
 800179c:	07d8      	lsls	r0, r3, #31
 800179e:	d5ea      	bpl.n	8001776 <_printf_float+0x1a6>
 80017a0:	1c4b      	adds	r3, r1, #1
 80017a2:	e7e7      	b.n	8001774 <_printf_float+0x1a4>
 80017a4:	2900      	cmp	r1, #0
 80017a6:	bfd4      	ite	le
 80017a8:	f1c1 0202 	rsble	r2, r1, #2
 80017ac:	2201      	movgt	r2, #1
 80017ae:	4413      	add	r3, r2
 80017b0:	e7e0      	b.n	8001774 <_printf_float+0x1a4>
 80017b2:	6823      	ldr	r3, [r4, #0]
 80017b4:	055a      	lsls	r2, r3, #21
 80017b6:	d407      	bmi.n	80017c8 <_printf_float+0x1f8>
 80017b8:	6923      	ldr	r3, [r4, #16]
 80017ba:	4642      	mov	r2, r8
 80017bc:	4631      	mov	r1, r6
 80017be:	4628      	mov	r0, r5
 80017c0:	47b8      	blx	r7
 80017c2:	3001      	adds	r0, #1
 80017c4:	d12c      	bne.n	8001820 <_printf_float+0x250>
 80017c6:	e764      	b.n	8001692 <_printf_float+0xc2>
 80017c8:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 80017cc:	f240 80e0 	bls.w	8001990 <_printf_float+0x3c0>
 80017d0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80017d4:	2200      	movs	r2, #0
 80017d6:	2300      	movs	r3, #0
 80017d8:	f7ff f976 	bl	8000ac8 <__aeabi_dcmpeq>
 80017dc:	2800      	cmp	r0, #0
 80017de:	d034      	beq.n	800184a <_printf_float+0x27a>
 80017e0:	4a37      	ldr	r2, [pc, #220]	; (80018c0 <_printf_float+0x2f0>)
 80017e2:	2301      	movs	r3, #1
 80017e4:	4631      	mov	r1, r6
 80017e6:	4628      	mov	r0, r5
 80017e8:	47b8      	blx	r7
 80017ea:	3001      	adds	r0, #1
 80017ec:	f43f af51 	beq.w	8001692 <_printf_float+0xc2>
 80017f0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80017f4:	429a      	cmp	r2, r3
 80017f6:	db02      	blt.n	80017fe <_printf_float+0x22e>
 80017f8:	6823      	ldr	r3, [r4, #0]
 80017fa:	07d8      	lsls	r0, r3, #31
 80017fc:	d510      	bpl.n	8001820 <_printf_float+0x250>
 80017fe:	ee18 3a10 	vmov	r3, s16
 8001802:	4652      	mov	r2, sl
 8001804:	4631      	mov	r1, r6
 8001806:	4628      	mov	r0, r5
 8001808:	47b8      	blx	r7
 800180a:	3001      	adds	r0, #1
 800180c:	f43f af41 	beq.w	8001692 <_printf_float+0xc2>
 8001810:	f04f 0800 	mov.w	r8, #0
 8001814:	f104 091a 	add.w	r9, r4, #26
 8001818:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800181a:	3b01      	subs	r3, #1
 800181c:	4543      	cmp	r3, r8
 800181e:	dc09      	bgt.n	8001834 <_printf_float+0x264>
 8001820:	6823      	ldr	r3, [r4, #0]
 8001822:	079b      	lsls	r3, r3, #30
 8001824:	f100 8105 	bmi.w	8001a32 <_printf_float+0x462>
 8001828:	68e0      	ldr	r0, [r4, #12]
 800182a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800182c:	4298      	cmp	r0, r3
 800182e:	bfb8      	it	lt
 8001830:	4618      	movlt	r0, r3
 8001832:	e730      	b.n	8001696 <_printf_float+0xc6>
 8001834:	2301      	movs	r3, #1
 8001836:	464a      	mov	r2, r9
 8001838:	4631      	mov	r1, r6
 800183a:	4628      	mov	r0, r5
 800183c:	47b8      	blx	r7
 800183e:	3001      	adds	r0, #1
 8001840:	f43f af27 	beq.w	8001692 <_printf_float+0xc2>
 8001844:	f108 0801 	add.w	r8, r8, #1
 8001848:	e7e6      	b.n	8001818 <_printf_float+0x248>
 800184a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800184c:	2b00      	cmp	r3, #0
 800184e:	dc39      	bgt.n	80018c4 <_printf_float+0x2f4>
 8001850:	4a1b      	ldr	r2, [pc, #108]	; (80018c0 <_printf_float+0x2f0>)
 8001852:	2301      	movs	r3, #1
 8001854:	4631      	mov	r1, r6
 8001856:	4628      	mov	r0, r5
 8001858:	47b8      	blx	r7
 800185a:	3001      	adds	r0, #1
 800185c:	f43f af19 	beq.w	8001692 <_printf_float+0xc2>
 8001860:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001864:	4313      	orrs	r3, r2
 8001866:	d102      	bne.n	800186e <_printf_float+0x29e>
 8001868:	6823      	ldr	r3, [r4, #0]
 800186a:	07d9      	lsls	r1, r3, #31
 800186c:	d5d8      	bpl.n	8001820 <_printf_float+0x250>
 800186e:	ee18 3a10 	vmov	r3, s16
 8001872:	4652      	mov	r2, sl
 8001874:	4631      	mov	r1, r6
 8001876:	4628      	mov	r0, r5
 8001878:	47b8      	blx	r7
 800187a:	3001      	adds	r0, #1
 800187c:	f43f af09 	beq.w	8001692 <_printf_float+0xc2>
 8001880:	f04f 0900 	mov.w	r9, #0
 8001884:	f104 0a1a 	add.w	sl, r4, #26
 8001888:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800188a:	425b      	negs	r3, r3
 800188c:	454b      	cmp	r3, r9
 800188e:	dc01      	bgt.n	8001894 <_printf_float+0x2c4>
 8001890:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001892:	e792      	b.n	80017ba <_printf_float+0x1ea>
 8001894:	2301      	movs	r3, #1
 8001896:	4652      	mov	r2, sl
 8001898:	4631      	mov	r1, r6
 800189a:	4628      	mov	r0, r5
 800189c:	47b8      	blx	r7
 800189e:	3001      	adds	r0, #1
 80018a0:	f43f aef7 	beq.w	8001692 <_printf_float+0xc2>
 80018a4:	f109 0901 	add.w	r9, r9, #1
 80018a8:	e7ee      	b.n	8001888 <_printf_float+0x2b8>
 80018aa:	bf00      	nop
 80018ac:	7fefffff 	.word	0x7fefffff
 80018b0:	08003f6c 	.word	0x08003f6c
 80018b4:	08003f70 	.word	0x08003f70
 80018b8:	08003f78 	.word	0x08003f78
 80018bc:	08003f74 	.word	0x08003f74
 80018c0:	08003f7c 	.word	0x08003f7c
 80018c4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80018c6:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80018c8:	429a      	cmp	r2, r3
 80018ca:	bfa8      	it	ge
 80018cc:	461a      	movge	r2, r3
 80018ce:	2a00      	cmp	r2, #0
 80018d0:	4691      	mov	r9, r2
 80018d2:	dc37      	bgt.n	8001944 <_printf_float+0x374>
 80018d4:	f04f 0b00 	mov.w	fp, #0
 80018d8:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80018dc:	f104 021a 	add.w	r2, r4, #26
 80018e0:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80018e2:	9305      	str	r3, [sp, #20]
 80018e4:	eba3 0309 	sub.w	r3, r3, r9
 80018e8:	455b      	cmp	r3, fp
 80018ea:	dc33      	bgt.n	8001954 <_printf_float+0x384>
 80018ec:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80018f0:	429a      	cmp	r2, r3
 80018f2:	db3b      	blt.n	800196c <_printf_float+0x39c>
 80018f4:	6823      	ldr	r3, [r4, #0]
 80018f6:	07da      	lsls	r2, r3, #31
 80018f8:	d438      	bmi.n	800196c <_printf_float+0x39c>
 80018fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80018fc:	9a05      	ldr	r2, [sp, #20]
 80018fe:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001900:	1a9a      	subs	r2, r3, r2
 8001902:	eba3 0901 	sub.w	r9, r3, r1
 8001906:	4591      	cmp	r9, r2
 8001908:	bfa8      	it	ge
 800190a:	4691      	movge	r9, r2
 800190c:	f1b9 0f00 	cmp.w	r9, #0
 8001910:	dc35      	bgt.n	800197e <_printf_float+0x3ae>
 8001912:	f04f 0800 	mov.w	r8, #0
 8001916:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800191a:	f104 0a1a 	add.w	sl, r4, #26
 800191e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001922:	1a9b      	subs	r3, r3, r2
 8001924:	eba3 0309 	sub.w	r3, r3, r9
 8001928:	4543      	cmp	r3, r8
 800192a:	f77f af79 	ble.w	8001820 <_printf_float+0x250>
 800192e:	2301      	movs	r3, #1
 8001930:	4652      	mov	r2, sl
 8001932:	4631      	mov	r1, r6
 8001934:	4628      	mov	r0, r5
 8001936:	47b8      	blx	r7
 8001938:	3001      	adds	r0, #1
 800193a:	f43f aeaa 	beq.w	8001692 <_printf_float+0xc2>
 800193e:	f108 0801 	add.w	r8, r8, #1
 8001942:	e7ec      	b.n	800191e <_printf_float+0x34e>
 8001944:	4613      	mov	r3, r2
 8001946:	4631      	mov	r1, r6
 8001948:	4642      	mov	r2, r8
 800194a:	4628      	mov	r0, r5
 800194c:	47b8      	blx	r7
 800194e:	3001      	adds	r0, #1
 8001950:	d1c0      	bne.n	80018d4 <_printf_float+0x304>
 8001952:	e69e      	b.n	8001692 <_printf_float+0xc2>
 8001954:	2301      	movs	r3, #1
 8001956:	4631      	mov	r1, r6
 8001958:	4628      	mov	r0, r5
 800195a:	9205      	str	r2, [sp, #20]
 800195c:	47b8      	blx	r7
 800195e:	3001      	adds	r0, #1
 8001960:	f43f ae97 	beq.w	8001692 <_printf_float+0xc2>
 8001964:	9a05      	ldr	r2, [sp, #20]
 8001966:	f10b 0b01 	add.w	fp, fp, #1
 800196a:	e7b9      	b.n	80018e0 <_printf_float+0x310>
 800196c:	ee18 3a10 	vmov	r3, s16
 8001970:	4652      	mov	r2, sl
 8001972:	4631      	mov	r1, r6
 8001974:	4628      	mov	r0, r5
 8001976:	47b8      	blx	r7
 8001978:	3001      	adds	r0, #1
 800197a:	d1be      	bne.n	80018fa <_printf_float+0x32a>
 800197c:	e689      	b.n	8001692 <_printf_float+0xc2>
 800197e:	9a05      	ldr	r2, [sp, #20]
 8001980:	464b      	mov	r3, r9
 8001982:	4442      	add	r2, r8
 8001984:	4631      	mov	r1, r6
 8001986:	4628      	mov	r0, r5
 8001988:	47b8      	blx	r7
 800198a:	3001      	adds	r0, #1
 800198c:	d1c1      	bne.n	8001912 <_printf_float+0x342>
 800198e:	e680      	b.n	8001692 <_printf_float+0xc2>
 8001990:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001992:	2a01      	cmp	r2, #1
 8001994:	dc01      	bgt.n	800199a <_printf_float+0x3ca>
 8001996:	07db      	lsls	r3, r3, #31
 8001998:	d538      	bpl.n	8001a0c <_printf_float+0x43c>
 800199a:	2301      	movs	r3, #1
 800199c:	4642      	mov	r2, r8
 800199e:	4631      	mov	r1, r6
 80019a0:	4628      	mov	r0, r5
 80019a2:	47b8      	blx	r7
 80019a4:	3001      	adds	r0, #1
 80019a6:	f43f ae74 	beq.w	8001692 <_printf_float+0xc2>
 80019aa:	ee18 3a10 	vmov	r3, s16
 80019ae:	4652      	mov	r2, sl
 80019b0:	4631      	mov	r1, r6
 80019b2:	4628      	mov	r0, r5
 80019b4:	47b8      	blx	r7
 80019b6:	3001      	adds	r0, #1
 80019b8:	f43f ae6b 	beq.w	8001692 <_printf_float+0xc2>
 80019bc:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80019c0:	2200      	movs	r2, #0
 80019c2:	2300      	movs	r3, #0
 80019c4:	f7ff f880 	bl	8000ac8 <__aeabi_dcmpeq>
 80019c8:	b9d8      	cbnz	r0, 8001a02 <_printf_float+0x432>
 80019ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80019cc:	f108 0201 	add.w	r2, r8, #1
 80019d0:	3b01      	subs	r3, #1
 80019d2:	4631      	mov	r1, r6
 80019d4:	4628      	mov	r0, r5
 80019d6:	47b8      	blx	r7
 80019d8:	3001      	adds	r0, #1
 80019da:	d10e      	bne.n	80019fa <_printf_float+0x42a>
 80019dc:	e659      	b.n	8001692 <_printf_float+0xc2>
 80019de:	2301      	movs	r3, #1
 80019e0:	4652      	mov	r2, sl
 80019e2:	4631      	mov	r1, r6
 80019e4:	4628      	mov	r0, r5
 80019e6:	47b8      	blx	r7
 80019e8:	3001      	adds	r0, #1
 80019ea:	f43f ae52 	beq.w	8001692 <_printf_float+0xc2>
 80019ee:	f108 0801 	add.w	r8, r8, #1
 80019f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80019f4:	3b01      	subs	r3, #1
 80019f6:	4543      	cmp	r3, r8
 80019f8:	dcf1      	bgt.n	80019de <_printf_float+0x40e>
 80019fa:	464b      	mov	r3, r9
 80019fc:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8001a00:	e6dc      	b.n	80017bc <_printf_float+0x1ec>
 8001a02:	f04f 0800 	mov.w	r8, #0
 8001a06:	f104 0a1a 	add.w	sl, r4, #26
 8001a0a:	e7f2      	b.n	80019f2 <_printf_float+0x422>
 8001a0c:	2301      	movs	r3, #1
 8001a0e:	4642      	mov	r2, r8
 8001a10:	e7df      	b.n	80019d2 <_printf_float+0x402>
 8001a12:	2301      	movs	r3, #1
 8001a14:	464a      	mov	r2, r9
 8001a16:	4631      	mov	r1, r6
 8001a18:	4628      	mov	r0, r5
 8001a1a:	47b8      	blx	r7
 8001a1c:	3001      	adds	r0, #1
 8001a1e:	f43f ae38 	beq.w	8001692 <_printf_float+0xc2>
 8001a22:	f108 0801 	add.w	r8, r8, #1
 8001a26:	68e3      	ldr	r3, [r4, #12]
 8001a28:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001a2a:	1a5b      	subs	r3, r3, r1
 8001a2c:	4543      	cmp	r3, r8
 8001a2e:	dcf0      	bgt.n	8001a12 <_printf_float+0x442>
 8001a30:	e6fa      	b.n	8001828 <_printf_float+0x258>
 8001a32:	f04f 0800 	mov.w	r8, #0
 8001a36:	f104 0919 	add.w	r9, r4, #25
 8001a3a:	e7f4      	b.n	8001a26 <_printf_float+0x456>

08001a3c <_printf_common>:
 8001a3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001a40:	4616      	mov	r6, r2
 8001a42:	4699      	mov	r9, r3
 8001a44:	688a      	ldr	r2, [r1, #8]
 8001a46:	690b      	ldr	r3, [r1, #16]
 8001a48:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001a4c:	4293      	cmp	r3, r2
 8001a4e:	bfb8      	it	lt
 8001a50:	4613      	movlt	r3, r2
 8001a52:	6033      	str	r3, [r6, #0]
 8001a54:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001a58:	4607      	mov	r7, r0
 8001a5a:	460c      	mov	r4, r1
 8001a5c:	b10a      	cbz	r2, 8001a62 <_printf_common+0x26>
 8001a5e:	3301      	adds	r3, #1
 8001a60:	6033      	str	r3, [r6, #0]
 8001a62:	6823      	ldr	r3, [r4, #0]
 8001a64:	0699      	lsls	r1, r3, #26
 8001a66:	bf42      	ittt	mi
 8001a68:	6833      	ldrmi	r3, [r6, #0]
 8001a6a:	3302      	addmi	r3, #2
 8001a6c:	6033      	strmi	r3, [r6, #0]
 8001a6e:	6825      	ldr	r5, [r4, #0]
 8001a70:	f015 0506 	ands.w	r5, r5, #6
 8001a74:	d106      	bne.n	8001a84 <_printf_common+0x48>
 8001a76:	f104 0a19 	add.w	sl, r4, #25
 8001a7a:	68e3      	ldr	r3, [r4, #12]
 8001a7c:	6832      	ldr	r2, [r6, #0]
 8001a7e:	1a9b      	subs	r3, r3, r2
 8001a80:	42ab      	cmp	r3, r5
 8001a82:	dc26      	bgt.n	8001ad2 <_printf_common+0x96>
 8001a84:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001a88:	1e13      	subs	r3, r2, #0
 8001a8a:	6822      	ldr	r2, [r4, #0]
 8001a8c:	bf18      	it	ne
 8001a8e:	2301      	movne	r3, #1
 8001a90:	0692      	lsls	r2, r2, #26
 8001a92:	d42b      	bmi.n	8001aec <_printf_common+0xb0>
 8001a94:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001a98:	4649      	mov	r1, r9
 8001a9a:	4638      	mov	r0, r7
 8001a9c:	47c0      	blx	r8
 8001a9e:	3001      	adds	r0, #1
 8001aa0:	d01e      	beq.n	8001ae0 <_printf_common+0xa4>
 8001aa2:	6823      	ldr	r3, [r4, #0]
 8001aa4:	68e5      	ldr	r5, [r4, #12]
 8001aa6:	6832      	ldr	r2, [r6, #0]
 8001aa8:	f003 0306 	and.w	r3, r3, #6
 8001aac:	2b04      	cmp	r3, #4
 8001aae:	bf08      	it	eq
 8001ab0:	1aad      	subeq	r5, r5, r2
 8001ab2:	68a3      	ldr	r3, [r4, #8]
 8001ab4:	6922      	ldr	r2, [r4, #16]
 8001ab6:	bf0c      	ite	eq
 8001ab8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001abc:	2500      	movne	r5, #0
 8001abe:	4293      	cmp	r3, r2
 8001ac0:	bfc4      	itt	gt
 8001ac2:	1a9b      	subgt	r3, r3, r2
 8001ac4:	18ed      	addgt	r5, r5, r3
 8001ac6:	2600      	movs	r6, #0
 8001ac8:	341a      	adds	r4, #26
 8001aca:	42b5      	cmp	r5, r6
 8001acc:	d11a      	bne.n	8001b04 <_printf_common+0xc8>
 8001ace:	2000      	movs	r0, #0
 8001ad0:	e008      	b.n	8001ae4 <_printf_common+0xa8>
 8001ad2:	2301      	movs	r3, #1
 8001ad4:	4652      	mov	r2, sl
 8001ad6:	4649      	mov	r1, r9
 8001ad8:	4638      	mov	r0, r7
 8001ada:	47c0      	blx	r8
 8001adc:	3001      	adds	r0, #1
 8001ade:	d103      	bne.n	8001ae8 <_printf_common+0xac>
 8001ae0:	f04f 30ff 	mov.w	r0, #4294967295
 8001ae4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001ae8:	3501      	adds	r5, #1
 8001aea:	e7c6      	b.n	8001a7a <_printf_common+0x3e>
 8001aec:	18e1      	adds	r1, r4, r3
 8001aee:	1c5a      	adds	r2, r3, #1
 8001af0:	2030      	movs	r0, #48	; 0x30
 8001af2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001af6:	4422      	add	r2, r4
 8001af8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001afc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001b00:	3302      	adds	r3, #2
 8001b02:	e7c7      	b.n	8001a94 <_printf_common+0x58>
 8001b04:	2301      	movs	r3, #1
 8001b06:	4622      	mov	r2, r4
 8001b08:	4649      	mov	r1, r9
 8001b0a:	4638      	mov	r0, r7
 8001b0c:	47c0      	blx	r8
 8001b0e:	3001      	adds	r0, #1
 8001b10:	d0e6      	beq.n	8001ae0 <_printf_common+0xa4>
 8001b12:	3601      	adds	r6, #1
 8001b14:	e7d9      	b.n	8001aca <_printf_common+0x8e>
	...

08001b18 <_printf_i>:
 8001b18:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001b1c:	7e0f      	ldrb	r7, [r1, #24]
 8001b1e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001b20:	2f78      	cmp	r7, #120	; 0x78
 8001b22:	4691      	mov	r9, r2
 8001b24:	4680      	mov	r8, r0
 8001b26:	460c      	mov	r4, r1
 8001b28:	469a      	mov	sl, r3
 8001b2a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8001b2e:	d807      	bhi.n	8001b40 <_printf_i+0x28>
 8001b30:	2f62      	cmp	r7, #98	; 0x62
 8001b32:	d80a      	bhi.n	8001b4a <_printf_i+0x32>
 8001b34:	2f00      	cmp	r7, #0
 8001b36:	f000 80d8 	beq.w	8001cea <_printf_i+0x1d2>
 8001b3a:	2f58      	cmp	r7, #88	; 0x58
 8001b3c:	f000 80a3 	beq.w	8001c86 <_printf_i+0x16e>
 8001b40:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001b44:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001b48:	e03a      	b.n	8001bc0 <_printf_i+0xa8>
 8001b4a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001b4e:	2b15      	cmp	r3, #21
 8001b50:	d8f6      	bhi.n	8001b40 <_printf_i+0x28>
 8001b52:	a101      	add	r1, pc, #4	; (adr r1, 8001b58 <_printf_i+0x40>)
 8001b54:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001b58:	08001bb1 	.word	0x08001bb1
 8001b5c:	08001bc5 	.word	0x08001bc5
 8001b60:	08001b41 	.word	0x08001b41
 8001b64:	08001b41 	.word	0x08001b41
 8001b68:	08001b41 	.word	0x08001b41
 8001b6c:	08001b41 	.word	0x08001b41
 8001b70:	08001bc5 	.word	0x08001bc5
 8001b74:	08001b41 	.word	0x08001b41
 8001b78:	08001b41 	.word	0x08001b41
 8001b7c:	08001b41 	.word	0x08001b41
 8001b80:	08001b41 	.word	0x08001b41
 8001b84:	08001cd1 	.word	0x08001cd1
 8001b88:	08001bf5 	.word	0x08001bf5
 8001b8c:	08001cb3 	.word	0x08001cb3
 8001b90:	08001b41 	.word	0x08001b41
 8001b94:	08001b41 	.word	0x08001b41
 8001b98:	08001cf3 	.word	0x08001cf3
 8001b9c:	08001b41 	.word	0x08001b41
 8001ba0:	08001bf5 	.word	0x08001bf5
 8001ba4:	08001b41 	.word	0x08001b41
 8001ba8:	08001b41 	.word	0x08001b41
 8001bac:	08001cbb 	.word	0x08001cbb
 8001bb0:	682b      	ldr	r3, [r5, #0]
 8001bb2:	1d1a      	adds	r2, r3, #4
 8001bb4:	681b      	ldr	r3, [r3, #0]
 8001bb6:	602a      	str	r2, [r5, #0]
 8001bb8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001bbc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001bc0:	2301      	movs	r3, #1
 8001bc2:	e0a3      	b.n	8001d0c <_printf_i+0x1f4>
 8001bc4:	6820      	ldr	r0, [r4, #0]
 8001bc6:	6829      	ldr	r1, [r5, #0]
 8001bc8:	0606      	lsls	r6, r0, #24
 8001bca:	f101 0304 	add.w	r3, r1, #4
 8001bce:	d50a      	bpl.n	8001be6 <_printf_i+0xce>
 8001bd0:	680e      	ldr	r6, [r1, #0]
 8001bd2:	602b      	str	r3, [r5, #0]
 8001bd4:	2e00      	cmp	r6, #0
 8001bd6:	da03      	bge.n	8001be0 <_printf_i+0xc8>
 8001bd8:	232d      	movs	r3, #45	; 0x2d
 8001bda:	4276      	negs	r6, r6
 8001bdc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001be0:	485e      	ldr	r0, [pc, #376]	; (8001d5c <_printf_i+0x244>)
 8001be2:	230a      	movs	r3, #10
 8001be4:	e019      	b.n	8001c1a <_printf_i+0x102>
 8001be6:	680e      	ldr	r6, [r1, #0]
 8001be8:	602b      	str	r3, [r5, #0]
 8001bea:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001bee:	bf18      	it	ne
 8001bf0:	b236      	sxthne	r6, r6
 8001bf2:	e7ef      	b.n	8001bd4 <_printf_i+0xbc>
 8001bf4:	682b      	ldr	r3, [r5, #0]
 8001bf6:	6820      	ldr	r0, [r4, #0]
 8001bf8:	1d19      	adds	r1, r3, #4
 8001bfa:	6029      	str	r1, [r5, #0]
 8001bfc:	0601      	lsls	r1, r0, #24
 8001bfe:	d501      	bpl.n	8001c04 <_printf_i+0xec>
 8001c00:	681e      	ldr	r6, [r3, #0]
 8001c02:	e002      	b.n	8001c0a <_printf_i+0xf2>
 8001c04:	0646      	lsls	r6, r0, #25
 8001c06:	d5fb      	bpl.n	8001c00 <_printf_i+0xe8>
 8001c08:	881e      	ldrh	r6, [r3, #0]
 8001c0a:	4854      	ldr	r0, [pc, #336]	; (8001d5c <_printf_i+0x244>)
 8001c0c:	2f6f      	cmp	r7, #111	; 0x6f
 8001c0e:	bf0c      	ite	eq
 8001c10:	2308      	moveq	r3, #8
 8001c12:	230a      	movne	r3, #10
 8001c14:	2100      	movs	r1, #0
 8001c16:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001c1a:	6865      	ldr	r5, [r4, #4]
 8001c1c:	60a5      	str	r5, [r4, #8]
 8001c1e:	2d00      	cmp	r5, #0
 8001c20:	bfa2      	ittt	ge
 8001c22:	6821      	ldrge	r1, [r4, #0]
 8001c24:	f021 0104 	bicge.w	r1, r1, #4
 8001c28:	6021      	strge	r1, [r4, #0]
 8001c2a:	b90e      	cbnz	r6, 8001c30 <_printf_i+0x118>
 8001c2c:	2d00      	cmp	r5, #0
 8001c2e:	d04d      	beq.n	8001ccc <_printf_i+0x1b4>
 8001c30:	4615      	mov	r5, r2
 8001c32:	fbb6 f1f3 	udiv	r1, r6, r3
 8001c36:	fb03 6711 	mls	r7, r3, r1, r6
 8001c3a:	5dc7      	ldrb	r7, [r0, r7]
 8001c3c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001c40:	4637      	mov	r7, r6
 8001c42:	42bb      	cmp	r3, r7
 8001c44:	460e      	mov	r6, r1
 8001c46:	d9f4      	bls.n	8001c32 <_printf_i+0x11a>
 8001c48:	2b08      	cmp	r3, #8
 8001c4a:	d10b      	bne.n	8001c64 <_printf_i+0x14c>
 8001c4c:	6823      	ldr	r3, [r4, #0]
 8001c4e:	07de      	lsls	r6, r3, #31
 8001c50:	d508      	bpl.n	8001c64 <_printf_i+0x14c>
 8001c52:	6923      	ldr	r3, [r4, #16]
 8001c54:	6861      	ldr	r1, [r4, #4]
 8001c56:	4299      	cmp	r1, r3
 8001c58:	bfde      	ittt	le
 8001c5a:	2330      	movle	r3, #48	; 0x30
 8001c5c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001c60:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001c64:	1b52      	subs	r2, r2, r5
 8001c66:	6122      	str	r2, [r4, #16]
 8001c68:	f8cd a000 	str.w	sl, [sp]
 8001c6c:	464b      	mov	r3, r9
 8001c6e:	aa03      	add	r2, sp, #12
 8001c70:	4621      	mov	r1, r4
 8001c72:	4640      	mov	r0, r8
 8001c74:	f7ff fee2 	bl	8001a3c <_printf_common>
 8001c78:	3001      	adds	r0, #1
 8001c7a:	d14c      	bne.n	8001d16 <_printf_i+0x1fe>
 8001c7c:	f04f 30ff 	mov.w	r0, #4294967295
 8001c80:	b004      	add	sp, #16
 8001c82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001c86:	4835      	ldr	r0, [pc, #212]	; (8001d5c <_printf_i+0x244>)
 8001c88:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8001c8c:	6829      	ldr	r1, [r5, #0]
 8001c8e:	6823      	ldr	r3, [r4, #0]
 8001c90:	f851 6b04 	ldr.w	r6, [r1], #4
 8001c94:	6029      	str	r1, [r5, #0]
 8001c96:	061d      	lsls	r5, r3, #24
 8001c98:	d514      	bpl.n	8001cc4 <_printf_i+0x1ac>
 8001c9a:	07df      	lsls	r7, r3, #31
 8001c9c:	bf44      	itt	mi
 8001c9e:	f043 0320 	orrmi.w	r3, r3, #32
 8001ca2:	6023      	strmi	r3, [r4, #0]
 8001ca4:	b91e      	cbnz	r6, 8001cae <_printf_i+0x196>
 8001ca6:	6823      	ldr	r3, [r4, #0]
 8001ca8:	f023 0320 	bic.w	r3, r3, #32
 8001cac:	6023      	str	r3, [r4, #0]
 8001cae:	2310      	movs	r3, #16
 8001cb0:	e7b0      	b.n	8001c14 <_printf_i+0xfc>
 8001cb2:	6823      	ldr	r3, [r4, #0]
 8001cb4:	f043 0320 	orr.w	r3, r3, #32
 8001cb8:	6023      	str	r3, [r4, #0]
 8001cba:	2378      	movs	r3, #120	; 0x78
 8001cbc:	4828      	ldr	r0, [pc, #160]	; (8001d60 <_printf_i+0x248>)
 8001cbe:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001cc2:	e7e3      	b.n	8001c8c <_printf_i+0x174>
 8001cc4:	0659      	lsls	r1, r3, #25
 8001cc6:	bf48      	it	mi
 8001cc8:	b2b6      	uxthmi	r6, r6
 8001cca:	e7e6      	b.n	8001c9a <_printf_i+0x182>
 8001ccc:	4615      	mov	r5, r2
 8001cce:	e7bb      	b.n	8001c48 <_printf_i+0x130>
 8001cd0:	682b      	ldr	r3, [r5, #0]
 8001cd2:	6826      	ldr	r6, [r4, #0]
 8001cd4:	6961      	ldr	r1, [r4, #20]
 8001cd6:	1d18      	adds	r0, r3, #4
 8001cd8:	6028      	str	r0, [r5, #0]
 8001cda:	0635      	lsls	r5, r6, #24
 8001cdc:	681b      	ldr	r3, [r3, #0]
 8001cde:	d501      	bpl.n	8001ce4 <_printf_i+0x1cc>
 8001ce0:	6019      	str	r1, [r3, #0]
 8001ce2:	e002      	b.n	8001cea <_printf_i+0x1d2>
 8001ce4:	0670      	lsls	r0, r6, #25
 8001ce6:	d5fb      	bpl.n	8001ce0 <_printf_i+0x1c8>
 8001ce8:	8019      	strh	r1, [r3, #0]
 8001cea:	2300      	movs	r3, #0
 8001cec:	6123      	str	r3, [r4, #16]
 8001cee:	4615      	mov	r5, r2
 8001cf0:	e7ba      	b.n	8001c68 <_printf_i+0x150>
 8001cf2:	682b      	ldr	r3, [r5, #0]
 8001cf4:	1d1a      	adds	r2, r3, #4
 8001cf6:	602a      	str	r2, [r5, #0]
 8001cf8:	681d      	ldr	r5, [r3, #0]
 8001cfa:	6862      	ldr	r2, [r4, #4]
 8001cfc:	2100      	movs	r1, #0
 8001cfe:	4628      	mov	r0, r5
 8001d00:	f7fe fa6e 	bl	80001e0 <memchr>
 8001d04:	b108      	cbz	r0, 8001d0a <_printf_i+0x1f2>
 8001d06:	1b40      	subs	r0, r0, r5
 8001d08:	6060      	str	r0, [r4, #4]
 8001d0a:	6863      	ldr	r3, [r4, #4]
 8001d0c:	6123      	str	r3, [r4, #16]
 8001d0e:	2300      	movs	r3, #0
 8001d10:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001d14:	e7a8      	b.n	8001c68 <_printf_i+0x150>
 8001d16:	6923      	ldr	r3, [r4, #16]
 8001d18:	462a      	mov	r2, r5
 8001d1a:	4649      	mov	r1, r9
 8001d1c:	4640      	mov	r0, r8
 8001d1e:	47d0      	blx	sl
 8001d20:	3001      	adds	r0, #1
 8001d22:	d0ab      	beq.n	8001c7c <_printf_i+0x164>
 8001d24:	6823      	ldr	r3, [r4, #0]
 8001d26:	079b      	lsls	r3, r3, #30
 8001d28:	d413      	bmi.n	8001d52 <_printf_i+0x23a>
 8001d2a:	68e0      	ldr	r0, [r4, #12]
 8001d2c:	9b03      	ldr	r3, [sp, #12]
 8001d2e:	4298      	cmp	r0, r3
 8001d30:	bfb8      	it	lt
 8001d32:	4618      	movlt	r0, r3
 8001d34:	e7a4      	b.n	8001c80 <_printf_i+0x168>
 8001d36:	2301      	movs	r3, #1
 8001d38:	4632      	mov	r2, r6
 8001d3a:	4649      	mov	r1, r9
 8001d3c:	4640      	mov	r0, r8
 8001d3e:	47d0      	blx	sl
 8001d40:	3001      	adds	r0, #1
 8001d42:	d09b      	beq.n	8001c7c <_printf_i+0x164>
 8001d44:	3501      	adds	r5, #1
 8001d46:	68e3      	ldr	r3, [r4, #12]
 8001d48:	9903      	ldr	r1, [sp, #12]
 8001d4a:	1a5b      	subs	r3, r3, r1
 8001d4c:	42ab      	cmp	r3, r5
 8001d4e:	dcf2      	bgt.n	8001d36 <_printf_i+0x21e>
 8001d50:	e7eb      	b.n	8001d2a <_printf_i+0x212>
 8001d52:	2500      	movs	r5, #0
 8001d54:	f104 0619 	add.w	r6, r4, #25
 8001d58:	e7f5      	b.n	8001d46 <_printf_i+0x22e>
 8001d5a:	bf00      	nop
 8001d5c:	08003f7e 	.word	0x08003f7e
 8001d60:	08003f8f 	.word	0x08003f8f

08001d64 <quorem>:
 8001d64:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001d68:	6903      	ldr	r3, [r0, #16]
 8001d6a:	690c      	ldr	r4, [r1, #16]
 8001d6c:	42a3      	cmp	r3, r4
 8001d6e:	4607      	mov	r7, r0
 8001d70:	f2c0 8081 	blt.w	8001e76 <quorem+0x112>
 8001d74:	3c01      	subs	r4, #1
 8001d76:	f101 0814 	add.w	r8, r1, #20
 8001d7a:	f100 0514 	add.w	r5, r0, #20
 8001d7e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8001d82:	9301      	str	r3, [sp, #4]
 8001d84:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8001d88:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8001d8c:	3301      	adds	r3, #1
 8001d8e:	429a      	cmp	r2, r3
 8001d90:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8001d94:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8001d98:	fbb2 f6f3 	udiv	r6, r2, r3
 8001d9c:	d331      	bcc.n	8001e02 <quorem+0x9e>
 8001d9e:	f04f 0e00 	mov.w	lr, #0
 8001da2:	4640      	mov	r0, r8
 8001da4:	46ac      	mov	ip, r5
 8001da6:	46f2      	mov	sl, lr
 8001da8:	f850 2b04 	ldr.w	r2, [r0], #4
 8001dac:	b293      	uxth	r3, r2
 8001dae:	fb06 e303 	mla	r3, r6, r3, lr
 8001db2:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8001db6:	b29b      	uxth	r3, r3
 8001db8:	ebaa 0303 	sub.w	r3, sl, r3
 8001dbc:	f8dc a000 	ldr.w	sl, [ip]
 8001dc0:	0c12      	lsrs	r2, r2, #16
 8001dc2:	fa13 f38a 	uxtah	r3, r3, sl
 8001dc6:	fb06 e202 	mla	r2, r6, r2, lr
 8001dca:	9300      	str	r3, [sp, #0]
 8001dcc:	9b00      	ldr	r3, [sp, #0]
 8001dce:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8001dd2:	b292      	uxth	r2, r2
 8001dd4:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8001dd8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8001ddc:	f8bd 3000 	ldrh.w	r3, [sp]
 8001de0:	4581      	cmp	r9, r0
 8001de2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8001de6:	f84c 3b04 	str.w	r3, [ip], #4
 8001dea:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8001dee:	d2db      	bcs.n	8001da8 <quorem+0x44>
 8001df0:	f855 300b 	ldr.w	r3, [r5, fp]
 8001df4:	b92b      	cbnz	r3, 8001e02 <quorem+0x9e>
 8001df6:	9b01      	ldr	r3, [sp, #4]
 8001df8:	3b04      	subs	r3, #4
 8001dfa:	429d      	cmp	r5, r3
 8001dfc:	461a      	mov	r2, r3
 8001dfe:	d32e      	bcc.n	8001e5e <quorem+0xfa>
 8001e00:	613c      	str	r4, [r7, #16]
 8001e02:	4638      	mov	r0, r7
 8001e04:	f001 f8c6 	bl	8002f94 <__mcmp>
 8001e08:	2800      	cmp	r0, #0
 8001e0a:	db24      	blt.n	8001e56 <quorem+0xf2>
 8001e0c:	3601      	adds	r6, #1
 8001e0e:	4628      	mov	r0, r5
 8001e10:	f04f 0c00 	mov.w	ip, #0
 8001e14:	f858 2b04 	ldr.w	r2, [r8], #4
 8001e18:	f8d0 e000 	ldr.w	lr, [r0]
 8001e1c:	b293      	uxth	r3, r2
 8001e1e:	ebac 0303 	sub.w	r3, ip, r3
 8001e22:	0c12      	lsrs	r2, r2, #16
 8001e24:	fa13 f38e 	uxtah	r3, r3, lr
 8001e28:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8001e2c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8001e30:	b29b      	uxth	r3, r3
 8001e32:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8001e36:	45c1      	cmp	r9, r8
 8001e38:	f840 3b04 	str.w	r3, [r0], #4
 8001e3c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8001e40:	d2e8      	bcs.n	8001e14 <quorem+0xb0>
 8001e42:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8001e46:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8001e4a:	b922      	cbnz	r2, 8001e56 <quorem+0xf2>
 8001e4c:	3b04      	subs	r3, #4
 8001e4e:	429d      	cmp	r5, r3
 8001e50:	461a      	mov	r2, r3
 8001e52:	d30a      	bcc.n	8001e6a <quorem+0x106>
 8001e54:	613c      	str	r4, [r7, #16]
 8001e56:	4630      	mov	r0, r6
 8001e58:	b003      	add	sp, #12
 8001e5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001e5e:	6812      	ldr	r2, [r2, #0]
 8001e60:	3b04      	subs	r3, #4
 8001e62:	2a00      	cmp	r2, #0
 8001e64:	d1cc      	bne.n	8001e00 <quorem+0x9c>
 8001e66:	3c01      	subs	r4, #1
 8001e68:	e7c7      	b.n	8001dfa <quorem+0x96>
 8001e6a:	6812      	ldr	r2, [r2, #0]
 8001e6c:	3b04      	subs	r3, #4
 8001e6e:	2a00      	cmp	r2, #0
 8001e70:	d1f0      	bne.n	8001e54 <quorem+0xf0>
 8001e72:	3c01      	subs	r4, #1
 8001e74:	e7eb      	b.n	8001e4e <quorem+0xea>
 8001e76:	2000      	movs	r0, #0
 8001e78:	e7ee      	b.n	8001e58 <quorem+0xf4>
 8001e7a:	0000      	movs	r0, r0
 8001e7c:	0000      	movs	r0, r0
	...

08001e80 <_dtoa_r>:
 8001e80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001e84:	ed2d 8b04 	vpush	{d8-d9}
 8001e88:	ec57 6b10 	vmov	r6, r7, d0
 8001e8c:	b093      	sub	sp, #76	; 0x4c
 8001e8e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8001e90:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8001e94:	9106      	str	r1, [sp, #24]
 8001e96:	ee10 aa10 	vmov	sl, s0
 8001e9a:	4604      	mov	r4, r0
 8001e9c:	9209      	str	r2, [sp, #36]	; 0x24
 8001e9e:	930c      	str	r3, [sp, #48]	; 0x30
 8001ea0:	46bb      	mov	fp, r7
 8001ea2:	b975      	cbnz	r5, 8001ec2 <_dtoa_r+0x42>
 8001ea4:	2010      	movs	r0, #16
 8001ea6:	f000 fddd 	bl	8002a64 <malloc>
 8001eaa:	4602      	mov	r2, r0
 8001eac:	6260      	str	r0, [r4, #36]	; 0x24
 8001eae:	b920      	cbnz	r0, 8001eba <_dtoa_r+0x3a>
 8001eb0:	4ba7      	ldr	r3, [pc, #668]	; (8002150 <_dtoa_r+0x2d0>)
 8001eb2:	21ea      	movs	r1, #234	; 0xea
 8001eb4:	48a7      	ldr	r0, [pc, #668]	; (8002154 <_dtoa_r+0x2d4>)
 8001eb6:	f001 fa75 	bl	80033a4 <__assert_func>
 8001eba:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8001ebe:	6005      	str	r5, [r0, #0]
 8001ec0:	60c5      	str	r5, [r0, #12]
 8001ec2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001ec4:	6819      	ldr	r1, [r3, #0]
 8001ec6:	b151      	cbz	r1, 8001ede <_dtoa_r+0x5e>
 8001ec8:	685a      	ldr	r2, [r3, #4]
 8001eca:	604a      	str	r2, [r1, #4]
 8001ecc:	2301      	movs	r3, #1
 8001ece:	4093      	lsls	r3, r2
 8001ed0:	608b      	str	r3, [r1, #8]
 8001ed2:	4620      	mov	r0, r4
 8001ed4:	f000 fe1c 	bl	8002b10 <_Bfree>
 8001ed8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001eda:	2200      	movs	r2, #0
 8001edc:	601a      	str	r2, [r3, #0]
 8001ede:	1e3b      	subs	r3, r7, #0
 8001ee0:	bfaa      	itet	ge
 8001ee2:	2300      	movge	r3, #0
 8001ee4:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 8001ee8:	f8c8 3000 	strge.w	r3, [r8]
 8001eec:	4b9a      	ldr	r3, [pc, #616]	; (8002158 <_dtoa_r+0x2d8>)
 8001eee:	bfbc      	itt	lt
 8001ef0:	2201      	movlt	r2, #1
 8001ef2:	f8c8 2000 	strlt.w	r2, [r8]
 8001ef6:	ea33 030b 	bics.w	r3, r3, fp
 8001efa:	d11b      	bne.n	8001f34 <_dtoa_r+0xb4>
 8001efc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8001efe:	f242 730f 	movw	r3, #9999	; 0x270f
 8001f02:	6013      	str	r3, [r2, #0]
 8001f04:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8001f08:	4333      	orrs	r3, r6
 8001f0a:	f000 8592 	beq.w	8002a32 <_dtoa_r+0xbb2>
 8001f0e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8001f10:	b963      	cbnz	r3, 8001f2c <_dtoa_r+0xac>
 8001f12:	4b92      	ldr	r3, [pc, #584]	; (800215c <_dtoa_r+0x2dc>)
 8001f14:	e022      	b.n	8001f5c <_dtoa_r+0xdc>
 8001f16:	4b92      	ldr	r3, [pc, #584]	; (8002160 <_dtoa_r+0x2e0>)
 8001f18:	9301      	str	r3, [sp, #4]
 8001f1a:	3308      	adds	r3, #8
 8001f1c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8001f1e:	6013      	str	r3, [r2, #0]
 8001f20:	9801      	ldr	r0, [sp, #4]
 8001f22:	b013      	add	sp, #76	; 0x4c
 8001f24:	ecbd 8b04 	vpop	{d8-d9}
 8001f28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001f2c:	4b8b      	ldr	r3, [pc, #556]	; (800215c <_dtoa_r+0x2dc>)
 8001f2e:	9301      	str	r3, [sp, #4]
 8001f30:	3303      	adds	r3, #3
 8001f32:	e7f3      	b.n	8001f1c <_dtoa_r+0x9c>
 8001f34:	2200      	movs	r2, #0
 8001f36:	2300      	movs	r3, #0
 8001f38:	4650      	mov	r0, sl
 8001f3a:	4659      	mov	r1, fp
 8001f3c:	f7fe fdc4 	bl	8000ac8 <__aeabi_dcmpeq>
 8001f40:	ec4b ab19 	vmov	d9, sl, fp
 8001f44:	4680      	mov	r8, r0
 8001f46:	b158      	cbz	r0, 8001f60 <_dtoa_r+0xe0>
 8001f48:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8001f4a:	2301      	movs	r3, #1
 8001f4c:	6013      	str	r3, [r2, #0]
 8001f4e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8001f50:	2b00      	cmp	r3, #0
 8001f52:	f000 856b 	beq.w	8002a2c <_dtoa_r+0xbac>
 8001f56:	4883      	ldr	r0, [pc, #524]	; (8002164 <_dtoa_r+0x2e4>)
 8001f58:	6018      	str	r0, [r3, #0]
 8001f5a:	1e43      	subs	r3, r0, #1
 8001f5c:	9301      	str	r3, [sp, #4]
 8001f5e:	e7df      	b.n	8001f20 <_dtoa_r+0xa0>
 8001f60:	ec4b ab10 	vmov	d0, sl, fp
 8001f64:	aa10      	add	r2, sp, #64	; 0x40
 8001f66:	a911      	add	r1, sp, #68	; 0x44
 8001f68:	4620      	mov	r0, r4
 8001f6a:	f001 f8b9 	bl	80030e0 <__d2b>
 8001f6e:	f3cb 550a 	ubfx	r5, fp, #20, #11
 8001f72:	ee08 0a10 	vmov	s16, r0
 8001f76:	2d00      	cmp	r5, #0
 8001f78:	f000 8084 	beq.w	8002084 <_dtoa_r+0x204>
 8001f7c:	ee19 3a90 	vmov	r3, s19
 8001f80:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8001f84:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 8001f88:	4656      	mov	r6, sl
 8001f8a:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 8001f8e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8001f92:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8001f96:	4b74      	ldr	r3, [pc, #464]	; (8002168 <_dtoa_r+0x2e8>)
 8001f98:	2200      	movs	r2, #0
 8001f9a:	4630      	mov	r0, r6
 8001f9c:	4639      	mov	r1, r7
 8001f9e:	f7fe f973 	bl	8000288 <__aeabi_dsub>
 8001fa2:	a365      	add	r3, pc, #404	; (adr r3, 8002138 <_dtoa_r+0x2b8>)
 8001fa4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001fa8:	f7fe fb26 	bl	80005f8 <__aeabi_dmul>
 8001fac:	a364      	add	r3, pc, #400	; (adr r3, 8002140 <_dtoa_r+0x2c0>)
 8001fae:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001fb2:	f7fe f96b 	bl	800028c <__adddf3>
 8001fb6:	4606      	mov	r6, r0
 8001fb8:	4628      	mov	r0, r5
 8001fba:	460f      	mov	r7, r1
 8001fbc:	f7fe fab2 	bl	8000524 <__aeabi_i2d>
 8001fc0:	a361      	add	r3, pc, #388	; (adr r3, 8002148 <_dtoa_r+0x2c8>)
 8001fc2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001fc6:	f7fe fb17 	bl	80005f8 <__aeabi_dmul>
 8001fca:	4602      	mov	r2, r0
 8001fcc:	460b      	mov	r3, r1
 8001fce:	4630      	mov	r0, r6
 8001fd0:	4639      	mov	r1, r7
 8001fd2:	f7fe f95b 	bl	800028c <__adddf3>
 8001fd6:	4606      	mov	r6, r0
 8001fd8:	460f      	mov	r7, r1
 8001fda:	f7fe fdbd 	bl	8000b58 <__aeabi_d2iz>
 8001fde:	2200      	movs	r2, #0
 8001fe0:	9000      	str	r0, [sp, #0]
 8001fe2:	2300      	movs	r3, #0
 8001fe4:	4630      	mov	r0, r6
 8001fe6:	4639      	mov	r1, r7
 8001fe8:	f7fe fd78 	bl	8000adc <__aeabi_dcmplt>
 8001fec:	b150      	cbz	r0, 8002004 <_dtoa_r+0x184>
 8001fee:	9800      	ldr	r0, [sp, #0]
 8001ff0:	f7fe fa98 	bl	8000524 <__aeabi_i2d>
 8001ff4:	4632      	mov	r2, r6
 8001ff6:	463b      	mov	r3, r7
 8001ff8:	f7fe fd66 	bl	8000ac8 <__aeabi_dcmpeq>
 8001ffc:	b910      	cbnz	r0, 8002004 <_dtoa_r+0x184>
 8001ffe:	9b00      	ldr	r3, [sp, #0]
 8002000:	3b01      	subs	r3, #1
 8002002:	9300      	str	r3, [sp, #0]
 8002004:	9b00      	ldr	r3, [sp, #0]
 8002006:	2b16      	cmp	r3, #22
 8002008:	d85a      	bhi.n	80020c0 <_dtoa_r+0x240>
 800200a:	9a00      	ldr	r2, [sp, #0]
 800200c:	4b57      	ldr	r3, [pc, #348]	; (800216c <_dtoa_r+0x2ec>)
 800200e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002012:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002016:	ec51 0b19 	vmov	r0, r1, d9
 800201a:	f7fe fd5f 	bl	8000adc <__aeabi_dcmplt>
 800201e:	2800      	cmp	r0, #0
 8002020:	d050      	beq.n	80020c4 <_dtoa_r+0x244>
 8002022:	9b00      	ldr	r3, [sp, #0]
 8002024:	3b01      	subs	r3, #1
 8002026:	9300      	str	r3, [sp, #0]
 8002028:	2300      	movs	r3, #0
 800202a:	930b      	str	r3, [sp, #44]	; 0x2c
 800202c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800202e:	1b5d      	subs	r5, r3, r5
 8002030:	1e6b      	subs	r3, r5, #1
 8002032:	9305      	str	r3, [sp, #20]
 8002034:	bf45      	ittet	mi
 8002036:	f1c5 0301 	rsbmi	r3, r5, #1
 800203a:	9304      	strmi	r3, [sp, #16]
 800203c:	2300      	movpl	r3, #0
 800203e:	2300      	movmi	r3, #0
 8002040:	bf4c      	ite	mi
 8002042:	9305      	strmi	r3, [sp, #20]
 8002044:	9304      	strpl	r3, [sp, #16]
 8002046:	9b00      	ldr	r3, [sp, #0]
 8002048:	2b00      	cmp	r3, #0
 800204a:	db3d      	blt.n	80020c8 <_dtoa_r+0x248>
 800204c:	9b05      	ldr	r3, [sp, #20]
 800204e:	9a00      	ldr	r2, [sp, #0]
 8002050:	920a      	str	r2, [sp, #40]	; 0x28
 8002052:	4413      	add	r3, r2
 8002054:	9305      	str	r3, [sp, #20]
 8002056:	2300      	movs	r3, #0
 8002058:	9307      	str	r3, [sp, #28]
 800205a:	9b06      	ldr	r3, [sp, #24]
 800205c:	2b09      	cmp	r3, #9
 800205e:	f200 8089 	bhi.w	8002174 <_dtoa_r+0x2f4>
 8002062:	2b05      	cmp	r3, #5
 8002064:	bfc4      	itt	gt
 8002066:	3b04      	subgt	r3, #4
 8002068:	9306      	strgt	r3, [sp, #24]
 800206a:	9b06      	ldr	r3, [sp, #24]
 800206c:	f1a3 0302 	sub.w	r3, r3, #2
 8002070:	bfcc      	ite	gt
 8002072:	2500      	movgt	r5, #0
 8002074:	2501      	movle	r5, #1
 8002076:	2b03      	cmp	r3, #3
 8002078:	f200 8087 	bhi.w	800218a <_dtoa_r+0x30a>
 800207c:	e8df f003 	tbb	[pc, r3]
 8002080:	59383a2d 	.word	0x59383a2d
 8002084:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 8002088:	441d      	add	r5, r3
 800208a:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800208e:	2b20      	cmp	r3, #32
 8002090:	bfc1      	itttt	gt
 8002092:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8002096:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 800209a:	fa0b f303 	lslgt.w	r3, fp, r3
 800209e:	fa26 f000 	lsrgt.w	r0, r6, r0
 80020a2:	bfda      	itte	le
 80020a4:	f1c3 0320 	rsble	r3, r3, #32
 80020a8:	fa06 f003 	lslle.w	r0, r6, r3
 80020ac:	4318      	orrgt	r0, r3
 80020ae:	f7fe fa29 	bl	8000504 <__aeabi_ui2d>
 80020b2:	2301      	movs	r3, #1
 80020b4:	4606      	mov	r6, r0
 80020b6:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 80020ba:	3d01      	subs	r5, #1
 80020bc:	930e      	str	r3, [sp, #56]	; 0x38
 80020be:	e76a      	b.n	8001f96 <_dtoa_r+0x116>
 80020c0:	2301      	movs	r3, #1
 80020c2:	e7b2      	b.n	800202a <_dtoa_r+0x1aa>
 80020c4:	900b      	str	r0, [sp, #44]	; 0x2c
 80020c6:	e7b1      	b.n	800202c <_dtoa_r+0x1ac>
 80020c8:	9b04      	ldr	r3, [sp, #16]
 80020ca:	9a00      	ldr	r2, [sp, #0]
 80020cc:	1a9b      	subs	r3, r3, r2
 80020ce:	9304      	str	r3, [sp, #16]
 80020d0:	4253      	negs	r3, r2
 80020d2:	9307      	str	r3, [sp, #28]
 80020d4:	2300      	movs	r3, #0
 80020d6:	930a      	str	r3, [sp, #40]	; 0x28
 80020d8:	e7bf      	b.n	800205a <_dtoa_r+0x1da>
 80020da:	2300      	movs	r3, #0
 80020dc:	9308      	str	r3, [sp, #32]
 80020de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80020e0:	2b00      	cmp	r3, #0
 80020e2:	dc55      	bgt.n	8002190 <_dtoa_r+0x310>
 80020e4:	2301      	movs	r3, #1
 80020e6:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80020ea:	461a      	mov	r2, r3
 80020ec:	9209      	str	r2, [sp, #36]	; 0x24
 80020ee:	e00c      	b.n	800210a <_dtoa_r+0x28a>
 80020f0:	2301      	movs	r3, #1
 80020f2:	e7f3      	b.n	80020dc <_dtoa_r+0x25c>
 80020f4:	2300      	movs	r3, #0
 80020f6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80020f8:	9308      	str	r3, [sp, #32]
 80020fa:	9b00      	ldr	r3, [sp, #0]
 80020fc:	4413      	add	r3, r2
 80020fe:	9302      	str	r3, [sp, #8]
 8002100:	3301      	adds	r3, #1
 8002102:	2b01      	cmp	r3, #1
 8002104:	9303      	str	r3, [sp, #12]
 8002106:	bfb8      	it	lt
 8002108:	2301      	movlt	r3, #1
 800210a:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800210c:	2200      	movs	r2, #0
 800210e:	6042      	str	r2, [r0, #4]
 8002110:	2204      	movs	r2, #4
 8002112:	f102 0614 	add.w	r6, r2, #20
 8002116:	429e      	cmp	r6, r3
 8002118:	6841      	ldr	r1, [r0, #4]
 800211a:	d93d      	bls.n	8002198 <_dtoa_r+0x318>
 800211c:	4620      	mov	r0, r4
 800211e:	f000 fcb7 	bl	8002a90 <_Balloc>
 8002122:	9001      	str	r0, [sp, #4]
 8002124:	2800      	cmp	r0, #0
 8002126:	d13b      	bne.n	80021a0 <_dtoa_r+0x320>
 8002128:	4b11      	ldr	r3, [pc, #68]	; (8002170 <_dtoa_r+0x2f0>)
 800212a:	4602      	mov	r2, r0
 800212c:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8002130:	e6c0      	b.n	8001eb4 <_dtoa_r+0x34>
 8002132:	2301      	movs	r3, #1
 8002134:	e7df      	b.n	80020f6 <_dtoa_r+0x276>
 8002136:	bf00      	nop
 8002138:	636f4361 	.word	0x636f4361
 800213c:	3fd287a7 	.word	0x3fd287a7
 8002140:	8b60c8b3 	.word	0x8b60c8b3
 8002144:	3fc68a28 	.word	0x3fc68a28
 8002148:	509f79fb 	.word	0x509f79fb
 800214c:	3fd34413 	.word	0x3fd34413
 8002150:	08003fad 	.word	0x08003fad
 8002154:	08003fc4 	.word	0x08003fc4
 8002158:	7ff00000 	.word	0x7ff00000
 800215c:	08003fa9 	.word	0x08003fa9
 8002160:	08003fa0 	.word	0x08003fa0
 8002164:	08003f7d 	.word	0x08003f7d
 8002168:	3ff80000 	.word	0x3ff80000
 800216c:	080040b8 	.word	0x080040b8
 8002170:	0800401f 	.word	0x0800401f
 8002174:	2501      	movs	r5, #1
 8002176:	2300      	movs	r3, #0
 8002178:	9306      	str	r3, [sp, #24]
 800217a:	9508      	str	r5, [sp, #32]
 800217c:	f04f 33ff 	mov.w	r3, #4294967295
 8002180:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002184:	2200      	movs	r2, #0
 8002186:	2312      	movs	r3, #18
 8002188:	e7b0      	b.n	80020ec <_dtoa_r+0x26c>
 800218a:	2301      	movs	r3, #1
 800218c:	9308      	str	r3, [sp, #32]
 800218e:	e7f5      	b.n	800217c <_dtoa_r+0x2fc>
 8002190:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002192:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002196:	e7b8      	b.n	800210a <_dtoa_r+0x28a>
 8002198:	3101      	adds	r1, #1
 800219a:	6041      	str	r1, [r0, #4]
 800219c:	0052      	lsls	r2, r2, #1
 800219e:	e7b8      	b.n	8002112 <_dtoa_r+0x292>
 80021a0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80021a2:	9a01      	ldr	r2, [sp, #4]
 80021a4:	601a      	str	r2, [r3, #0]
 80021a6:	9b03      	ldr	r3, [sp, #12]
 80021a8:	2b0e      	cmp	r3, #14
 80021aa:	f200 809d 	bhi.w	80022e8 <_dtoa_r+0x468>
 80021ae:	2d00      	cmp	r5, #0
 80021b0:	f000 809a 	beq.w	80022e8 <_dtoa_r+0x468>
 80021b4:	9b00      	ldr	r3, [sp, #0]
 80021b6:	2b00      	cmp	r3, #0
 80021b8:	dd32      	ble.n	8002220 <_dtoa_r+0x3a0>
 80021ba:	4ab7      	ldr	r2, [pc, #732]	; (8002498 <_dtoa_r+0x618>)
 80021bc:	f003 030f 	and.w	r3, r3, #15
 80021c0:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 80021c4:	e9d3 8900 	ldrd	r8, r9, [r3]
 80021c8:	9b00      	ldr	r3, [sp, #0]
 80021ca:	05d8      	lsls	r0, r3, #23
 80021cc:	ea4f 1723 	mov.w	r7, r3, asr #4
 80021d0:	d516      	bpl.n	8002200 <_dtoa_r+0x380>
 80021d2:	4bb2      	ldr	r3, [pc, #712]	; (800249c <_dtoa_r+0x61c>)
 80021d4:	ec51 0b19 	vmov	r0, r1, d9
 80021d8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80021dc:	f7fe fb36 	bl	800084c <__aeabi_ddiv>
 80021e0:	f007 070f 	and.w	r7, r7, #15
 80021e4:	4682      	mov	sl, r0
 80021e6:	468b      	mov	fp, r1
 80021e8:	2503      	movs	r5, #3
 80021ea:	4eac      	ldr	r6, [pc, #688]	; (800249c <_dtoa_r+0x61c>)
 80021ec:	b957      	cbnz	r7, 8002204 <_dtoa_r+0x384>
 80021ee:	4642      	mov	r2, r8
 80021f0:	464b      	mov	r3, r9
 80021f2:	4650      	mov	r0, sl
 80021f4:	4659      	mov	r1, fp
 80021f6:	f7fe fb29 	bl	800084c <__aeabi_ddiv>
 80021fa:	4682      	mov	sl, r0
 80021fc:	468b      	mov	fp, r1
 80021fe:	e028      	b.n	8002252 <_dtoa_r+0x3d2>
 8002200:	2502      	movs	r5, #2
 8002202:	e7f2      	b.n	80021ea <_dtoa_r+0x36a>
 8002204:	07f9      	lsls	r1, r7, #31
 8002206:	d508      	bpl.n	800221a <_dtoa_r+0x39a>
 8002208:	4640      	mov	r0, r8
 800220a:	4649      	mov	r1, r9
 800220c:	e9d6 2300 	ldrd	r2, r3, [r6]
 8002210:	f7fe f9f2 	bl	80005f8 <__aeabi_dmul>
 8002214:	3501      	adds	r5, #1
 8002216:	4680      	mov	r8, r0
 8002218:	4689      	mov	r9, r1
 800221a:	107f      	asrs	r7, r7, #1
 800221c:	3608      	adds	r6, #8
 800221e:	e7e5      	b.n	80021ec <_dtoa_r+0x36c>
 8002220:	f000 809b 	beq.w	800235a <_dtoa_r+0x4da>
 8002224:	9b00      	ldr	r3, [sp, #0]
 8002226:	4f9d      	ldr	r7, [pc, #628]	; (800249c <_dtoa_r+0x61c>)
 8002228:	425e      	negs	r6, r3
 800222a:	4b9b      	ldr	r3, [pc, #620]	; (8002498 <_dtoa_r+0x618>)
 800222c:	f006 020f 	and.w	r2, r6, #15
 8002230:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002234:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002238:	ec51 0b19 	vmov	r0, r1, d9
 800223c:	f7fe f9dc 	bl	80005f8 <__aeabi_dmul>
 8002240:	1136      	asrs	r6, r6, #4
 8002242:	4682      	mov	sl, r0
 8002244:	468b      	mov	fp, r1
 8002246:	2300      	movs	r3, #0
 8002248:	2502      	movs	r5, #2
 800224a:	2e00      	cmp	r6, #0
 800224c:	d17a      	bne.n	8002344 <_dtoa_r+0x4c4>
 800224e:	2b00      	cmp	r3, #0
 8002250:	d1d3      	bne.n	80021fa <_dtoa_r+0x37a>
 8002252:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002254:	2b00      	cmp	r3, #0
 8002256:	f000 8082 	beq.w	800235e <_dtoa_r+0x4de>
 800225a:	4b91      	ldr	r3, [pc, #580]	; (80024a0 <_dtoa_r+0x620>)
 800225c:	2200      	movs	r2, #0
 800225e:	4650      	mov	r0, sl
 8002260:	4659      	mov	r1, fp
 8002262:	f7fe fc3b 	bl	8000adc <__aeabi_dcmplt>
 8002266:	2800      	cmp	r0, #0
 8002268:	d079      	beq.n	800235e <_dtoa_r+0x4de>
 800226a:	9b03      	ldr	r3, [sp, #12]
 800226c:	2b00      	cmp	r3, #0
 800226e:	d076      	beq.n	800235e <_dtoa_r+0x4de>
 8002270:	9b02      	ldr	r3, [sp, #8]
 8002272:	2b00      	cmp	r3, #0
 8002274:	dd36      	ble.n	80022e4 <_dtoa_r+0x464>
 8002276:	9b00      	ldr	r3, [sp, #0]
 8002278:	4650      	mov	r0, sl
 800227a:	4659      	mov	r1, fp
 800227c:	1e5f      	subs	r7, r3, #1
 800227e:	2200      	movs	r2, #0
 8002280:	4b88      	ldr	r3, [pc, #544]	; (80024a4 <_dtoa_r+0x624>)
 8002282:	f7fe f9b9 	bl	80005f8 <__aeabi_dmul>
 8002286:	9e02      	ldr	r6, [sp, #8]
 8002288:	4682      	mov	sl, r0
 800228a:	468b      	mov	fp, r1
 800228c:	3501      	adds	r5, #1
 800228e:	4628      	mov	r0, r5
 8002290:	f7fe f948 	bl	8000524 <__aeabi_i2d>
 8002294:	4652      	mov	r2, sl
 8002296:	465b      	mov	r3, fp
 8002298:	f7fe f9ae 	bl	80005f8 <__aeabi_dmul>
 800229c:	4b82      	ldr	r3, [pc, #520]	; (80024a8 <_dtoa_r+0x628>)
 800229e:	2200      	movs	r2, #0
 80022a0:	f7fd fff4 	bl	800028c <__adddf3>
 80022a4:	46d0      	mov	r8, sl
 80022a6:	46d9      	mov	r9, fp
 80022a8:	4682      	mov	sl, r0
 80022aa:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 80022ae:	2e00      	cmp	r6, #0
 80022b0:	d158      	bne.n	8002364 <_dtoa_r+0x4e4>
 80022b2:	4b7e      	ldr	r3, [pc, #504]	; (80024ac <_dtoa_r+0x62c>)
 80022b4:	2200      	movs	r2, #0
 80022b6:	4640      	mov	r0, r8
 80022b8:	4649      	mov	r1, r9
 80022ba:	f7fd ffe5 	bl	8000288 <__aeabi_dsub>
 80022be:	4652      	mov	r2, sl
 80022c0:	465b      	mov	r3, fp
 80022c2:	4680      	mov	r8, r0
 80022c4:	4689      	mov	r9, r1
 80022c6:	f7fe fc27 	bl	8000b18 <__aeabi_dcmpgt>
 80022ca:	2800      	cmp	r0, #0
 80022cc:	f040 8295 	bne.w	80027fa <_dtoa_r+0x97a>
 80022d0:	4652      	mov	r2, sl
 80022d2:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 80022d6:	4640      	mov	r0, r8
 80022d8:	4649      	mov	r1, r9
 80022da:	f7fe fbff 	bl	8000adc <__aeabi_dcmplt>
 80022de:	2800      	cmp	r0, #0
 80022e0:	f040 8289 	bne.w	80027f6 <_dtoa_r+0x976>
 80022e4:	ec5b ab19 	vmov	sl, fp, d9
 80022e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80022ea:	2b00      	cmp	r3, #0
 80022ec:	f2c0 8148 	blt.w	8002580 <_dtoa_r+0x700>
 80022f0:	9a00      	ldr	r2, [sp, #0]
 80022f2:	2a0e      	cmp	r2, #14
 80022f4:	f300 8144 	bgt.w	8002580 <_dtoa_r+0x700>
 80022f8:	4b67      	ldr	r3, [pc, #412]	; (8002498 <_dtoa_r+0x618>)
 80022fa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80022fe:	e9d3 8900 	ldrd	r8, r9, [r3]
 8002302:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002304:	2b00      	cmp	r3, #0
 8002306:	f280 80d5 	bge.w	80024b4 <_dtoa_r+0x634>
 800230a:	9b03      	ldr	r3, [sp, #12]
 800230c:	2b00      	cmp	r3, #0
 800230e:	f300 80d1 	bgt.w	80024b4 <_dtoa_r+0x634>
 8002312:	f040 826f 	bne.w	80027f4 <_dtoa_r+0x974>
 8002316:	4b65      	ldr	r3, [pc, #404]	; (80024ac <_dtoa_r+0x62c>)
 8002318:	2200      	movs	r2, #0
 800231a:	4640      	mov	r0, r8
 800231c:	4649      	mov	r1, r9
 800231e:	f7fe f96b 	bl	80005f8 <__aeabi_dmul>
 8002322:	4652      	mov	r2, sl
 8002324:	465b      	mov	r3, fp
 8002326:	f7fe fbed 	bl	8000b04 <__aeabi_dcmpge>
 800232a:	9e03      	ldr	r6, [sp, #12]
 800232c:	4637      	mov	r7, r6
 800232e:	2800      	cmp	r0, #0
 8002330:	f040 8245 	bne.w	80027be <_dtoa_r+0x93e>
 8002334:	9d01      	ldr	r5, [sp, #4]
 8002336:	2331      	movs	r3, #49	; 0x31
 8002338:	f805 3b01 	strb.w	r3, [r5], #1
 800233c:	9b00      	ldr	r3, [sp, #0]
 800233e:	3301      	adds	r3, #1
 8002340:	9300      	str	r3, [sp, #0]
 8002342:	e240      	b.n	80027c6 <_dtoa_r+0x946>
 8002344:	07f2      	lsls	r2, r6, #31
 8002346:	d505      	bpl.n	8002354 <_dtoa_r+0x4d4>
 8002348:	e9d7 2300 	ldrd	r2, r3, [r7]
 800234c:	f7fe f954 	bl	80005f8 <__aeabi_dmul>
 8002350:	3501      	adds	r5, #1
 8002352:	2301      	movs	r3, #1
 8002354:	1076      	asrs	r6, r6, #1
 8002356:	3708      	adds	r7, #8
 8002358:	e777      	b.n	800224a <_dtoa_r+0x3ca>
 800235a:	2502      	movs	r5, #2
 800235c:	e779      	b.n	8002252 <_dtoa_r+0x3d2>
 800235e:	9f00      	ldr	r7, [sp, #0]
 8002360:	9e03      	ldr	r6, [sp, #12]
 8002362:	e794      	b.n	800228e <_dtoa_r+0x40e>
 8002364:	9901      	ldr	r1, [sp, #4]
 8002366:	4b4c      	ldr	r3, [pc, #304]	; (8002498 <_dtoa_r+0x618>)
 8002368:	4431      	add	r1, r6
 800236a:	910d      	str	r1, [sp, #52]	; 0x34
 800236c:	9908      	ldr	r1, [sp, #32]
 800236e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8002372:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002376:	2900      	cmp	r1, #0
 8002378:	d043      	beq.n	8002402 <_dtoa_r+0x582>
 800237a:	494d      	ldr	r1, [pc, #308]	; (80024b0 <_dtoa_r+0x630>)
 800237c:	2000      	movs	r0, #0
 800237e:	f7fe fa65 	bl	800084c <__aeabi_ddiv>
 8002382:	4652      	mov	r2, sl
 8002384:	465b      	mov	r3, fp
 8002386:	f7fd ff7f 	bl	8000288 <__aeabi_dsub>
 800238a:	9d01      	ldr	r5, [sp, #4]
 800238c:	4682      	mov	sl, r0
 800238e:	468b      	mov	fp, r1
 8002390:	4649      	mov	r1, r9
 8002392:	4640      	mov	r0, r8
 8002394:	f7fe fbe0 	bl	8000b58 <__aeabi_d2iz>
 8002398:	4606      	mov	r6, r0
 800239a:	f7fe f8c3 	bl	8000524 <__aeabi_i2d>
 800239e:	4602      	mov	r2, r0
 80023a0:	460b      	mov	r3, r1
 80023a2:	4640      	mov	r0, r8
 80023a4:	4649      	mov	r1, r9
 80023a6:	f7fd ff6f 	bl	8000288 <__aeabi_dsub>
 80023aa:	3630      	adds	r6, #48	; 0x30
 80023ac:	f805 6b01 	strb.w	r6, [r5], #1
 80023b0:	4652      	mov	r2, sl
 80023b2:	465b      	mov	r3, fp
 80023b4:	4680      	mov	r8, r0
 80023b6:	4689      	mov	r9, r1
 80023b8:	f7fe fb90 	bl	8000adc <__aeabi_dcmplt>
 80023bc:	2800      	cmp	r0, #0
 80023be:	d163      	bne.n	8002488 <_dtoa_r+0x608>
 80023c0:	4642      	mov	r2, r8
 80023c2:	464b      	mov	r3, r9
 80023c4:	4936      	ldr	r1, [pc, #216]	; (80024a0 <_dtoa_r+0x620>)
 80023c6:	2000      	movs	r0, #0
 80023c8:	f7fd ff5e 	bl	8000288 <__aeabi_dsub>
 80023cc:	4652      	mov	r2, sl
 80023ce:	465b      	mov	r3, fp
 80023d0:	f7fe fb84 	bl	8000adc <__aeabi_dcmplt>
 80023d4:	2800      	cmp	r0, #0
 80023d6:	f040 80b5 	bne.w	8002544 <_dtoa_r+0x6c4>
 80023da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80023dc:	429d      	cmp	r5, r3
 80023de:	d081      	beq.n	80022e4 <_dtoa_r+0x464>
 80023e0:	4b30      	ldr	r3, [pc, #192]	; (80024a4 <_dtoa_r+0x624>)
 80023e2:	2200      	movs	r2, #0
 80023e4:	4650      	mov	r0, sl
 80023e6:	4659      	mov	r1, fp
 80023e8:	f7fe f906 	bl	80005f8 <__aeabi_dmul>
 80023ec:	4b2d      	ldr	r3, [pc, #180]	; (80024a4 <_dtoa_r+0x624>)
 80023ee:	4682      	mov	sl, r0
 80023f0:	468b      	mov	fp, r1
 80023f2:	4640      	mov	r0, r8
 80023f4:	4649      	mov	r1, r9
 80023f6:	2200      	movs	r2, #0
 80023f8:	f7fe f8fe 	bl	80005f8 <__aeabi_dmul>
 80023fc:	4680      	mov	r8, r0
 80023fe:	4689      	mov	r9, r1
 8002400:	e7c6      	b.n	8002390 <_dtoa_r+0x510>
 8002402:	4650      	mov	r0, sl
 8002404:	4659      	mov	r1, fp
 8002406:	f7fe f8f7 	bl	80005f8 <__aeabi_dmul>
 800240a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800240c:	9d01      	ldr	r5, [sp, #4]
 800240e:	930f      	str	r3, [sp, #60]	; 0x3c
 8002410:	4682      	mov	sl, r0
 8002412:	468b      	mov	fp, r1
 8002414:	4649      	mov	r1, r9
 8002416:	4640      	mov	r0, r8
 8002418:	f7fe fb9e 	bl	8000b58 <__aeabi_d2iz>
 800241c:	4606      	mov	r6, r0
 800241e:	f7fe f881 	bl	8000524 <__aeabi_i2d>
 8002422:	3630      	adds	r6, #48	; 0x30
 8002424:	4602      	mov	r2, r0
 8002426:	460b      	mov	r3, r1
 8002428:	4640      	mov	r0, r8
 800242a:	4649      	mov	r1, r9
 800242c:	f7fd ff2c 	bl	8000288 <__aeabi_dsub>
 8002430:	f805 6b01 	strb.w	r6, [r5], #1
 8002434:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002436:	429d      	cmp	r5, r3
 8002438:	4680      	mov	r8, r0
 800243a:	4689      	mov	r9, r1
 800243c:	f04f 0200 	mov.w	r2, #0
 8002440:	d124      	bne.n	800248c <_dtoa_r+0x60c>
 8002442:	4b1b      	ldr	r3, [pc, #108]	; (80024b0 <_dtoa_r+0x630>)
 8002444:	4650      	mov	r0, sl
 8002446:	4659      	mov	r1, fp
 8002448:	f7fd ff20 	bl	800028c <__adddf3>
 800244c:	4602      	mov	r2, r0
 800244e:	460b      	mov	r3, r1
 8002450:	4640      	mov	r0, r8
 8002452:	4649      	mov	r1, r9
 8002454:	f7fe fb60 	bl	8000b18 <__aeabi_dcmpgt>
 8002458:	2800      	cmp	r0, #0
 800245a:	d173      	bne.n	8002544 <_dtoa_r+0x6c4>
 800245c:	4652      	mov	r2, sl
 800245e:	465b      	mov	r3, fp
 8002460:	4913      	ldr	r1, [pc, #76]	; (80024b0 <_dtoa_r+0x630>)
 8002462:	2000      	movs	r0, #0
 8002464:	f7fd ff10 	bl	8000288 <__aeabi_dsub>
 8002468:	4602      	mov	r2, r0
 800246a:	460b      	mov	r3, r1
 800246c:	4640      	mov	r0, r8
 800246e:	4649      	mov	r1, r9
 8002470:	f7fe fb34 	bl	8000adc <__aeabi_dcmplt>
 8002474:	2800      	cmp	r0, #0
 8002476:	f43f af35 	beq.w	80022e4 <_dtoa_r+0x464>
 800247a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800247c:	1e6b      	subs	r3, r5, #1
 800247e:	930f      	str	r3, [sp, #60]	; 0x3c
 8002480:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002484:	2b30      	cmp	r3, #48	; 0x30
 8002486:	d0f8      	beq.n	800247a <_dtoa_r+0x5fa>
 8002488:	9700      	str	r7, [sp, #0]
 800248a:	e049      	b.n	8002520 <_dtoa_r+0x6a0>
 800248c:	4b05      	ldr	r3, [pc, #20]	; (80024a4 <_dtoa_r+0x624>)
 800248e:	f7fe f8b3 	bl	80005f8 <__aeabi_dmul>
 8002492:	4680      	mov	r8, r0
 8002494:	4689      	mov	r9, r1
 8002496:	e7bd      	b.n	8002414 <_dtoa_r+0x594>
 8002498:	080040b8 	.word	0x080040b8
 800249c:	08004090 	.word	0x08004090
 80024a0:	3ff00000 	.word	0x3ff00000
 80024a4:	40240000 	.word	0x40240000
 80024a8:	401c0000 	.word	0x401c0000
 80024ac:	40140000 	.word	0x40140000
 80024b0:	3fe00000 	.word	0x3fe00000
 80024b4:	9d01      	ldr	r5, [sp, #4]
 80024b6:	4656      	mov	r6, sl
 80024b8:	465f      	mov	r7, fp
 80024ba:	4642      	mov	r2, r8
 80024bc:	464b      	mov	r3, r9
 80024be:	4630      	mov	r0, r6
 80024c0:	4639      	mov	r1, r7
 80024c2:	f7fe f9c3 	bl	800084c <__aeabi_ddiv>
 80024c6:	f7fe fb47 	bl	8000b58 <__aeabi_d2iz>
 80024ca:	4682      	mov	sl, r0
 80024cc:	f7fe f82a 	bl	8000524 <__aeabi_i2d>
 80024d0:	4642      	mov	r2, r8
 80024d2:	464b      	mov	r3, r9
 80024d4:	f7fe f890 	bl	80005f8 <__aeabi_dmul>
 80024d8:	4602      	mov	r2, r0
 80024da:	460b      	mov	r3, r1
 80024dc:	4630      	mov	r0, r6
 80024de:	4639      	mov	r1, r7
 80024e0:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 80024e4:	f7fd fed0 	bl	8000288 <__aeabi_dsub>
 80024e8:	f805 6b01 	strb.w	r6, [r5], #1
 80024ec:	9e01      	ldr	r6, [sp, #4]
 80024ee:	9f03      	ldr	r7, [sp, #12]
 80024f0:	1bae      	subs	r6, r5, r6
 80024f2:	42b7      	cmp	r7, r6
 80024f4:	4602      	mov	r2, r0
 80024f6:	460b      	mov	r3, r1
 80024f8:	d135      	bne.n	8002566 <_dtoa_r+0x6e6>
 80024fa:	f7fd fec7 	bl	800028c <__adddf3>
 80024fe:	4642      	mov	r2, r8
 8002500:	464b      	mov	r3, r9
 8002502:	4606      	mov	r6, r0
 8002504:	460f      	mov	r7, r1
 8002506:	f7fe fb07 	bl	8000b18 <__aeabi_dcmpgt>
 800250a:	b9d0      	cbnz	r0, 8002542 <_dtoa_r+0x6c2>
 800250c:	4642      	mov	r2, r8
 800250e:	464b      	mov	r3, r9
 8002510:	4630      	mov	r0, r6
 8002512:	4639      	mov	r1, r7
 8002514:	f7fe fad8 	bl	8000ac8 <__aeabi_dcmpeq>
 8002518:	b110      	cbz	r0, 8002520 <_dtoa_r+0x6a0>
 800251a:	f01a 0f01 	tst.w	sl, #1
 800251e:	d110      	bne.n	8002542 <_dtoa_r+0x6c2>
 8002520:	4620      	mov	r0, r4
 8002522:	ee18 1a10 	vmov	r1, s16
 8002526:	f000 faf3 	bl	8002b10 <_Bfree>
 800252a:	2300      	movs	r3, #0
 800252c:	9800      	ldr	r0, [sp, #0]
 800252e:	702b      	strb	r3, [r5, #0]
 8002530:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002532:	3001      	adds	r0, #1
 8002534:	6018      	str	r0, [r3, #0]
 8002536:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002538:	2b00      	cmp	r3, #0
 800253a:	f43f acf1 	beq.w	8001f20 <_dtoa_r+0xa0>
 800253e:	601d      	str	r5, [r3, #0]
 8002540:	e4ee      	b.n	8001f20 <_dtoa_r+0xa0>
 8002542:	9f00      	ldr	r7, [sp, #0]
 8002544:	462b      	mov	r3, r5
 8002546:	461d      	mov	r5, r3
 8002548:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800254c:	2a39      	cmp	r2, #57	; 0x39
 800254e:	d106      	bne.n	800255e <_dtoa_r+0x6de>
 8002550:	9a01      	ldr	r2, [sp, #4]
 8002552:	429a      	cmp	r2, r3
 8002554:	d1f7      	bne.n	8002546 <_dtoa_r+0x6c6>
 8002556:	9901      	ldr	r1, [sp, #4]
 8002558:	2230      	movs	r2, #48	; 0x30
 800255a:	3701      	adds	r7, #1
 800255c:	700a      	strb	r2, [r1, #0]
 800255e:	781a      	ldrb	r2, [r3, #0]
 8002560:	3201      	adds	r2, #1
 8002562:	701a      	strb	r2, [r3, #0]
 8002564:	e790      	b.n	8002488 <_dtoa_r+0x608>
 8002566:	4ba6      	ldr	r3, [pc, #664]	; (8002800 <_dtoa_r+0x980>)
 8002568:	2200      	movs	r2, #0
 800256a:	f7fe f845 	bl	80005f8 <__aeabi_dmul>
 800256e:	2200      	movs	r2, #0
 8002570:	2300      	movs	r3, #0
 8002572:	4606      	mov	r6, r0
 8002574:	460f      	mov	r7, r1
 8002576:	f7fe faa7 	bl	8000ac8 <__aeabi_dcmpeq>
 800257a:	2800      	cmp	r0, #0
 800257c:	d09d      	beq.n	80024ba <_dtoa_r+0x63a>
 800257e:	e7cf      	b.n	8002520 <_dtoa_r+0x6a0>
 8002580:	9a08      	ldr	r2, [sp, #32]
 8002582:	2a00      	cmp	r2, #0
 8002584:	f000 80d7 	beq.w	8002736 <_dtoa_r+0x8b6>
 8002588:	9a06      	ldr	r2, [sp, #24]
 800258a:	2a01      	cmp	r2, #1
 800258c:	f300 80ba 	bgt.w	8002704 <_dtoa_r+0x884>
 8002590:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002592:	2a00      	cmp	r2, #0
 8002594:	f000 80b2 	beq.w	80026fc <_dtoa_r+0x87c>
 8002598:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800259c:	9e07      	ldr	r6, [sp, #28]
 800259e:	9d04      	ldr	r5, [sp, #16]
 80025a0:	9a04      	ldr	r2, [sp, #16]
 80025a2:	441a      	add	r2, r3
 80025a4:	9204      	str	r2, [sp, #16]
 80025a6:	9a05      	ldr	r2, [sp, #20]
 80025a8:	2101      	movs	r1, #1
 80025aa:	441a      	add	r2, r3
 80025ac:	4620      	mov	r0, r4
 80025ae:	9205      	str	r2, [sp, #20]
 80025b0:	f000 fb66 	bl	8002c80 <__i2b>
 80025b4:	4607      	mov	r7, r0
 80025b6:	2d00      	cmp	r5, #0
 80025b8:	dd0c      	ble.n	80025d4 <_dtoa_r+0x754>
 80025ba:	9b05      	ldr	r3, [sp, #20]
 80025bc:	2b00      	cmp	r3, #0
 80025be:	dd09      	ble.n	80025d4 <_dtoa_r+0x754>
 80025c0:	42ab      	cmp	r3, r5
 80025c2:	9a04      	ldr	r2, [sp, #16]
 80025c4:	bfa8      	it	ge
 80025c6:	462b      	movge	r3, r5
 80025c8:	1ad2      	subs	r2, r2, r3
 80025ca:	9204      	str	r2, [sp, #16]
 80025cc:	9a05      	ldr	r2, [sp, #20]
 80025ce:	1aed      	subs	r5, r5, r3
 80025d0:	1ad3      	subs	r3, r2, r3
 80025d2:	9305      	str	r3, [sp, #20]
 80025d4:	9b07      	ldr	r3, [sp, #28]
 80025d6:	b31b      	cbz	r3, 8002620 <_dtoa_r+0x7a0>
 80025d8:	9b08      	ldr	r3, [sp, #32]
 80025da:	2b00      	cmp	r3, #0
 80025dc:	f000 80af 	beq.w	800273e <_dtoa_r+0x8be>
 80025e0:	2e00      	cmp	r6, #0
 80025e2:	dd13      	ble.n	800260c <_dtoa_r+0x78c>
 80025e4:	4639      	mov	r1, r7
 80025e6:	4632      	mov	r2, r6
 80025e8:	4620      	mov	r0, r4
 80025ea:	f000 fc09 	bl	8002e00 <__pow5mult>
 80025ee:	ee18 2a10 	vmov	r2, s16
 80025f2:	4601      	mov	r1, r0
 80025f4:	4607      	mov	r7, r0
 80025f6:	4620      	mov	r0, r4
 80025f8:	f000 fb58 	bl	8002cac <__multiply>
 80025fc:	ee18 1a10 	vmov	r1, s16
 8002600:	4680      	mov	r8, r0
 8002602:	4620      	mov	r0, r4
 8002604:	f000 fa84 	bl	8002b10 <_Bfree>
 8002608:	ee08 8a10 	vmov	s16, r8
 800260c:	9b07      	ldr	r3, [sp, #28]
 800260e:	1b9a      	subs	r2, r3, r6
 8002610:	d006      	beq.n	8002620 <_dtoa_r+0x7a0>
 8002612:	ee18 1a10 	vmov	r1, s16
 8002616:	4620      	mov	r0, r4
 8002618:	f000 fbf2 	bl	8002e00 <__pow5mult>
 800261c:	ee08 0a10 	vmov	s16, r0
 8002620:	2101      	movs	r1, #1
 8002622:	4620      	mov	r0, r4
 8002624:	f000 fb2c 	bl	8002c80 <__i2b>
 8002628:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800262a:	2b00      	cmp	r3, #0
 800262c:	4606      	mov	r6, r0
 800262e:	f340 8088 	ble.w	8002742 <_dtoa_r+0x8c2>
 8002632:	461a      	mov	r2, r3
 8002634:	4601      	mov	r1, r0
 8002636:	4620      	mov	r0, r4
 8002638:	f000 fbe2 	bl	8002e00 <__pow5mult>
 800263c:	9b06      	ldr	r3, [sp, #24]
 800263e:	2b01      	cmp	r3, #1
 8002640:	4606      	mov	r6, r0
 8002642:	f340 8081 	ble.w	8002748 <_dtoa_r+0x8c8>
 8002646:	f04f 0800 	mov.w	r8, #0
 800264a:	6933      	ldr	r3, [r6, #16]
 800264c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8002650:	6918      	ldr	r0, [r3, #16]
 8002652:	f000 fac5 	bl	8002be0 <__hi0bits>
 8002656:	f1c0 0020 	rsb	r0, r0, #32
 800265a:	9b05      	ldr	r3, [sp, #20]
 800265c:	4418      	add	r0, r3
 800265e:	f010 001f 	ands.w	r0, r0, #31
 8002662:	f000 8092 	beq.w	800278a <_dtoa_r+0x90a>
 8002666:	f1c0 0320 	rsb	r3, r0, #32
 800266a:	2b04      	cmp	r3, #4
 800266c:	f340 808a 	ble.w	8002784 <_dtoa_r+0x904>
 8002670:	f1c0 001c 	rsb	r0, r0, #28
 8002674:	9b04      	ldr	r3, [sp, #16]
 8002676:	4403      	add	r3, r0
 8002678:	9304      	str	r3, [sp, #16]
 800267a:	9b05      	ldr	r3, [sp, #20]
 800267c:	4403      	add	r3, r0
 800267e:	4405      	add	r5, r0
 8002680:	9305      	str	r3, [sp, #20]
 8002682:	9b04      	ldr	r3, [sp, #16]
 8002684:	2b00      	cmp	r3, #0
 8002686:	dd07      	ble.n	8002698 <_dtoa_r+0x818>
 8002688:	ee18 1a10 	vmov	r1, s16
 800268c:	461a      	mov	r2, r3
 800268e:	4620      	mov	r0, r4
 8002690:	f000 fc10 	bl	8002eb4 <__lshift>
 8002694:	ee08 0a10 	vmov	s16, r0
 8002698:	9b05      	ldr	r3, [sp, #20]
 800269a:	2b00      	cmp	r3, #0
 800269c:	dd05      	ble.n	80026aa <_dtoa_r+0x82a>
 800269e:	4631      	mov	r1, r6
 80026a0:	461a      	mov	r2, r3
 80026a2:	4620      	mov	r0, r4
 80026a4:	f000 fc06 	bl	8002eb4 <__lshift>
 80026a8:	4606      	mov	r6, r0
 80026aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80026ac:	2b00      	cmp	r3, #0
 80026ae:	d06e      	beq.n	800278e <_dtoa_r+0x90e>
 80026b0:	ee18 0a10 	vmov	r0, s16
 80026b4:	4631      	mov	r1, r6
 80026b6:	f000 fc6d 	bl	8002f94 <__mcmp>
 80026ba:	2800      	cmp	r0, #0
 80026bc:	da67      	bge.n	800278e <_dtoa_r+0x90e>
 80026be:	9b00      	ldr	r3, [sp, #0]
 80026c0:	3b01      	subs	r3, #1
 80026c2:	ee18 1a10 	vmov	r1, s16
 80026c6:	9300      	str	r3, [sp, #0]
 80026c8:	220a      	movs	r2, #10
 80026ca:	2300      	movs	r3, #0
 80026cc:	4620      	mov	r0, r4
 80026ce:	f000 fa41 	bl	8002b54 <__multadd>
 80026d2:	9b08      	ldr	r3, [sp, #32]
 80026d4:	ee08 0a10 	vmov	s16, r0
 80026d8:	2b00      	cmp	r3, #0
 80026da:	f000 81b1 	beq.w	8002a40 <_dtoa_r+0xbc0>
 80026de:	2300      	movs	r3, #0
 80026e0:	4639      	mov	r1, r7
 80026e2:	220a      	movs	r2, #10
 80026e4:	4620      	mov	r0, r4
 80026e6:	f000 fa35 	bl	8002b54 <__multadd>
 80026ea:	9b02      	ldr	r3, [sp, #8]
 80026ec:	2b00      	cmp	r3, #0
 80026ee:	4607      	mov	r7, r0
 80026f0:	f300 808e 	bgt.w	8002810 <_dtoa_r+0x990>
 80026f4:	9b06      	ldr	r3, [sp, #24]
 80026f6:	2b02      	cmp	r3, #2
 80026f8:	dc51      	bgt.n	800279e <_dtoa_r+0x91e>
 80026fa:	e089      	b.n	8002810 <_dtoa_r+0x990>
 80026fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80026fe:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8002702:	e74b      	b.n	800259c <_dtoa_r+0x71c>
 8002704:	9b03      	ldr	r3, [sp, #12]
 8002706:	1e5e      	subs	r6, r3, #1
 8002708:	9b07      	ldr	r3, [sp, #28]
 800270a:	42b3      	cmp	r3, r6
 800270c:	bfbf      	itttt	lt
 800270e:	9b07      	ldrlt	r3, [sp, #28]
 8002710:	9607      	strlt	r6, [sp, #28]
 8002712:	1af2      	sublt	r2, r6, r3
 8002714:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8002716:	bfb6      	itet	lt
 8002718:	189b      	addlt	r3, r3, r2
 800271a:	1b9e      	subge	r6, r3, r6
 800271c:	930a      	strlt	r3, [sp, #40]	; 0x28
 800271e:	9b03      	ldr	r3, [sp, #12]
 8002720:	bfb8      	it	lt
 8002722:	2600      	movlt	r6, #0
 8002724:	2b00      	cmp	r3, #0
 8002726:	bfb7      	itett	lt
 8002728:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 800272c:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 8002730:	1a9d      	sublt	r5, r3, r2
 8002732:	2300      	movlt	r3, #0
 8002734:	e734      	b.n	80025a0 <_dtoa_r+0x720>
 8002736:	9e07      	ldr	r6, [sp, #28]
 8002738:	9d04      	ldr	r5, [sp, #16]
 800273a:	9f08      	ldr	r7, [sp, #32]
 800273c:	e73b      	b.n	80025b6 <_dtoa_r+0x736>
 800273e:	9a07      	ldr	r2, [sp, #28]
 8002740:	e767      	b.n	8002612 <_dtoa_r+0x792>
 8002742:	9b06      	ldr	r3, [sp, #24]
 8002744:	2b01      	cmp	r3, #1
 8002746:	dc18      	bgt.n	800277a <_dtoa_r+0x8fa>
 8002748:	f1ba 0f00 	cmp.w	sl, #0
 800274c:	d115      	bne.n	800277a <_dtoa_r+0x8fa>
 800274e:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8002752:	b993      	cbnz	r3, 800277a <_dtoa_r+0x8fa>
 8002754:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8002758:	0d1b      	lsrs	r3, r3, #20
 800275a:	051b      	lsls	r3, r3, #20
 800275c:	b183      	cbz	r3, 8002780 <_dtoa_r+0x900>
 800275e:	9b04      	ldr	r3, [sp, #16]
 8002760:	3301      	adds	r3, #1
 8002762:	9304      	str	r3, [sp, #16]
 8002764:	9b05      	ldr	r3, [sp, #20]
 8002766:	3301      	adds	r3, #1
 8002768:	9305      	str	r3, [sp, #20]
 800276a:	f04f 0801 	mov.w	r8, #1
 800276e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002770:	2b00      	cmp	r3, #0
 8002772:	f47f af6a 	bne.w	800264a <_dtoa_r+0x7ca>
 8002776:	2001      	movs	r0, #1
 8002778:	e76f      	b.n	800265a <_dtoa_r+0x7da>
 800277a:	f04f 0800 	mov.w	r8, #0
 800277e:	e7f6      	b.n	800276e <_dtoa_r+0x8ee>
 8002780:	4698      	mov	r8, r3
 8002782:	e7f4      	b.n	800276e <_dtoa_r+0x8ee>
 8002784:	f43f af7d 	beq.w	8002682 <_dtoa_r+0x802>
 8002788:	4618      	mov	r0, r3
 800278a:	301c      	adds	r0, #28
 800278c:	e772      	b.n	8002674 <_dtoa_r+0x7f4>
 800278e:	9b03      	ldr	r3, [sp, #12]
 8002790:	2b00      	cmp	r3, #0
 8002792:	dc37      	bgt.n	8002804 <_dtoa_r+0x984>
 8002794:	9b06      	ldr	r3, [sp, #24]
 8002796:	2b02      	cmp	r3, #2
 8002798:	dd34      	ble.n	8002804 <_dtoa_r+0x984>
 800279a:	9b03      	ldr	r3, [sp, #12]
 800279c:	9302      	str	r3, [sp, #8]
 800279e:	9b02      	ldr	r3, [sp, #8]
 80027a0:	b96b      	cbnz	r3, 80027be <_dtoa_r+0x93e>
 80027a2:	4631      	mov	r1, r6
 80027a4:	2205      	movs	r2, #5
 80027a6:	4620      	mov	r0, r4
 80027a8:	f000 f9d4 	bl	8002b54 <__multadd>
 80027ac:	4601      	mov	r1, r0
 80027ae:	4606      	mov	r6, r0
 80027b0:	ee18 0a10 	vmov	r0, s16
 80027b4:	f000 fbee 	bl	8002f94 <__mcmp>
 80027b8:	2800      	cmp	r0, #0
 80027ba:	f73f adbb 	bgt.w	8002334 <_dtoa_r+0x4b4>
 80027be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80027c0:	9d01      	ldr	r5, [sp, #4]
 80027c2:	43db      	mvns	r3, r3
 80027c4:	9300      	str	r3, [sp, #0]
 80027c6:	f04f 0800 	mov.w	r8, #0
 80027ca:	4631      	mov	r1, r6
 80027cc:	4620      	mov	r0, r4
 80027ce:	f000 f99f 	bl	8002b10 <_Bfree>
 80027d2:	2f00      	cmp	r7, #0
 80027d4:	f43f aea4 	beq.w	8002520 <_dtoa_r+0x6a0>
 80027d8:	f1b8 0f00 	cmp.w	r8, #0
 80027dc:	d005      	beq.n	80027ea <_dtoa_r+0x96a>
 80027de:	45b8      	cmp	r8, r7
 80027e0:	d003      	beq.n	80027ea <_dtoa_r+0x96a>
 80027e2:	4641      	mov	r1, r8
 80027e4:	4620      	mov	r0, r4
 80027e6:	f000 f993 	bl	8002b10 <_Bfree>
 80027ea:	4639      	mov	r1, r7
 80027ec:	4620      	mov	r0, r4
 80027ee:	f000 f98f 	bl	8002b10 <_Bfree>
 80027f2:	e695      	b.n	8002520 <_dtoa_r+0x6a0>
 80027f4:	2600      	movs	r6, #0
 80027f6:	4637      	mov	r7, r6
 80027f8:	e7e1      	b.n	80027be <_dtoa_r+0x93e>
 80027fa:	9700      	str	r7, [sp, #0]
 80027fc:	4637      	mov	r7, r6
 80027fe:	e599      	b.n	8002334 <_dtoa_r+0x4b4>
 8002800:	40240000 	.word	0x40240000
 8002804:	9b08      	ldr	r3, [sp, #32]
 8002806:	2b00      	cmp	r3, #0
 8002808:	f000 80ca 	beq.w	80029a0 <_dtoa_r+0xb20>
 800280c:	9b03      	ldr	r3, [sp, #12]
 800280e:	9302      	str	r3, [sp, #8]
 8002810:	2d00      	cmp	r5, #0
 8002812:	dd05      	ble.n	8002820 <_dtoa_r+0x9a0>
 8002814:	4639      	mov	r1, r7
 8002816:	462a      	mov	r2, r5
 8002818:	4620      	mov	r0, r4
 800281a:	f000 fb4b 	bl	8002eb4 <__lshift>
 800281e:	4607      	mov	r7, r0
 8002820:	f1b8 0f00 	cmp.w	r8, #0
 8002824:	d05b      	beq.n	80028de <_dtoa_r+0xa5e>
 8002826:	6879      	ldr	r1, [r7, #4]
 8002828:	4620      	mov	r0, r4
 800282a:	f000 f931 	bl	8002a90 <_Balloc>
 800282e:	4605      	mov	r5, r0
 8002830:	b928      	cbnz	r0, 800283e <_dtoa_r+0x9be>
 8002832:	4b87      	ldr	r3, [pc, #540]	; (8002a50 <_dtoa_r+0xbd0>)
 8002834:	4602      	mov	r2, r0
 8002836:	f240 21ea 	movw	r1, #746	; 0x2ea
 800283a:	f7ff bb3b 	b.w	8001eb4 <_dtoa_r+0x34>
 800283e:	693a      	ldr	r2, [r7, #16]
 8002840:	3202      	adds	r2, #2
 8002842:	0092      	lsls	r2, r2, #2
 8002844:	f107 010c 	add.w	r1, r7, #12
 8002848:	300c      	adds	r0, #12
 800284a:	f000 f913 	bl	8002a74 <memcpy>
 800284e:	2201      	movs	r2, #1
 8002850:	4629      	mov	r1, r5
 8002852:	4620      	mov	r0, r4
 8002854:	f000 fb2e 	bl	8002eb4 <__lshift>
 8002858:	9b01      	ldr	r3, [sp, #4]
 800285a:	f103 0901 	add.w	r9, r3, #1
 800285e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8002862:	4413      	add	r3, r2
 8002864:	9305      	str	r3, [sp, #20]
 8002866:	f00a 0301 	and.w	r3, sl, #1
 800286a:	46b8      	mov	r8, r7
 800286c:	9304      	str	r3, [sp, #16]
 800286e:	4607      	mov	r7, r0
 8002870:	4631      	mov	r1, r6
 8002872:	ee18 0a10 	vmov	r0, s16
 8002876:	f7ff fa75 	bl	8001d64 <quorem>
 800287a:	4641      	mov	r1, r8
 800287c:	9002      	str	r0, [sp, #8]
 800287e:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8002882:	ee18 0a10 	vmov	r0, s16
 8002886:	f000 fb85 	bl	8002f94 <__mcmp>
 800288a:	463a      	mov	r2, r7
 800288c:	9003      	str	r0, [sp, #12]
 800288e:	4631      	mov	r1, r6
 8002890:	4620      	mov	r0, r4
 8002892:	f000 fb9b 	bl	8002fcc <__mdiff>
 8002896:	68c2      	ldr	r2, [r0, #12]
 8002898:	f109 3bff 	add.w	fp, r9, #4294967295
 800289c:	4605      	mov	r5, r0
 800289e:	bb02      	cbnz	r2, 80028e2 <_dtoa_r+0xa62>
 80028a0:	4601      	mov	r1, r0
 80028a2:	ee18 0a10 	vmov	r0, s16
 80028a6:	f000 fb75 	bl	8002f94 <__mcmp>
 80028aa:	4602      	mov	r2, r0
 80028ac:	4629      	mov	r1, r5
 80028ae:	4620      	mov	r0, r4
 80028b0:	9207      	str	r2, [sp, #28]
 80028b2:	f000 f92d 	bl	8002b10 <_Bfree>
 80028b6:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80028ba:	ea43 0102 	orr.w	r1, r3, r2
 80028be:	9b04      	ldr	r3, [sp, #16]
 80028c0:	430b      	orrs	r3, r1
 80028c2:	464d      	mov	r5, r9
 80028c4:	d10f      	bne.n	80028e6 <_dtoa_r+0xa66>
 80028c6:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 80028ca:	d02a      	beq.n	8002922 <_dtoa_r+0xaa2>
 80028cc:	9b03      	ldr	r3, [sp, #12]
 80028ce:	2b00      	cmp	r3, #0
 80028d0:	dd02      	ble.n	80028d8 <_dtoa_r+0xa58>
 80028d2:	9b02      	ldr	r3, [sp, #8]
 80028d4:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 80028d8:	f88b a000 	strb.w	sl, [fp]
 80028dc:	e775      	b.n	80027ca <_dtoa_r+0x94a>
 80028de:	4638      	mov	r0, r7
 80028e0:	e7ba      	b.n	8002858 <_dtoa_r+0x9d8>
 80028e2:	2201      	movs	r2, #1
 80028e4:	e7e2      	b.n	80028ac <_dtoa_r+0xa2c>
 80028e6:	9b03      	ldr	r3, [sp, #12]
 80028e8:	2b00      	cmp	r3, #0
 80028ea:	db04      	blt.n	80028f6 <_dtoa_r+0xa76>
 80028ec:	9906      	ldr	r1, [sp, #24]
 80028ee:	430b      	orrs	r3, r1
 80028f0:	9904      	ldr	r1, [sp, #16]
 80028f2:	430b      	orrs	r3, r1
 80028f4:	d122      	bne.n	800293c <_dtoa_r+0xabc>
 80028f6:	2a00      	cmp	r2, #0
 80028f8:	ddee      	ble.n	80028d8 <_dtoa_r+0xa58>
 80028fa:	ee18 1a10 	vmov	r1, s16
 80028fe:	2201      	movs	r2, #1
 8002900:	4620      	mov	r0, r4
 8002902:	f000 fad7 	bl	8002eb4 <__lshift>
 8002906:	4631      	mov	r1, r6
 8002908:	ee08 0a10 	vmov	s16, r0
 800290c:	f000 fb42 	bl	8002f94 <__mcmp>
 8002910:	2800      	cmp	r0, #0
 8002912:	dc03      	bgt.n	800291c <_dtoa_r+0xa9c>
 8002914:	d1e0      	bne.n	80028d8 <_dtoa_r+0xa58>
 8002916:	f01a 0f01 	tst.w	sl, #1
 800291a:	d0dd      	beq.n	80028d8 <_dtoa_r+0xa58>
 800291c:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8002920:	d1d7      	bne.n	80028d2 <_dtoa_r+0xa52>
 8002922:	2339      	movs	r3, #57	; 0x39
 8002924:	f88b 3000 	strb.w	r3, [fp]
 8002928:	462b      	mov	r3, r5
 800292a:	461d      	mov	r5, r3
 800292c:	3b01      	subs	r3, #1
 800292e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8002932:	2a39      	cmp	r2, #57	; 0x39
 8002934:	d071      	beq.n	8002a1a <_dtoa_r+0xb9a>
 8002936:	3201      	adds	r2, #1
 8002938:	701a      	strb	r2, [r3, #0]
 800293a:	e746      	b.n	80027ca <_dtoa_r+0x94a>
 800293c:	2a00      	cmp	r2, #0
 800293e:	dd07      	ble.n	8002950 <_dtoa_r+0xad0>
 8002940:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8002944:	d0ed      	beq.n	8002922 <_dtoa_r+0xaa2>
 8002946:	f10a 0301 	add.w	r3, sl, #1
 800294a:	f88b 3000 	strb.w	r3, [fp]
 800294e:	e73c      	b.n	80027ca <_dtoa_r+0x94a>
 8002950:	9b05      	ldr	r3, [sp, #20]
 8002952:	f809 ac01 	strb.w	sl, [r9, #-1]
 8002956:	4599      	cmp	r9, r3
 8002958:	d047      	beq.n	80029ea <_dtoa_r+0xb6a>
 800295a:	ee18 1a10 	vmov	r1, s16
 800295e:	2300      	movs	r3, #0
 8002960:	220a      	movs	r2, #10
 8002962:	4620      	mov	r0, r4
 8002964:	f000 f8f6 	bl	8002b54 <__multadd>
 8002968:	45b8      	cmp	r8, r7
 800296a:	ee08 0a10 	vmov	s16, r0
 800296e:	f04f 0300 	mov.w	r3, #0
 8002972:	f04f 020a 	mov.w	r2, #10
 8002976:	4641      	mov	r1, r8
 8002978:	4620      	mov	r0, r4
 800297a:	d106      	bne.n	800298a <_dtoa_r+0xb0a>
 800297c:	f000 f8ea 	bl	8002b54 <__multadd>
 8002980:	4680      	mov	r8, r0
 8002982:	4607      	mov	r7, r0
 8002984:	f109 0901 	add.w	r9, r9, #1
 8002988:	e772      	b.n	8002870 <_dtoa_r+0x9f0>
 800298a:	f000 f8e3 	bl	8002b54 <__multadd>
 800298e:	4639      	mov	r1, r7
 8002990:	4680      	mov	r8, r0
 8002992:	2300      	movs	r3, #0
 8002994:	220a      	movs	r2, #10
 8002996:	4620      	mov	r0, r4
 8002998:	f000 f8dc 	bl	8002b54 <__multadd>
 800299c:	4607      	mov	r7, r0
 800299e:	e7f1      	b.n	8002984 <_dtoa_r+0xb04>
 80029a0:	9b03      	ldr	r3, [sp, #12]
 80029a2:	9302      	str	r3, [sp, #8]
 80029a4:	9d01      	ldr	r5, [sp, #4]
 80029a6:	ee18 0a10 	vmov	r0, s16
 80029aa:	4631      	mov	r1, r6
 80029ac:	f7ff f9da 	bl	8001d64 <quorem>
 80029b0:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 80029b4:	9b01      	ldr	r3, [sp, #4]
 80029b6:	f805 ab01 	strb.w	sl, [r5], #1
 80029ba:	1aea      	subs	r2, r5, r3
 80029bc:	9b02      	ldr	r3, [sp, #8]
 80029be:	4293      	cmp	r3, r2
 80029c0:	dd09      	ble.n	80029d6 <_dtoa_r+0xb56>
 80029c2:	ee18 1a10 	vmov	r1, s16
 80029c6:	2300      	movs	r3, #0
 80029c8:	220a      	movs	r2, #10
 80029ca:	4620      	mov	r0, r4
 80029cc:	f000 f8c2 	bl	8002b54 <__multadd>
 80029d0:	ee08 0a10 	vmov	s16, r0
 80029d4:	e7e7      	b.n	80029a6 <_dtoa_r+0xb26>
 80029d6:	9b02      	ldr	r3, [sp, #8]
 80029d8:	2b00      	cmp	r3, #0
 80029da:	bfc8      	it	gt
 80029dc:	461d      	movgt	r5, r3
 80029de:	9b01      	ldr	r3, [sp, #4]
 80029e0:	bfd8      	it	le
 80029e2:	2501      	movle	r5, #1
 80029e4:	441d      	add	r5, r3
 80029e6:	f04f 0800 	mov.w	r8, #0
 80029ea:	ee18 1a10 	vmov	r1, s16
 80029ee:	2201      	movs	r2, #1
 80029f0:	4620      	mov	r0, r4
 80029f2:	f000 fa5f 	bl	8002eb4 <__lshift>
 80029f6:	4631      	mov	r1, r6
 80029f8:	ee08 0a10 	vmov	s16, r0
 80029fc:	f000 faca 	bl	8002f94 <__mcmp>
 8002a00:	2800      	cmp	r0, #0
 8002a02:	dc91      	bgt.n	8002928 <_dtoa_r+0xaa8>
 8002a04:	d102      	bne.n	8002a0c <_dtoa_r+0xb8c>
 8002a06:	f01a 0f01 	tst.w	sl, #1
 8002a0a:	d18d      	bne.n	8002928 <_dtoa_r+0xaa8>
 8002a0c:	462b      	mov	r3, r5
 8002a0e:	461d      	mov	r5, r3
 8002a10:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002a14:	2a30      	cmp	r2, #48	; 0x30
 8002a16:	d0fa      	beq.n	8002a0e <_dtoa_r+0xb8e>
 8002a18:	e6d7      	b.n	80027ca <_dtoa_r+0x94a>
 8002a1a:	9a01      	ldr	r2, [sp, #4]
 8002a1c:	429a      	cmp	r2, r3
 8002a1e:	d184      	bne.n	800292a <_dtoa_r+0xaaa>
 8002a20:	9b00      	ldr	r3, [sp, #0]
 8002a22:	3301      	adds	r3, #1
 8002a24:	9300      	str	r3, [sp, #0]
 8002a26:	2331      	movs	r3, #49	; 0x31
 8002a28:	7013      	strb	r3, [r2, #0]
 8002a2a:	e6ce      	b.n	80027ca <_dtoa_r+0x94a>
 8002a2c:	4b09      	ldr	r3, [pc, #36]	; (8002a54 <_dtoa_r+0xbd4>)
 8002a2e:	f7ff ba95 	b.w	8001f5c <_dtoa_r+0xdc>
 8002a32:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002a34:	2b00      	cmp	r3, #0
 8002a36:	f47f aa6e 	bne.w	8001f16 <_dtoa_r+0x96>
 8002a3a:	4b07      	ldr	r3, [pc, #28]	; (8002a58 <_dtoa_r+0xbd8>)
 8002a3c:	f7ff ba8e 	b.w	8001f5c <_dtoa_r+0xdc>
 8002a40:	9b02      	ldr	r3, [sp, #8]
 8002a42:	2b00      	cmp	r3, #0
 8002a44:	dcae      	bgt.n	80029a4 <_dtoa_r+0xb24>
 8002a46:	9b06      	ldr	r3, [sp, #24]
 8002a48:	2b02      	cmp	r3, #2
 8002a4a:	f73f aea8 	bgt.w	800279e <_dtoa_r+0x91e>
 8002a4e:	e7a9      	b.n	80029a4 <_dtoa_r+0xb24>
 8002a50:	0800401f 	.word	0x0800401f
 8002a54:	08003f7c 	.word	0x08003f7c
 8002a58:	08003fa0 	.word	0x08003fa0

08002a5c <_localeconv_r>:
 8002a5c:	4800      	ldr	r0, [pc, #0]	; (8002a60 <_localeconv_r+0x4>)
 8002a5e:	4770      	bx	lr
 8002a60:	20000158 	.word	0x20000158

08002a64 <malloc>:
 8002a64:	4b02      	ldr	r3, [pc, #8]	; (8002a70 <malloc+0xc>)
 8002a66:	4601      	mov	r1, r0
 8002a68:	6818      	ldr	r0, [r3, #0]
 8002a6a:	f000 bc17 	b.w	800329c <_malloc_r>
 8002a6e:	bf00      	nop
 8002a70:	20000004 	.word	0x20000004

08002a74 <memcpy>:
 8002a74:	440a      	add	r2, r1
 8002a76:	4291      	cmp	r1, r2
 8002a78:	f100 33ff 	add.w	r3, r0, #4294967295
 8002a7c:	d100      	bne.n	8002a80 <memcpy+0xc>
 8002a7e:	4770      	bx	lr
 8002a80:	b510      	push	{r4, lr}
 8002a82:	f811 4b01 	ldrb.w	r4, [r1], #1
 8002a86:	f803 4f01 	strb.w	r4, [r3, #1]!
 8002a8a:	4291      	cmp	r1, r2
 8002a8c:	d1f9      	bne.n	8002a82 <memcpy+0xe>
 8002a8e:	bd10      	pop	{r4, pc}

08002a90 <_Balloc>:
 8002a90:	b570      	push	{r4, r5, r6, lr}
 8002a92:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8002a94:	4604      	mov	r4, r0
 8002a96:	460d      	mov	r5, r1
 8002a98:	b976      	cbnz	r6, 8002ab8 <_Balloc+0x28>
 8002a9a:	2010      	movs	r0, #16
 8002a9c:	f7ff ffe2 	bl	8002a64 <malloc>
 8002aa0:	4602      	mov	r2, r0
 8002aa2:	6260      	str	r0, [r4, #36]	; 0x24
 8002aa4:	b920      	cbnz	r0, 8002ab0 <_Balloc+0x20>
 8002aa6:	4b18      	ldr	r3, [pc, #96]	; (8002b08 <_Balloc+0x78>)
 8002aa8:	4818      	ldr	r0, [pc, #96]	; (8002b0c <_Balloc+0x7c>)
 8002aaa:	2166      	movs	r1, #102	; 0x66
 8002aac:	f000 fc7a 	bl	80033a4 <__assert_func>
 8002ab0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8002ab4:	6006      	str	r6, [r0, #0]
 8002ab6:	60c6      	str	r6, [r0, #12]
 8002ab8:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8002aba:	68f3      	ldr	r3, [r6, #12]
 8002abc:	b183      	cbz	r3, 8002ae0 <_Balloc+0x50>
 8002abe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002ac0:	68db      	ldr	r3, [r3, #12]
 8002ac2:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8002ac6:	b9b8      	cbnz	r0, 8002af8 <_Balloc+0x68>
 8002ac8:	2101      	movs	r1, #1
 8002aca:	fa01 f605 	lsl.w	r6, r1, r5
 8002ace:	1d72      	adds	r2, r6, #5
 8002ad0:	0092      	lsls	r2, r2, #2
 8002ad2:	4620      	mov	r0, r4
 8002ad4:	f000 fb60 	bl	8003198 <_calloc_r>
 8002ad8:	b160      	cbz	r0, 8002af4 <_Balloc+0x64>
 8002ada:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8002ade:	e00e      	b.n	8002afe <_Balloc+0x6e>
 8002ae0:	2221      	movs	r2, #33	; 0x21
 8002ae2:	2104      	movs	r1, #4
 8002ae4:	4620      	mov	r0, r4
 8002ae6:	f000 fb57 	bl	8003198 <_calloc_r>
 8002aea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002aec:	60f0      	str	r0, [r6, #12]
 8002aee:	68db      	ldr	r3, [r3, #12]
 8002af0:	2b00      	cmp	r3, #0
 8002af2:	d1e4      	bne.n	8002abe <_Balloc+0x2e>
 8002af4:	2000      	movs	r0, #0
 8002af6:	bd70      	pop	{r4, r5, r6, pc}
 8002af8:	6802      	ldr	r2, [r0, #0]
 8002afa:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8002afe:	2300      	movs	r3, #0
 8002b00:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8002b04:	e7f7      	b.n	8002af6 <_Balloc+0x66>
 8002b06:	bf00      	nop
 8002b08:	08003fad 	.word	0x08003fad
 8002b0c:	08004030 	.word	0x08004030

08002b10 <_Bfree>:
 8002b10:	b570      	push	{r4, r5, r6, lr}
 8002b12:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8002b14:	4605      	mov	r5, r0
 8002b16:	460c      	mov	r4, r1
 8002b18:	b976      	cbnz	r6, 8002b38 <_Bfree+0x28>
 8002b1a:	2010      	movs	r0, #16
 8002b1c:	f7ff ffa2 	bl	8002a64 <malloc>
 8002b20:	4602      	mov	r2, r0
 8002b22:	6268      	str	r0, [r5, #36]	; 0x24
 8002b24:	b920      	cbnz	r0, 8002b30 <_Bfree+0x20>
 8002b26:	4b09      	ldr	r3, [pc, #36]	; (8002b4c <_Bfree+0x3c>)
 8002b28:	4809      	ldr	r0, [pc, #36]	; (8002b50 <_Bfree+0x40>)
 8002b2a:	218a      	movs	r1, #138	; 0x8a
 8002b2c:	f000 fc3a 	bl	80033a4 <__assert_func>
 8002b30:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8002b34:	6006      	str	r6, [r0, #0]
 8002b36:	60c6      	str	r6, [r0, #12]
 8002b38:	b13c      	cbz	r4, 8002b4a <_Bfree+0x3a>
 8002b3a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8002b3c:	6862      	ldr	r2, [r4, #4]
 8002b3e:	68db      	ldr	r3, [r3, #12]
 8002b40:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8002b44:	6021      	str	r1, [r4, #0]
 8002b46:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8002b4a:	bd70      	pop	{r4, r5, r6, pc}
 8002b4c:	08003fad 	.word	0x08003fad
 8002b50:	08004030 	.word	0x08004030

08002b54 <__multadd>:
 8002b54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002b58:	690d      	ldr	r5, [r1, #16]
 8002b5a:	4607      	mov	r7, r0
 8002b5c:	460c      	mov	r4, r1
 8002b5e:	461e      	mov	r6, r3
 8002b60:	f101 0c14 	add.w	ip, r1, #20
 8002b64:	2000      	movs	r0, #0
 8002b66:	f8dc 3000 	ldr.w	r3, [ip]
 8002b6a:	b299      	uxth	r1, r3
 8002b6c:	fb02 6101 	mla	r1, r2, r1, r6
 8002b70:	0c1e      	lsrs	r6, r3, #16
 8002b72:	0c0b      	lsrs	r3, r1, #16
 8002b74:	fb02 3306 	mla	r3, r2, r6, r3
 8002b78:	b289      	uxth	r1, r1
 8002b7a:	3001      	adds	r0, #1
 8002b7c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8002b80:	4285      	cmp	r5, r0
 8002b82:	f84c 1b04 	str.w	r1, [ip], #4
 8002b86:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8002b8a:	dcec      	bgt.n	8002b66 <__multadd+0x12>
 8002b8c:	b30e      	cbz	r6, 8002bd2 <__multadd+0x7e>
 8002b8e:	68a3      	ldr	r3, [r4, #8]
 8002b90:	42ab      	cmp	r3, r5
 8002b92:	dc19      	bgt.n	8002bc8 <__multadd+0x74>
 8002b94:	6861      	ldr	r1, [r4, #4]
 8002b96:	4638      	mov	r0, r7
 8002b98:	3101      	adds	r1, #1
 8002b9a:	f7ff ff79 	bl	8002a90 <_Balloc>
 8002b9e:	4680      	mov	r8, r0
 8002ba0:	b928      	cbnz	r0, 8002bae <__multadd+0x5a>
 8002ba2:	4602      	mov	r2, r0
 8002ba4:	4b0c      	ldr	r3, [pc, #48]	; (8002bd8 <__multadd+0x84>)
 8002ba6:	480d      	ldr	r0, [pc, #52]	; (8002bdc <__multadd+0x88>)
 8002ba8:	21b5      	movs	r1, #181	; 0xb5
 8002baa:	f000 fbfb 	bl	80033a4 <__assert_func>
 8002bae:	6922      	ldr	r2, [r4, #16]
 8002bb0:	3202      	adds	r2, #2
 8002bb2:	f104 010c 	add.w	r1, r4, #12
 8002bb6:	0092      	lsls	r2, r2, #2
 8002bb8:	300c      	adds	r0, #12
 8002bba:	f7ff ff5b 	bl	8002a74 <memcpy>
 8002bbe:	4621      	mov	r1, r4
 8002bc0:	4638      	mov	r0, r7
 8002bc2:	f7ff ffa5 	bl	8002b10 <_Bfree>
 8002bc6:	4644      	mov	r4, r8
 8002bc8:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8002bcc:	3501      	adds	r5, #1
 8002bce:	615e      	str	r6, [r3, #20]
 8002bd0:	6125      	str	r5, [r4, #16]
 8002bd2:	4620      	mov	r0, r4
 8002bd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002bd8:	0800401f 	.word	0x0800401f
 8002bdc:	08004030 	.word	0x08004030

08002be0 <__hi0bits>:
 8002be0:	0c03      	lsrs	r3, r0, #16
 8002be2:	041b      	lsls	r3, r3, #16
 8002be4:	b9d3      	cbnz	r3, 8002c1c <__hi0bits+0x3c>
 8002be6:	0400      	lsls	r0, r0, #16
 8002be8:	2310      	movs	r3, #16
 8002bea:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8002bee:	bf04      	itt	eq
 8002bf0:	0200      	lsleq	r0, r0, #8
 8002bf2:	3308      	addeq	r3, #8
 8002bf4:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8002bf8:	bf04      	itt	eq
 8002bfa:	0100      	lsleq	r0, r0, #4
 8002bfc:	3304      	addeq	r3, #4
 8002bfe:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8002c02:	bf04      	itt	eq
 8002c04:	0080      	lsleq	r0, r0, #2
 8002c06:	3302      	addeq	r3, #2
 8002c08:	2800      	cmp	r0, #0
 8002c0a:	db05      	blt.n	8002c18 <__hi0bits+0x38>
 8002c0c:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8002c10:	f103 0301 	add.w	r3, r3, #1
 8002c14:	bf08      	it	eq
 8002c16:	2320      	moveq	r3, #32
 8002c18:	4618      	mov	r0, r3
 8002c1a:	4770      	bx	lr
 8002c1c:	2300      	movs	r3, #0
 8002c1e:	e7e4      	b.n	8002bea <__hi0bits+0xa>

08002c20 <__lo0bits>:
 8002c20:	6803      	ldr	r3, [r0, #0]
 8002c22:	f013 0207 	ands.w	r2, r3, #7
 8002c26:	4601      	mov	r1, r0
 8002c28:	d00b      	beq.n	8002c42 <__lo0bits+0x22>
 8002c2a:	07da      	lsls	r2, r3, #31
 8002c2c:	d423      	bmi.n	8002c76 <__lo0bits+0x56>
 8002c2e:	0798      	lsls	r0, r3, #30
 8002c30:	bf49      	itett	mi
 8002c32:	085b      	lsrmi	r3, r3, #1
 8002c34:	089b      	lsrpl	r3, r3, #2
 8002c36:	2001      	movmi	r0, #1
 8002c38:	600b      	strmi	r3, [r1, #0]
 8002c3a:	bf5c      	itt	pl
 8002c3c:	600b      	strpl	r3, [r1, #0]
 8002c3e:	2002      	movpl	r0, #2
 8002c40:	4770      	bx	lr
 8002c42:	b298      	uxth	r0, r3
 8002c44:	b9a8      	cbnz	r0, 8002c72 <__lo0bits+0x52>
 8002c46:	0c1b      	lsrs	r3, r3, #16
 8002c48:	2010      	movs	r0, #16
 8002c4a:	b2da      	uxtb	r2, r3
 8002c4c:	b90a      	cbnz	r2, 8002c52 <__lo0bits+0x32>
 8002c4e:	3008      	adds	r0, #8
 8002c50:	0a1b      	lsrs	r3, r3, #8
 8002c52:	071a      	lsls	r2, r3, #28
 8002c54:	bf04      	itt	eq
 8002c56:	091b      	lsreq	r3, r3, #4
 8002c58:	3004      	addeq	r0, #4
 8002c5a:	079a      	lsls	r2, r3, #30
 8002c5c:	bf04      	itt	eq
 8002c5e:	089b      	lsreq	r3, r3, #2
 8002c60:	3002      	addeq	r0, #2
 8002c62:	07da      	lsls	r2, r3, #31
 8002c64:	d403      	bmi.n	8002c6e <__lo0bits+0x4e>
 8002c66:	085b      	lsrs	r3, r3, #1
 8002c68:	f100 0001 	add.w	r0, r0, #1
 8002c6c:	d005      	beq.n	8002c7a <__lo0bits+0x5a>
 8002c6e:	600b      	str	r3, [r1, #0]
 8002c70:	4770      	bx	lr
 8002c72:	4610      	mov	r0, r2
 8002c74:	e7e9      	b.n	8002c4a <__lo0bits+0x2a>
 8002c76:	2000      	movs	r0, #0
 8002c78:	4770      	bx	lr
 8002c7a:	2020      	movs	r0, #32
 8002c7c:	4770      	bx	lr
	...

08002c80 <__i2b>:
 8002c80:	b510      	push	{r4, lr}
 8002c82:	460c      	mov	r4, r1
 8002c84:	2101      	movs	r1, #1
 8002c86:	f7ff ff03 	bl	8002a90 <_Balloc>
 8002c8a:	4602      	mov	r2, r0
 8002c8c:	b928      	cbnz	r0, 8002c9a <__i2b+0x1a>
 8002c8e:	4b05      	ldr	r3, [pc, #20]	; (8002ca4 <__i2b+0x24>)
 8002c90:	4805      	ldr	r0, [pc, #20]	; (8002ca8 <__i2b+0x28>)
 8002c92:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8002c96:	f000 fb85 	bl	80033a4 <__assert_func>
 8002c9a:	2301      	movs	r3, #1
 8002c9c:	6144      	str	r4, [r0, #20]
 8002c9e:	6103      	str	r3, [r0, #16]
 8002ca0:	bd10      	pop	{r4, pc}
 8002ca2:	bf00      	nop
 8002ca4:	0800401f 	.word	0x0800401f
 8002ca8:	08004030 	.word	0x08004030

08002cac <__multiply>:
 8002cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002cb0:	4691      	mov	r9, r2
 8002cb2:	690a      	ldr	r2, [r1, #16]
 8002cb4:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8002cb8:	429a      	cmp	r2, r3
 8002cba:	bfb8      	it	lt
 8002cbc:	460b      	movlt	r3, r1
 8002cbe:	460c      	mov	r4, r1
 8002cc0:	bfbc      	itt	lt
 8002cc2:	464c      	movlt	r4, r9
 8002cc4:	4699      	movlt	r9, r3
 8002cc6:	6927      	ldr	r7, [r4, #16]
 8002cc8:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8002ccc:	68a3      	ldr	r3, [r4, #8]
 8002cce:	6861      	ldr	r1, [r4, #4]
 8002cd0:	eb07 060a 	add.w	r6, r7, sl
 8002cd4:	42b3      	cmp	r3, r6
 8002cd6:	b085      	sub	sp, #20
 8002cd8:	bfb8      	it	lt
 8002cda:	3101      	addlt	r1, #1
 8002cdc:	f7ff fed8 	bl	8002a90 <_Balloc>
 8002ce0:	b930      	cbnz	r0, 8002cf0 <__multiply+0x44>
 8002ce2:	4602      	mov	r2, r0
 8002ce4:	4b44      	ldr	r3, [pc, #272]	; (8002df8 <__multiply+0x14c>)
 8002ce6:	4845      	ldr	r0, [pc, #276]	; (8002dfc <__multiply+0x150>)
 8002ce8:	f240 115d 	movw	r1, #349	; 0x15d
 8002cec:	f000 fb5a 	bl	80033a4 <__assert_func>
 8002cf0:	f100 0514 	add.w	r5, r0, #20
 8002cf4:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8002cf8:	462b      	mov	r3, r5
 8002cfa:	2200      	movs	r2, #0
 8002cfc:	4543      	cmp	r3, r8
 8002cfe:	d321      	bcc.n	8002d44 <__multiply+0x98>
 8002d00:	f104 0314 	add.w	r3, r4, #20
 8002d04:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8002d08:	f109 0314 	add.w	r3, r9, #20
 8002d0c:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8002d10:	9202      	str	r2, [sp, #8]
 8002d12:	1b3a      	subs	r2, r7, r4
 8002d14:	3a15      	subs	r2, #21
 8002d16:	f022 0203 	bic.w	r2, r2, #3
 8002d1a:	3204      	adds	r2, #4
 8002d1c:	f104 0115 	add.w	r1, r4, #21
 8002d20:	428f      	cmp	r7, r1
 8002d22:	bf38      	it	cc
 8002d24:	2204      	movcc	r2, #4
 8002d26:	9201      	str	r2, [sp, #4]
 8002d28:	9a02      	ldr	r2, [sp, #8]
 8002d2a:	9303      	str	r3, [sp, #12]
 8002d2c:	429a      	cmp	r2, r3
 8002d2e:	d80c      	bhi.n	8002d4a <__multiply+0x9e>
 8002d30:	2e00      	cmp	r6, #0
 8002d32:	dd03      	ble.n	8002d3c <__multiply+0x90>
 8002d34:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8002d38:	2b00      	cmp	r3, #0
 8002d3a:	d05a      	beq.n	8002df2 <__multiply+0x146>
 8002d3c:	6106      	str	r6, [r0, #16]
 8002d3e:	b005      	add	sp, #20
 8002d40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002d44:	f843 2b04 	str.w	r2, [r3], #4
 8002d48:	e7d8      	b.n	8002cfc <__multiply+0x50>
 8002d4a:	f8b3 a000 	ldrh.w	sl, [r3]
 8002d4e:	f1ba 0f00 	cmp.w	sl, #0
 8002d52:	d024      	beq.n	8002d9e <__multiply+0xf2>
 8002d54:	f104 0e14 	add.w	lr, r4, #20
 8002d58:	46a9      	mov	r9, r5
 8002d5a:	f04f 0c00 	mov.w	ip, #0
 8002d5e:	f85e 2b04 	ldr.w	r2, [lr], #4
 8002d62:	f8d9 1000 	ldr.w	r1, [r9]
 8002d66:	fa1f fb82 	uxth.w	fp, r2
 8002d6a:	b289      	uxth	r1, r1
 8002d6c:	fb0a 110b 	mla	r1, sl, fp, r1
 8002d70:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8002d74:	f8d9 2000 	ldr.w	r2, [r9]
 8002d78:	4461      	add	r1, ip
 8002d7a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8002d7e:	fb0a c20b 	mla	r2, sl, fp, ip
 8002d82:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8002d86:	b289      	uxth	r1, r1
 8002d88:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8002d8c:	4577      	cmp	r7, lr
 8002d8e:	f849 1b04 	str.w	r1, [r9], #4
 8002d92:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8002d96:	d8e2      	bhi.n	8002d5e <__multiply+0xb2>
 8002d98:	9a01      	ldr	r2, [sp, #4]
 8002d9a:	f845 c002 	str.w	ip, [r5, r2]
 8002d9e:	9a03      	ldr	r2, [sp, #12]
 8002da0:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8002da4:	3304      	adds	r3, #4
 8002da6:	f1b9 0f00 	cmp.w	r9, #0
 8002daa:	d020      	beq.n	8002dee <__multiply+0x142>
 8002dac:	6829      	ldr	r1, [r5, #0]
 8002dae:	f104 0c14 	add.w	ip, r4, #20
 8002db2:	46ae      	mov	lr, r5
 8002db4:	f04f 0a00 	mov.w	sl, #0
 8002db8:	f8bc b000 	ldrh.w	fp, [ip]
 8002dbc:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8002dc0:	fb09 220b 	mla	r2, r9, fp, r2
 8002dc4:	4492      	add	sl, r2
 8002dc6:	b289      	uxth	r1, r1
 8002dc8:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 8002dcc:	f84e 1b04 	str.w	r1, [lr], #4
 8002dd0:	f85c 2b04 	ldr.w	r2, [ip], #4
 8002dd4:	f8be 1000 	ldrh.w	r1, [lr]
 8002dd8:	0c12      	lsrs	r2, r2, #16
 8002dda:	fb09 1102 	mla	r1, r9, r2, r1
 8002dde:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 8002de2:	4567      	cmp	r7, ip
 8002de4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8002de8:	d8e6      	bhi.n	8002db8 <__multiply+0x10c>
 8002dea:	9a01      	ldr	r2, [sp, #4]
 8002dec:	50a9      	str	r1, [r5, r2]
 8002dee:	3504      	adds	r5, #4
 8002df0:	e79a      	b.n	8002d28 <__multiply+0x7c>
 8002df2:	3e01      	subs	r6, #1
 8002df4:	e79c      	b.n	8002d30 <__multiply+0x84>
 8002df6:	bf00      	nop
 8002df8:	0800401f 	.word	0x0800401f
 8002dfc:	08004030 	.word	0x08004030

08002e00 <__pow5mult>:
 8002e00:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002e04:	4615      	mov	r5, r2
 8002e06:	f012 0203 	ands.w	r2, r2, #3
 8002e0a:	4606      	mov	r6, r0
 8002e0c:	460f      	mov	r7, r1
 8002e0e:	d007      	beq.n	8002e20 <__pow5mult+0x20>
 8002e10:	4c25      	ldr	r4, [pc, #148]	; (8002ea8 <__pow5mult+0xa8>)
 8002e12:	3a01      	subs	r2, #1
 8002e14:	2300      	movs	r3, #0
 8002e16:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8002e1a:	f7ff fe9b 	bl	8002b54 <__multadd>
 8002e1e:	4607      	mov	r7, r0
 8002e20:	10ad      	asrs	r5, r5, #2
 8002e22:	d03d      	beq.n	8002ea0 <__pow5mult+0xa0>
 8002e24:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8002e26:	b97c      	cbnz	r4, 8002e48 <__pow5mult+0x48>
 8002e28:	2010      	movs	r0, #16
 8002e2a:	f7ff fe1b 	bl	8002a64 <malloc>
 8002e2e:	4602      	mov	r2, r0
 8002e30:	6270      	str	r0, [r6, #36]	; 0x24
 8002e32:	b928      	cbnz	r0, 8002e40 <__pow5mult+0x40>
 8002e34:	4b1d      	ldr	r3, [pc, #116]	; (8002eac <__pow5mult+0xac>)
 8002e36:	481e      	ldr	r0, [pc, #120]	; (8002eb0 <__pow5mult+0xb0>)
 8002e38:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8002e3c:	f000 fab2 	bl	80033a4 <__assert_func>
 8002e40:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8002e44:	6004      	str	r4, [r0, #0]
 8002e46:	60c4      	str	r4, [r0, #12]
 8002e48:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8002e4c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8002e50:	b94c      	cbnz	r4, 8002e66 <__pow5mult+0x66>
 8002e52:	f240 2171 	movw	r1, #625	; 0x271
 8002e56:	4630      	mov	r0, r6
 8002e58:	f7ff ff12 	bl	8002c80 <__i2b>
 8002e5c:	2300      	movs	r3, #0
 8002e5e:	f8c8 0008 	str.w	r0, [r8, #8]
 8002e62:	4604      	mov	r4, r0
 8002e64:	6003      	str	r3, [r0, #0]
 8002e66:	f04f 0900 	mov.w	r9, #0
 8002e6a:	07eb      	lsls	r3, r5, #31
 8002e6c:	d50a      	bpl.n	8002e84 <__pow5mult+0x84>
 8002e6e:	4639      	mov	r1, r7
 8002e70:	4622      	mov	r2, r4
 8002e72:	4630      	mov	r0, r6
 8002e74:	f7ff ff1a 	bl	8002cac <__multiply>
 8002e78:	4639      	mov	r1, r7
 8002e7a:	4680      	mov	r8, r0
 8002e7c:	4630      	mov	r0, r6
 8002e7e:	f7ff fe47 	bl	8002b10 <_Bfree>
 8002e82:	4647      	mov	r7, r8
 8002e84:	106d      	asrs	r5, r5, #1
 8002e86:	d00b      	beq.n	8002ea0 <__pow5mult+0xa0>
 8002e88:	6820      	ldr	r0, [r4, #0]
 8002e8a:	b938      	cbnz	r0, 8002e9c <__pow5mult+0x9c>
 8002e8c:	4622      	mov	r2, r4
 8002e8e:	4621      	mov	r1, r4
 8002e90:	4630      	mov	r0, r6
 8002e92:	f7ff ff0b 	bl	8002cac <__multiply>
 8002e96:	6020      	str	r0, [r4, #0]
 8002e98:	f8c0 9000 	str.w	r9, [r0]
 8002e9c:	4604      	mov	r4, r0
 8002e9e:	e7e4      	b.n	8002e6a <__pow5mult+0x6a>
 8002ea0:	4638      	mov	r0, r7
 8002ea2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002ea6:	bf00      	nop
 8002ea8:	08004180 	.word	0x08004180
 8002eac:	08003fad 	.word	0x08003fad
 8002eb0:	08004030 	.word	0x08004030

08002eb4 <__lshift>:
 8002eb4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002eb8:	460c      	mov	r4, r1
 8002eba:	6849      	ldr	r1, [r1, #4]
 8002ebc:	6923      	ldr	r3, [r4, #16]
 8002ebe:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8002ec2:	68a3      	ldr	r3, [r4, #8]
 8002ec4:	4607      	mov	r7, r0
 8002ec6:	4691      	mov	r9, r2
 8002ec8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8002ecc:	f108 0601 	add.w	r6, r8, #1
 8002ed0:	42b3      	cmp	r3, r6
 8002ed2:	db0b      	blt.n	8002eec <__lshift+0x38>
 8002ed4:	4638      	mov	r0, r7
 8002ed6:	f7ff fddb 	bl	8002a90 <_Balloc>
 8002eda:	4605      	mov	r5, r0
 8002edc:	b948      	cbnz	r0, 8002ef2 <__lshift+0x3e>
 8002ede:	4602      	mov	r2, r0
 8002ee0:	4b2a      	ldr	r3, [pc, #168]	; (8002f8c <__lshift+0xd8>)
 8002ee2:	482b      	ldr	r0, [pc, #172]	; (8002f90 <__lshift+0xdc>)
 8002ee4:	f240 11d9 	movw	r1, #473	; 0x1d9
 8002ee8:	f000 fa5c 	bl	80033a4 <__assert_func>
 8002eec:	3101      	adds	r1, #1
 8002eee:	005b      	lsls	r3, r3, #1
 8002ef0:	e7ee      	b.n	8002ed0 <__lshift+0x1c>
 8002ef2:	2300      	movs	r3, #0
 8002ef4:	f100 0114 	add.w	r1, r0, #20
 8002ef8:	f100 0210 	add.w	r2, r0, #16
 8002efc:	4618      	mov	r0, r3
 8002efe:	4553      	cmp	r3, sl
 8002f00:	db37      	blt.n	8002f72 <__lshift+0xbe>
 8002f02:	6920      	ldr	r0, [r4, #16]
 8002f04:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8002f08:	f104 0314 	add.w	r3, r4, #20
 8002f0c:	f019 091f 	ands.w	r9, r9, #31
 8002f10:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8002f14:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8002f18:	d02f      	beq.n	8002f7a <__lshift+0xc6>
 8002f1a:	f1c9 0e20 	rsb	lr, r9, #32
 8002f1e:	468a      	mov	sl, r1
 8002f20:	f04f 0c00 	mov.w	ip, #0
 8002f24:	681a      	ldr	r2, [r3, #0]
 8002f26:	fa02 f209 	lsl.w	r2, r2, r9
 8002f2a:	ea42 020c 	orr.w	r2, r2, ip
 8002f2e:	f84a 2b04 	str.w	r2, [sl], #4
 8002f32:	f853 2b04 	ldr.w	r2, [r3], #4
 8002f36:	4298      	cmp	r0, r3
 8002f38:	fa22 fc0e 	lsr.w	ip, r2, lr
 8002f3c:	d8f2      	bhi.n	8002f24 <__lshift+0x70>
 8002f3e:	1b03      	subs	r3, r0, r4
 8002f40:	3b15      	subs	r3, #21
 8002f42:	f023 0303 	bic.w	r3, r3, #3
 8002f46:	3304      	adds	r3, #4
 8002f48:	f104 0215 	add.w	r2, r4, #21
 8002f4c:	4290      	cmp	r0, r2
 8002f4e:	bf38      	it	cc
 8002f50:	2304      	movcc	r3, #4
 8002f52:	f841 c003 	str.w	ip, [r1, r3]
 8002f56:	f1bc 0f00 	cmp.w	ip, #0
 8002f5a:	d001      	beq.n	8002f60 <__lshift+0xac>
 8002f5c:	f108 0602 	add.w	r6, r8, #2
 8002f60:	3e01      	subs	r6, #1
 8002f62:	4638      	mov	r0, r7
 8002f64:	612e      	str	r6, [r5, #16]
 8002f66:	4621      	mov	r1, r4
 8002f68:	f7ff fdd2 	bl	8002b10 <_Bfree>
 8002f6c:	4628      	mov	r0, r5
 8002f6e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002f72:	f842 0f04 	str.w	r0, [r2, #4]!
 8002f76:	3301      	adds	r3, #1
 8002f78:	e7c1      	b.n	8002efe <__lshift+0x4a>
 8002f7a:	3904      	subs	r1, #4
 8002f7c:	f853 2b04 	ldr.w	r2, [r3], #4
 8002f80:	f841 2f04 	str.w	r2, [r1, #4]!
 8002f84:	4298      	cmp	r0, r3
 8002f86:	d8f9      	bhi.n	8002f7c <__lshift+0xc8>
 8002f88:	e7ea      	b.n	8002f60 <__lshift+0xac>
 8002f8a:	bf00      	nop
 8002f8c:	0800401f 	.word	0x0800401f
 8002f90:	08004030 	.word	0x08004030

08002f94 <__mcmp>:
 8002f94:	b530      	push	{r4, r5, lr}
 8002f96:	6902      	ldr	r2, [r0, #16]
 8002f98:	690c      	ldr	r4, [r1, #16]
 8002f9a:	1b12      	subs	r2, r2, r4
 8002f9c:	d10e      	bne.n	8002fbc <__mcmp+0x28>
 8002f9e:	f100 0314 	add.w	r3, r0, #20
 8002fa2:	3114      	adds	r1, #20
 8002fa4:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8002fa8:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8002fac:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8002fb0:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8002fb4:	42a5      	cmp	r5, r4
 8002fb6:	d003      	beq.n	8002fc0 <__mcmp+0x2c>
 8002fb8:	d305      	bcc.n	8002fc6 <__mcmp+0x32>
 8002fba:	2201      	movs	r2, #1
 8002fbc:	4610      	mov	r0, r2
 8002fbe:	bd30      	pop	{r4, r5, pc}
 8002fc0:	4283      	cmp	r3, r0
 8002fc2:	d3f3      	bcc.n	8002fac <__mcmp+0x18>
 8002fc4:	e7fa      	b.n	8002fbc <__mcmp+0x28>
 8002fc6:	f04f 32ff 	mov.w	r2, #4294967295
 8002fca:	e7f7      	b.n	8002fbc <__mcmp+0x28>

08002fcc <__mdiff>:
 8002fcc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002fd0:	460c      	mov	r4, r1
 8002fd2:	4606      	mov	r6, r0
 8002fd4:	4611      	mov	r1, r2
 8002fd6:	4620      	mov	r0, r4
 8002fd8:	4690      	mov	r8, r2
 8002fda:	f7ff ffdb 	bl	8002f94 <__mcmp>
 8002fde:	1e05      	subs	r5, r0, #0
 8002fe0:	d110      	bne.n	8003004 <__mdiff+0x38>
 8002fe2:	4629      	mov	r1, r5
 8002fe4:	4630      	mov	r0, r6
 8002fe6:	f7ff fd53 	bl	8002a90 <_Balloc>
 8002fea:	b930      	cbnz	r0, 8002ffa <__mdiff+0x2e>
 8002fec:	4b3a      	ldr	r3, [pc, #232]	; (80030d8 <__mdiff+0x10c>)
 8002fee:	4602      	mov	r2, r0
 8002ff0:	f240 2132 	movw	r1, #562	; 0x232
 8002ff4:	4839      	ldr	r0, [pc, #228]	; (80030dc <__mdiff+0x110>)
 8002ff6:	f000 f9d5 	bl	80033a4 <__assert_func>
 8002ffa:	2301      	movs	r3, #1
 8002ffc:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003000:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003004:	bfa4      	itt	ge
 8003006:	4643      	movge	r3, r8
 8003008:	46a0      	movge	r8, r4
 800300a:	4630      	mov	r0, r6
 800300c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8003010:	bfa6      	itte	ge
 8003012:	461c      	movge	r4, r3
 8003014:	2500      	movge	r5, #0
 8003016:	2501      	movlt	r5, #1
 8003018:	f7ff fd3a 	bl	8002a90 <_Balloc>
 800301c:	b920      	cbnz	r0, 8003028 <__mdiff+0x5c>
 800301e:	4b2e      	ldr	r3, [pc, #184]	; (80030d8 <__mdiff+0x10c>)
 8003020:	4602      	mov	r2, r0
 8003022:	f44f 7110 	mov.w	r1, #576	; 0x240
 8003026:	e7e5      	b.n	8002ff4 <__mdiff+0x28>
 8003028:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800302c:	6926      	ldr	r6, [r4, #16]
 800302e:	60c5      	str	r5, [r0, #12]
 8003030:	f104 0914 	add.w	r9, r4, #20
 8003034:	f108 0514 	add.w	r5, r8, #20
 8003038:	f100 0e14 	add.w	lr, r0, #20
 800303c:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8003040:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8003044:	f108 0210 	add.w	r2, r8, #16
 8003048:	46f2      	mov	sl, lr
 800304a:	2100      	movs	r1, #0
 800304c:	f859 3b04 	ldr.w	r3, [r9], #4
 8003050:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8003054:	fa1f f883 	uxth.w	r8, r3
 8003058:	fa11 f18b 	uxtah	r1, r1, fp
 800305c:	0c1b      	lsrs	r3, r3, #16
 800305e:	eba1 0808 	sub.w	r8, r1, r8
 8003062:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8003066:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800306a:	fa1f f888 	uxth.w	r8, r8
 800306e:	1419      	asrs	r1, r3, #16
 8003070:	454e      	cmp	r6, r9
 8003072:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8003076:	f84a 3b04 	str.w	r3, [sl], #4
 800307a:	d8e7      	bhi.n	800304c <__mdiff+0x80>
 800307c:	1b33      	subs	r3, r6, r4
 800307e:	3b15      	subs	r3, #21
 8003080:	f023 0303 	bic.w	r3, r3, #3
 8003084:	3304      	adds	r3, #4
 8003086:	3415      	adds	r4, #21
 8003088:	42a6      	cmp	r6, r4
 800308a:	bf38      	it	cc
 800308c:	2304      	movcc	r3, #4
 800308e:	441d      	add	r5, r3
 8003090:	4473      	add	r3, lr
 8003092:	469e      	mov	lr, r3
 8003094:	462e      	mov	r6, r5
 8003096:	4566      	cmp	r6, ip
 8003098:	d30e      	bcc.n	80030b8 <__mdiff+0xec>
 800309a:	f10c 0203 	add.w	r2, ip, #3
 800309e:	1b52      	subs	r2, r2, r5
 80030a0:	f022 0203 	bic.w	r2, r2, #3
 80030a4:	3d03      	subs	r5, #3
 80030a6:	45ac      	cmp	ip, r5
 80030a8:	bf38      	it	cc
 80030aa:	2200      	movcc	r2, #0
 80030ac:	441a      	add	r2, r3
 80030ae:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 80030b2:	b17b      	cbz	r3, 80030d4 <__mdiff+0x108>
 80030b4:	6107      	str	r7, [r0, #16]
 80030b6:	e7a3      	b.n	8003000 <__mdiff+0x34>
 80030b8:	f856 8b04 	ldr.w	r8, [r6], #4
 80030bc:	fa11 f288 	uxtah	r2, r1, r8
 80030c0:	1414      	asrs	r4, r2, #16
 80030c2:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 80030c6:	b292      	uxth	r2, r2
 80030c8:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80030cc:	f84e 2b04 	str.w	r2, [lr], #4
 80030d0:	1421      	asrs	r1, r4, #16
 80030d2:	e7e0      	b.n	8003096 <__mdiff+0xca>
 80030d4:	3f01      	subs	r7, #1
 80030d6:	e7ea      	b.n	80030ae <__mdiff+0xe2>
 80030d8:	0800401f 	.word	0x0800401f
 80030dc:	08004030 	.word	0x08004030

080030e0 <__d2b>:
 80030e0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80030e4:	4689      	mov	r9, r1
 80030e6:	2101      	movs	r1, #1
 80030e8:	ec57 6b10 	vmov	r6, r7, d0
 80030ec:	4690      	mov	r8, r2
 80030ee:	f7ff fccf 	bl	8002a90 <_Balloc>
 80030f2:	4604      	mov	r4, r0
 80030f4:	b930      	cbnz	r0, 8003104 <__d2b+0x24>
 80030f6:	4602      	mov	r2, r0
 80030f8:	4b25      	ldr	r3, [pc, #148]	; (8003190 <__d2b+0xb0>)
 80030fa:	4826      	ldr	r0, [pc, #152]	; (8003194 <__d2b+0xb4>)
 80030fc:	f240 310a 	movw	r1, #778	; 0x30a
 8003100:	f000 f950 	bl	80033a4 <__assert_func>
 8003104:	f3c7 550a 	ubfx	r5, r7, #20, #11
 8003108:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800310c:	bb35      	cbnz	r5, 800315c <__d2b+0x7c>
 800310e:	2e00      	cmp	r6, #0
 8003110:	9301      	str	r3, [sp, #4]
 8003112:	d028      	beq.n	8003166 <__d2b+0x86>
 8003114:	4668      	mov	r0, sp
 8003116:	9600      	str	r6, [sp, #0]
 8003118:	f7ff fd82 	bl	8002c20 <__lo0bits>
 800311c:	9900      	ldr	r1, [sp, #0]
 800311e:	b300      	cbz	r0, 8003162 <__d2b+0x82>
 8003120:	9a01      	ldr	r2, [sp, #4]
 8003122:	f1c0 0320 	rsb	r3, r0, #32
 8003126:	fa02 f303 	lsl.w	r3, r2, r3
 800312a:	430b      	orrs	r3, r1
 800312c:	40c2      	lsrs	r2, r0
 800312e:	6163      	str	r3, [r4, #20]
 8003130:	9201      	str	r2, [sp, #4]
 8003132:	9b01      	ldr	r3, [sp, #4]
 8003134:	61a3      	str	r3, [r4, #24]
 8003136:	2b00      	cmp	r3, #0
 8003138:	bf14      	ite	ne
 800313a:	2202      	movne	r2, #2
 800313c:	2201      	moveq	r2, #1
 800313e:	6122      	str	r2, [r4, #16]
 8003140:	b1d5      	cbz	r5, 8003178 <__d2b+0x98>
 8003142:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8003146:	4405      	add	r5, r0
 8003148:	f8c9 5000 	str.w	r5, [r9]
 800314c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8003150:	f8c8 0000 	str.w	r0, [r8]
 8003154:	4620      	mov	r0, r4
 8003156:	b003      	add	sp, #12
 8003158:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800315c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003160:	e7d5      	b.n	800310e <__d2b+0x2e>
 8003162:	6161      	str	r1, [r4, #20]
 8003164:	e7e5      	b.n	8003132 <__d2b+0x52>
 8003166:	a801      	add	r0, sp, #4
 8003168:	f7ff fd5a 	bl	8002c20 <__lo0bits>
 800316c:	9b01      	ldr	r3, [sp, #4]
 800316e:	6163      	str	r3, [r4, #20]
 8003170:	2201      	movs	r2, #1
 8003172:	6122      	str	r2, [r4, #16]
 8003174:	3020      	adds	r0, #32
 8003176:	e7e3      	b.n	8003140 <__d2b+0x60>
 8003178:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800317c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8003180:	f8c9 0000 	str.w	r0, [r9]
 8003184:	6918      	ldr	r0, [r3, #16]
 8003186:	f7ff fd2b 	bl	8002be0 <__hi0bits>
 800318a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800318e:	e7df      	b.n	8003150 <__d2b+0x70>
 8003190:	0800401f 	.word	0x0800401f
 8003194:	08004030 	.word	0x08004030

08003198 <_calloc_r>:
 8003198:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800319a:	fba1 2402 	umull	r2, r4, r1, r2
 800319e:	b94c      	cbnz	r4, 80031b4 <_calloc_r+0x1c>
 80031a0:	4611      	mov	r1, r2
 80031a2:	9201      	str	r2, [sp, #4]
 80031a4:	f000 f87a 	bl	800329c <_malloc_r>
 80031a8:	9a01      	ldr	r2, [sp, #4]
 80031aa:	4605      	mov	r5, r0
 80031ac:	b930      	cbnz	r0, 80031bc <_calloc_r+0x24>
 80031ae:	4628      	mov	r0, r5
 80031b0:	b003      	add	sp, #12
 80031b2:	bd30      	pop	{r4, r5, pc}
 80031b4:	220c      	movs	r2, #12
 80031b6:	6002      	str	r2, [r0, #0]
 80031b8:	2500      	movs	r5, #0
 80031ba:	e7f8      	b.n	80031ae <_calloc_r+0x16>
 80031bc:	4621      	mov	r1, r4
 80031be:	f7fe f95f 	bl	8001480 <memset>
 80031c2:	e7f4      	b.n	80031ae <_calloc_r+0x16>

080031c4 <_free_r>:
 80031c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80031c6:	2900      	cmp	r1, #0
 80031c8:	d044      	beq.n	8003254 <_free_r+0x90>
 80031ca:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80031ce:	9001      	str	r0, [sp, #4]
 80031d0:	2b00      	cmp	r3, #0
 80031d2:	f1a1 0404 	sub.w	r4, r1, #4
 80031d6:	bfb8      	it	lt
 80031d8:	18e4      	addlt	r4, r4, r3
 80031da:	f000 f925 	bl	8003428 <__malloc_lock>
 80031de:	4a1e      	ldr	r2, [pc, #120]	; (8003258 <_free_r+0x94>)
 80031e0:	9801      	ldr	r0, [sp, #4]
 80031e2:	6813      	ldr	r3, [r2, #0]
 80031e4:	b933      	cbnz	r3, 80031f4 <_free_r+0x30>
 80031e6:	6063      	str	r3, [r4, #4]
 80031e8:	6014      	str	r4, [r2, #0]
 80031ea:	b003      	add	sp, #12
 80031ec:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80031f0:	f000 b920 	b.w	8003434 <__malloc_unlock>
 80031f4:	42a3      	cmp	r3, r4
 80031f6:	d908      	bls.n	800320a <_free_r+0x46>
 80031f8:	6825      	ldr	r5, [r4, #0]
 80031fa:	1961      	adds	r1, r4, r5
 80031fc:	428b      	cmp	r3, r1
 80031fe:	bf01      	itttt	eq
 8003200:	6819      	ldreq	r1, [r3, #0]
 8003202:	685b      	ldreq	r3, [r3, #4]
 8003204:	1949      	addeq	r1, r1, r5
 8003206:	6021      	streq	r1, [r4, #0]
 8003208:	e7ed      	b.n	80031e6 <_free_r+0x22>
 800320a:	461a      	mov	r2, r3
 800320c:	685b      	ldr	r3, [r3, #4]
 800320e:	b10b      	cbz	r3, 8003214 <_free_r+0x50>
 8003210:	42a3      	cmp	r3, r4
 8003212:	d9fa      	bls.n	800320a <_free_r+0x46>
 8003214:	6811      	ldr	r1, [r2, #0]
 8003216:	1855      	adds	r5, r2, r1
 8003218:	42a5      	cmp	r5, r4
 800321a:	d10b      	bne.n	8003234 <_free_r+0x70>
 800321c:	6824      	ldr	r4, [r4, #0]
 800321e:	4421      	add	r1, r4
 8003220:	1854      	adds	r4, r2, r1
 8003222:	42a3      	cmp	r3, r4
 8003224:	6011      	str	r1, [r2, #0]
 8003226:	d1e0      	bne.n	80031ea <_free_r+0x26>
 8003228:	681c      	ldr	r4, [r3, #0]
 800322a:	685b      	ldr	r3, [r3, #4]
 800322c:	6053      	str	r3, [r2, #4]
 800322e:	4421      	add	r1, r4
 8003230:	6011      	str	r1, [r2, #0]
 8003232:	e7da      	b.n	80031ea <_free_r+0x26>
 8003234:	d902      	bls.n	800323c <_free_r+0x78>
 8003236:	230c      	movs	r3, #12
 8003238:	6003      	str	r3, [r0, #0]
 800323a:	e7d6      	b.n	80031ea <_free_r+0x26>
 800323c:	6825      	ldr	r5, [r4, #0]
 800323e:	1961      	adds	r1, r4, r5
 8003240:	428b      	cmp	r3, r1
 8003242:	bf04      	itt	eq
 8003244:	6819      	ldreq	r1, [r3, #0]
 8003246:	685b      	ldreq	r3, [r3, #4]
 8003248:	6063      	str	r3, [r4, #4]
 800324a:	bf04      	itt	eq
 800324c:	1949      	addeq	r1, r1, r5
 800324e:	6021      	streq	r1, [r4, #0]
 8003250:	6054      	str	r4, [r2, #4]
 8003252:	e7ca      	b.n	80031ea <_free_r+0x26>
 8003254:	b003      	add	sp, #12
 8003256:	bd30      	pop	{r4, r5, pc}
 8003258:	200001f8 	.word	0x200001f8

0800325c <sbrk_aligned>:
 800325c:	b570      	push	{r4, r5, r6, lr}
 800325e:	4e0e      	ldr	r6, [pc, #56]	; (8003298 <sbrk_aligned+0x3c>)
 8003260:	460c      	mov	r4, r1
 8003262:	6831      	ldr	r1, [r6, #0]
 8003264:	4605      	mov	r5, r0
 8003266:	b911      	cbnz	r1, 800326e <sbrk_aligned+0x12>
 8003268:	f000 f88c 	bl	8003384 <_sbrk_r>
 800326c:	6030      	str	r0, [r6, #0]
 800326e:	4621      	mov	r1, r4
 8003270:	4628      	mov	r0, r5
 8003272:	f000 f887 	bl	8003384 <_sbrk_r>
 8003276:	1c43      	adds	r3, r0, #1
 8003278:	d00a      	beq.n	8003290 <sbrk_aligned+0x34>
 800327a:	1cc4      	adds	r4, r0, #3
 800327c:	f024 0403 	bic.w	r4, r4, #3
 8003280:	42a0      	cmp	r0, r4
 8003282:	d007      	beq.n	8003294 <sbrk_aligned+0x38>
 8003284:	1a21      	subs	r1, r4, r0
 8003286:	4628      	mov	r0, r5
 8003288:	f000 f87c 	bl	8003384 <_sbrk_r>
 800328c:	3001      	adds	r0, #1
 800328e:	d101      	bne.n	8003294 <sbrk_aligned+0x38>
 8003290:	f04f 34ff 	mov.w	r4, #4294967295
 8003294:	4620      	mov	r0, r4
 8003296:	bd70      	pop	{r4, r5, r6, pc}
 8003298:	200001fc 	.word	0x200001fc

0800329c <_malloc_r>:
 800329c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80032a0:	1ccd      	adds	r5, r1, #3
 80032a2:	f025 0503 	bic.w	r5, r5, #3
 80032a6:	3508      	adds	r5, #8
 80032a8:	2d0c      	cmp	r5, #12
 80032aa:	bf38      	it	cc
 80032ac:	250c      	movcc	r5, #12
 80032ae:	2d00      	cmp	r5, #0
 80032b0:	4607      	mov	r7, r0
 80032b2:	db01      	blt.n	80032b8 <_malloc_r+0x1c>
 80032b4:	42a9      	cmp	r1, r5
 80032b6:	d905      	bls.n	80032c4 <_malloc_r+0x28>
 80032b8:	230c      	movs	r3, #12
 80032ba:	603b      	str	r3, [r7, #0]
 80032bc:	2600      	movs	r6, #0
 80032be:	4630      	mov	r0, r6
 80032c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80032c4:	4e2e      	ldr	r6, [pc, #184]	; (8003380 <_malloc_r+0xe4>)
 80032c6:	f000 f8af 	bl	8003428 <__malloc_lock>
 80032ca:	6833      	ldr	r3, [r6, #0]
 80032cc:	461c      	mov	r4, r3
 80032ce:	bb34      	cbnz	r4, 800331e <_malloc_r+0x82>
 80032d0:	4629      	mov	r1, r5
 80032d2:	4638      	mov	r0, r7
 80032d4:	f7ff ffc2 	bl	800325c <sbrk_aligned>
 80032d8:	1c43      	adds	r3, r0, #1
 80032da:	4604      	mov	r4, r0
 80032dc:	d14d      	bne.n	800337a <_malloc_r+0xde>
 80032de:	6834      	ldr	r4, [r6, #0]
 80032e0:	4626      	mov	r6, r4
 80032e2:	2e00      	cmp	r6, #0
 80032e4:	d140      	bne.n	8003368 <_malloc_r+0xcc>
 80032e6:	6823      	ldr	r3, [r4, #0]
 80032e8:	4631      	mov	r1, r6
 80032ea:	4638      	mov	r0, r7
 80032ec:	eb04 0803 	add.w	r8, r4, r3
 80032f0:	f000 f848 	bl	8003384 <_sbrk_r>
 80032f4:	4580      	cmp	r8, r0
 80032f6:	d13a      	bne.n	800336e <_malloc_r+0xd2>
 80032f8:	6821      	ldr	r1, [r4, #0]
 80032fa:	3503      	adds	r5, #3
 80032fc:	1a6d      	subs	r5, r5, r1
 80032fe:	f025 0503 	bic.w	r5, r5, #3
 8003302:	3508      	adds	r5, #8
 8003304:	2d0c      	cmp	r5, #12
 8003306:	bf38      	it	cc
 8003308:	250c      	movcc	r5, #12
 800330a:	4629      	mov	r1, r5
 800330c:	4638      	mov	r0, r7
 800330e:	f7ff ffa5 	bl	800325c <sbrk_aligned>
 8003312:	3001      	adds	r0, #1
 8003314:	d02b      	beq.n	800336e <_malloc_r+0xd2>
 8003316:	6823      	ldr	r3, [r4, #0]
 8003318:	442b      	add	r3, r5
 800331a:	6023      	str	r3, [r4, #0]
 800331c:	e00e      	b.n	800333c <_malloc_r+0xa0>
 800331e:	6822      	ldr	r2, [r4, #0]
 8003320:	1b52      	subs	r2, r2, r5
 8003322:	d41e      	bmi.n	8003362 <_malloc_r+0xc6>
 8003324:	2a0b      	cmp	r2, #11
 8003326:	d916      	bls.n	8003356 <_malloc_r+0xba>
 8003328:	1961      	adds	r1, r4, r5
 800332a:	42a3      	cmp	r3, r4
 800332c:	6025      	str	r5, [r4, #0]
 800332e:	bf18      	it	ne
 8003330:	6059      	strne	r1, [r3, #4]
 8003332:	6863      	ldr	r3, [r4, #4]
 8003334:	bf08      	it	eq
 8003336:	6031      	streq	r1, [r6, #0]
 8003338:	5162      	str	r2, [r4, r5]
 800333a:	604b      	str	r3, [r1, #4]
 800333c:	4638      	mov	r0, r7
 800333e:	f104 060b 	add.w	r6, r4, #11
 8003342:	f000 f877 	bl	8003434 <__malloc_unlock>
 8003346:	f026 0607 	bic.w	r6, r6, #7
 800334a:	1d23      	adds	r3, r4, #4
 800334c:	1af2      	subs	r2, r6, r3
 800334e:	d0b6      	beq.n	80032be <_malloc_r+0x22>
 8003350:	1b9b      	subs	r3, r3, r6
 8003352:	50a3      	str	r3, [r4, r2]
 8003354:	e7b3      	b.n	80032be <_malloc_r+0x22>
 8003356:	6862      	ldr	r2, [r4, #4]
 8003358:	42a3      	cmp	r3, r4
 800335a:	bf0c      	ite	eq
 800335c:	6032      	streq	r2, [r6, #0]
 800335e:	605a      	strne	r2, [r3, #4]
 8003360:	e7ec      	b.n	800333c <_malloc_r+0xa0>
 8003362:	4623      	mov	r3, r4
 8003364:	6864      	ldr	r4, [r4, #4]
 8003366:	e7b2      	b.n	80032ce <_malloc_r+0x32>
 8003368:	4634      	mov	r4, r6
 800336a:	6876      	ldr	r6, [r6, #4]
 800336c:	e7b9      	b.n	80032e2 <_malloc_r+0x46>
 800336e:	230c      	movs	r3, #12
 8003370:	603b      	str	r3, [r7, #0]
 8003372:	4638      	mov	r0, r7
 8003374:	f000 f85e 	bl	8003434 <__malloc_unlock>
 8003378:	e7a1      	b.n	80032be <_malloc_r+0x22>
 800337a:	6025      	str	r5, [r4, #0]
 800337c:	e7de      	b.n	800333c <_malloc_r+0xa0>
 800337e:	bf00      	nop
 8003380:	200001f8 	.word	0x200001f8

08003384 <_sbrk_r>:
 8003384:	b538      	push	{r3, r4, r5, lr}
 8003386:	4d06      	ldr	r5, [pc, #24]	; (80033a0 <_sbrk_r+0x1c>)
 8003388:	2300      	movs	r3, #0
 800338a:	4604      	mov	r4, r0
 800338c:	4608      	mov	r0, r1
 800338e:	602b      	str	r3, [r5, #0]
 8003390:	f000 fdce 	bl	8003f30 <_sbrk>
 8003394:	1c43      	adds	r3, r0, #1
 8003396:	d102      	bne.n	800339e <_sbrk_r+0x1a>
 8003398:	682b      	ldr	r3, [r5, #0]
 800339a:	b103      	cbz	r3, 800339e <_sbrk_r+0x1a>
 800339c:	6023      	str	r3, [r4, #0]
 800339e:	bd38      	pop	{r3, r4, r5, pc}
 80033a0:	20000200 	.word	0x20000200

080033a4 <__assert_func>:
 80033a4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80033a6:	4614      	mov	r4, r2
 80033a8:	461a      	mov	r2, r3
 80033aa:	4b09      	ldr	r3, [pc, #36]	; (80033d0 <__assert_func+0x2c>)
 80033ac:	681b      	ldr	r3, [r3, #0]
 80033ae:	4605      	mov	r5, r0
 80033b0:	68d8      	ldr	r0, [r3, #12]
 80033b2:	b14c      	cbz	r4, 80033c8 <__assert_func+0x24>
 80033b4:	4b07      	ldr	r3, [pc, #28]	; (80033d4 <__assert_func+0x30>)
 80033b6:	9100      	str	r1, [sp, #0]
 80033b8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80033bc:	4906      	ldr	r1, [pc, #24]	; (80033d8 <__assert_func+0x34>)
 80033be:	462b      	mov	r3, r5
 80033c0:	f000 f80e 	bl	80033e0 <fiprintf>
 80033c4:	f000 fa64 	bl	8003890 <abort>
 80033c8:	4b04      	ldr	r3, [pc, #16]	; (80033dc <__assert_func+0x38>)
 80033ca:	461c      	mov	r4, r3
 80033cc:	e7f3      	b.n	80033b6 <__assert_func+0x12>
 80033ce:	bf00      	nop
 80033d0:	20000004 	.word	0x20000004
 80033d4:	0800418c 	.word	0x0800418c
 80033d8:	08004199 	.word	0x08004199
 80033dc:	080041c7 	.word	0x080041c7

080033e0 <fiprintf>:
 80033e0:	b40e      	push	{r1, r2, r3}
 80033e2:	b503      	push	{r0, r1, lr}
 80033e4:	4601      	mov	r1, r0
 80033e6:	ab03      	add	r3, sp, #12
 80033e8:	4805      	ldr	r0, [pc, #20]	; (8003400 <fiprintf+0x20>)
 80033ea:	f853 2b04 	ldr.w	r2, [r3], #4
 80033ee:	6800      	ldr	r0, [r0, #0]
 80033f0:	9301      	str	r3, [sp, #4]
 80033f2:	f000 f84f 	bl	8003494 <_vfiprintf_r>
 80033f6:	b002      	add	sp, #8
 80033f8:	f85d eb04 	ldr.w	lr, [sp], #4
 80033fc:	b003      	add	sp, #12
 80033fe:	4770      	bx	lr
 8003400:	20000004 	.word	0x20000004

08003404 <__ascii_mbtowc>:
 8003404:	b082      	sub	sp, #8
 8003406:	b901      	cbnz	r1, 800340a <__ascii_mbtowc+0x6>
 8003408:	a901      	add	r1, sp, #4
 800340a:	b142      	cbz	r2, 800341e <__ascii_mbtowc+0x1a>
 800340c:	b14b      	cbz	r3, 8003422 <__ascii_mbtowc+0x1e>
 800340e:	7813      	ldrb	r3, [r2, #0]
 8003410:	600b      	str	r3, [r1, #0]
 8003412:	7812      	ldrb	r2, [r2, #0]
 8003414:	1e10      	subs	r0, r2, #0
 8003416:	bf18      	it	ne
 8003418:	2001      	movne	r0, #1
 800341a:	b002      	add	sp, #8
 800341c:	4770      	bx	lr
 800341e:	4610      	mov	r0, r2
 8003420:	e7fb      	b.n	800341a <__ascii_mbtowc+0x16>
 8003422:	f06f 0001 	mvn.w	r0, #1
 8003426:	e7f8      	b.n	800341a <__ascii_mbtowc+0x16>

08003428 <__malloc_lock>:
 8003428:	4801      	ldr	r0, [pc, #4]	; (8003430 <__malloc_lock+0x8>)
 800342a:	f000 bbf1 	b.w	8003c10 <__retarget_lock_acquire_recursive>
 800342e:	bf00      	nop
 8003430:	20000204 	.word	0x20000204

08003434 <__malloc_unlock>:
 8003434:	4801      	ldr	r0, [pc, #4]	; (800343c <__malloc_unlock+0x8>)
 8003436:	f000 bbec 	b.w	8003c12 <__retarget_lock_release_recursive>
 800343a:	bf00      	nop
 800343c:	20000204 	.word	0x20000204

08003440 <__sfputc_r>:
 8003440:	6893      	ldr	r3, [r2, #8]
 8003442:	3b01      	subs	r3, #1
 8003444:	2b00      	cmp	r3, #0
 8003446:	b410      	push	{r4}
 8003448:	6093      	str	r3, [r2, #8]
 800344a:	da08      	bge.n	800345e <__sfputc_r+0x1e>
 800344c:	6994      	ldr	r4, [r2, #24]
 800344e:	42a3      	cmp	r3, r4
 8003450:	db01      	blt.n	8003456 <__sfputc_r+0x16>
 8003452:	290a      	cmp	r1, #10
 8003454:	d103      	bne.n	800345e <__sfputc_r+0x1e>
 8003456:	f85d 4b04 	ldr.w	r4, [sp], #4
 800345a:	f000 b94b 	b.w	80036f4 <__swbuf_r>
 800345e:	6813      	ldr	r3, [r2, #0]
 8003460:	1c58      	adds	r0, r3, #1
 8003462:	6010      	str	r0, [r2, #0]
 8003464:	7019      	strb	r1, [r3, #0]
 8003466:	4608      	mov	r0, r1
 8003468:	f85d 4b04 	ldr.w	r4, [sp], #4
 800346c:	4770      	bx	lr

0800346e <__sfputs_r>:
 800346e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003470:	4606      	mov	r6, r0
 8003472:	460f      	mov	r7, r1
 8003474:	4614      	mov	r4, r2
 8003476:	18d5      	adds	r5, r2, r3
 8003478:	42ac      	cmp	r4, r5
 800347a:	d101      	bne.n	8003480 <__sfputs_r+0x12>
 800347c:	2000      	movs	r0, #0
 800347e:	e007      	b.n	8003490 <__sfputs_r+0x22>
 8003480:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003484:	463a      	mov	r2, r7
 8003486:	4630      	mov	r0, r6
 8003488:	f7ff ffda 	bl	8003440 <__sfputc_r>
 800348c:	1c43      	adds	r3, r0, #1
 800348e:	d1f3      	bne.n	8003478 <__sfputs_r+0xa>
 8003490:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003494 <_vfiprintf_r>:
 8003494:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003498:	460d      	mov	r5, r1
 800349a:	b09d      	sub	sp, #116	; 0x74
 800349c:	4614      	mov	r4, r2
 800349e:	4698      	mov	r8, r3
 80034a0:	4606      	mov	r6, r0
 80034a2:	b118      	cbz	r0, 80034ac <_vfiprintf_r+0x18>
 80034a4:	6983      	ldr	r3, [r0, #24]
 80034a6:	b90b      	cbnz	r3, 80034ac <_vfiprintf_r+0x18>
 80034a8:	f000 fb14 	bl	8003ad4 <__sinit>
 80034ac:	4b89      	ldr	r3, [pc, #548]	; (80036d4 <_vfiprintf_r+0x240>)
 80034ae:	429d      	cmp	r5, r3
 80034b0:	d11b      	bne.n	80034ea <_vfiprintf_r+0x56>
 80034b2:	6875      	ldr	r5, [r6, #4]
 80034b4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80034b6:	07d9      	lsls	r1, r3, #31
 80034b8:	d405      	bmi.n	80034c6 <_vfiprintf_r+0x32>
 80034ba:	89ab      	ldrh	r3, [r5, #12]
 80034bc:	059a      	lsls	r2, r3, #22
 80034be:	d402      	bmi.n	80034c6 <_vfiprintf_r+0x32>
 80034c0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80034c2:	f000 fba5 	bl	8003c10 <__retarget_lock_acquire_recursive>
 80034c6:	89ab      	ldrh	r3, [r5, #12]
 80034c8:	071b      	lsls	r3, r3, #28
 80034ca:	d501      	bpl.n	80034d0 <_vfiprintf_r+0x3c>
 80034cc:	692b      	ldr	r3, [r5, #16]
 80034ce:	b9eb      	cbnz	r3, 800350c <_vfiprintf_r+0x78>
 80034d0:	4629      	mov	r1, r5
 80034d2:	4630      	mov	r0, r6
 80034d4:	f000 f96e 	bl	80037b4 <__swsetup_r>
 80034d8:	b1c0      	cbz	r0, 800350c <_vfiprintf_r+0x78>
 80034da:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80034dc:	07dc      	lsls	r4, r3, #31
 80034de:	d50e      	bpl.n	80034fe <_vfiprintf_r+0x6a>
 80034e0:	f04f 30ff 	mov.w	r0, #4294967295
 80034e4:	b01d      	add	sp, #116	; 0x74
 80034e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80034ea:	4b7b      	ldr	r3, [pc, #492]	; (80036d8 <_vfiprintf_r+0x244>)
 80034ec:	429d      	cmp	r5, r3
 80034ee:	d101      	bne.n	80034f4 <_vfiprintf_r+0x60>
 80034f0:	68b5      	ldr	r5, [r6, #8]
 80034f2:	e7df      	b.n	80034b4 <_vfiprintf_r+0x20>
 80034f4:	4b79      	ldr	r3, [pc, #484]	; (80036dc <_vfiprintf_r+0x248>)
 80034f6:	429d      	cmp	r5, r3
 80034f8:	bf08      	it	eq
 80034fa:	68f5      	ldreq	r5, [r6, #12]
 80034fc:	e7da      	b.n	80034b4 <_vfiprintf_r+0x20>
 80034fe:	89ab      	ldrh	r3, [r5, #12]
 8003500:	0598      	lsls	r0, r3, #22
 8003502:	d4ed      	bmi.n	80034e0 <_vfiprintf_r+0x4c>
 8003504:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003506:	f000 fb84 	bl	8003c12 <__retarget_lock_release_recursive>
 800350a:	e7e9      	b.n	80034e0 <_vfiprintf_r+0x4c>
 800350c:	2300      	movs	r3, #0
 800350e:	9309      	str	r3, [sp, #36]	; 0x24
 8003510:	2320      	movs	r3, #32
 8003512:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003516:	f8cd 800c 	str.w	r8, [sp, #12]
 800351a:	2330      	movs	r3, #48	; 0x30
 800351c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80036e0 <_vfiprintf_r+0x24c>
 8003520:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003524:	f04f 0901 	mov.w	r9, #1
 8003528:	4623      	mov	r3, r4
 800352a:	469a      	mov	sl, r3
 800352c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003530:	b10a      	cbz	r2, 8003536 <_vfiprintf_r+0xa2>
 8003532:	2a25      	cmp	r2, #37	; 0x25
 8003534:	d1f9      	bne.n	800352a <_vfiprintf_r+0x96>
 8003536:	ebba 0b04 	subs.w	fp, sl, r4
 800353a:	d00b      	beq.n	8003554 <_vfiprintf_r+0xc0>
 800353c:	465b      	mov	r3, fp
 800353e:	4622      	mov	r2, r4
 8003540:	4629      	mov	r1, r5
 8003542:	4630      	mov	r0, r6
 8003544:	f7ff ff93 	bl	800346e <__sfputs_r>
 8003548:	3001      	adds	r0, #1
 800354a:	f000 80aa 	beq.w	80036a2 <_vfiprintf_r+0x20e>
 800354e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003550:	445a      	add	r2, fp
 8003552:	9209      	str	r2, [sp, #36]	; 0x24
 8003554:	f89a 3000 	ldrb.w	r3, [sl]
 8003558:	2b00      	cmp	r3, #0
 800355a:	f000 80a2 	beq.w	80036a2 <_vfiprintf_r+0x20e>
 800355e:	2300      	movs	r3, #0
 8003560:	f04f 32ff 	mov.w	r2, #4294967295
 8003564:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003568:	f10a 0a01 	add.w	sl, sl, #1
 800356c:	9304      	str	r3, [sp, #16]
 800356e:	9307      	str	r3, [sp, #28]
 8003570:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003574:	931a      	str	r3, [sp, #104]	; 0x68
 8003576:	4654      	mov	r4, sl
 8003578:	2205      	movs	r2, #5
 800357a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800357e:	4858      	ldr	r0, [pc, #352]	; (80036e0 <_vfiprintf_r+0x24c>)
 8003580:	f7fc fe2e 	bl	80001e0 <memchr>
 8003584:	9a04      	ldr	r2, [sp, #16]
 8003586:	b9d8      	cbnz	r0, 80035c0 <_vfiprintf_r+0x12c>
 8003588:	06d1      	lsls	r1, r2, #27
 800358a:	bf44      	itt	mi
 800358c:	2320      	movmi	r3, #32
 800358e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003592:	0713      	lsls	r3, r2, #28
 8003594:	bf44      	itt	mi
 8003596:	232b      	movmi	r3, #43	; 0x2b
 8003598:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800359c:	f89a 3000 	ldrb.w	r3, [sl]
 80035a0:	2b2a      	cmp	r3, #42	; 0x2a
 80035a2:	d015      	beq.n	80035d0 <_vfiprintf_r+0x13c>
 80035a4:	9a07      	ldr	r2, [sp, #28]
 80035a6:	4654      	mov	r4, sl
 80035a8:	2000      	movs	r0, #0
 80035aa:	f04f 0c0a 	mov.w	ip, #10
 80035ae:	4621      	mov	r1, r4
 80035b0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80035b4:	3b30      	subs	r3, #48	; 0x30
 80035b6:	2b09      	cmp	r3, #9
 80035b8:	d94e      	bls.n	8003658 <_vfiprintf_r+0x1c4>
 80035ba:	b1b0      	cbz	r0, 80035ea <_vfiprintf_r+0x156>
 80035bc:	9207      	str	r2, [sp, #28]
 80035be:	e014      	b.n	80035ea <_vfiprintf_r+0x156>
 80035c0:	eba0 0308 	sub.w	r3, r0, r8
 80035c4:	fa09 f303 	lsl.w	r3, r9, r3
 80035c8:	4313      	orrs	r3, r2
 80035ca:	9304      	str	r3, [sp, #16]
 80035cc:	46a2      	mov	sl, r4
 80035ce:	e7d2      	b.n	8003576 <_vfiprintf_r+0xe2>
 80035d0:	9b03      	ldr	r3, [sp, #12]
 80035d2:	1d19      	adds	r1, r3, #4
 80035d4:	681b      	ldr	r3, [r3, #0]
 80035d6:	9103      	str	r1, [sp, #12]
 80035d8:	2b00      	cmp	r3, #0
 80035da:	bfbb      	ittet	lt
 80035dc:	425b      	neglt	r3, r3
 80035de:	f042 0202 	orrlt.w	r2, r2, #2
 80035e2:	9307      	strge	r3, [sp, #28]
 80035e4:	9307      	strlt	r3, [sp, #28]
 80035e6:	bfb8      	it	lt
 80035e8:	9204      	strlt	r2, [sp, #16]
 80035ea:	7823      	ldrb	r3, [r4, #0]
 80035ec:	2b2e      	cmp	r3, #46	; 0x2e
 80035ee:	d10c      	bne.n	800360a <_vfiprintf_r+0x176>
 80035f0:	7863      	ldrb	r3, [r4, #1]
 80035f2:	2b2a      	cmp	r3, #42	; 0x2a
 80035f4:	d135      	bne.n	8003662 <_vfiprintf_r+0x1ce>
 80035f6:	9b03      	ldr	r3, [sp, #12]
 80035f8:	1d1a      	adds	r2, r3, #4
 80035fa:	681b      	ldr	r3, [r3, #0]
 80035fc:	9203      	str	r2, [sp, #12]
 80035fe:	2b00      	cmp	r3, #0
 8003600:	bfb8      	it	lt
 8003602:	f04f 33ff 	movlt.w	r3, #4294967295
 8003606:	3402      	adds	r4, #2
 8003608:	9305      	str	r3, [sp, #20]
 800360a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80036f0 <_vfiprintf_r+0x25c>
 800360e:	7821      	ldrb	r1, [r4, #0]
 8003610:	2203      	movs	r2, #3
 8003612:	4650      	mov	r0, sl
 8003614:	f7fc fde4 	bl	80001e0 <memchr>
 8003618:	b140      	cbz	r0, 800362c <_vfiprintf_r+0x198>
 800361a:	2340      	movs	r3, #64	; 0x40
 800361c:	eba0 000a 	sub.w	r0, r0, sl
 8003620:	fa03 f000 	lsl.w	r0, r3, r0
 8003624:	9b04      	ldr	r3, [sp, #16]
 8003626:	4303      	orrs	r3, r0
 8003628:	3401      	adds	r4, #1
 800362a:	9304      	str	r3, [sp, #16]
 800362c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003630:	482c      	ldr	r0, [pc, #176]	; (80036e4 <_vfiprintf_r+0x250>)
 8003632:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003636:	2206      	movs	r2, #6
 8003638:	f7fc fdd2 	bl	80001e0 <memchr>
 800363c:	2800      	cmp	r0, #0
 800363e:	d03f      	beq.n	80036c0 <_vfiprintf_r+0x22c>
 8003640:	4b29      	ldr	r3, [pc, #164]	; (80036e8 <_vfiprintf_r+0x254>)
 8003642:	bb1b      	cbnz	r3, 800368c <_vfiprintf_r+0x1f8>
 8003644:	9b03      	ldr	r3, [sp, #12]
 8003646:	3307      	adds	r3, #7
 8003648:	f023 0307 	bic.w	r3, r3, #7
 800364c:	3308      	adds	r3, #8
 800364e:	9303      	str	r3, [sp, #12]
 8003650:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003652:	443b      	add	r3, r7
 8003654:	9309      	str	r3, [sp, #36]	; 0x24
 8003656:	e767      	b.n	8003528 <_vfiprintf_r+0x94>
 8003658:	fb0c 3202 	mla	r2, ip, r2, r3
 800365c:	460c      	mov	r4, r1
 800365e:	2001      	movs	r0, #1
 8003660:	e7a5      	b.n	80035ae <_vfiprintf_r+0x11a>
 8003662:	2300      	movs	r3, #0
 8003664:	3401      	adds	r4, #1
 8003666:	9305      	str	r3, [sp, #20]
 8003668:	4619      	mov	r1, r3
 800366a:	f04f 0c0a 	mov.w	ip, #10
 800366e:	4620      	mov	r0, r4
 8003670:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003674:	3a30      	subs	r2, #48	; 0x30
 8003676:	2a09      	cmp	r2, #9
 8003678:	d903      	bls.n	8003682 <_vfiprintf_r+0x1ee>
 800367a:	2b00      	cmp	r3, #0
 800367c:	d0c5      	beq.n	800360a <_vfiprintf_r+0x176>
 800367e:	9105      	str	r1, [sp, #20]
 8003680:	e7c3      	b.n	800360a <_vfiprintf_r+0x176>
 8003682:	fb0c 2101 	mla	r1, ip, r1, r2
 8003686:	4604      	mov	r4, r0
 8003688:	2301      	movs	r3, #1
 800368a:	e7f0      	b.n	800366e <_vfiprintf_r+0x1da>
 800368c:	ab03      	add	r3, sp, #12
 800368e:	9300      	str	r3, [sp, #0]
 8003690:	462a      	mov	r2, r5
 8003692:	4b16      	ldr	r3, [pc, #88]	; (80036ec <_vfiprintf_r+0x258>)
 8003694:	a904      	add	r1, sp, #16
 8003696:	4630      	mov	r0, r6
 8003698:	f7fd ff9a 	bl	80015d0 <_printf_float>
 800369c:	4607      	mov	r7, r0
 800369e:	1c78      	adds	r0, r7, #1
 80036a0:	d1d6      	bne.n	8003650 <_vfiprintf_r+0x1bc>
 80036a2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80036a4:	07d9      	lsls	r1, r3, #31
 80036a6:	d405      	bmi.n	80036b4 <_vfiprintf_r+0x220>
 80036a8:	89ab      	ldrh	r3, [r5, #12]
 80036aa:	059a      	lsls	r2, r3, #22
 80036ac:	d402      	bmi.n	80036b4 <_vfiprintf_r+0x220>
 80036ae:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80036b0:	f000 faaf 	bl	8003c12 <__retarget_lock_release_recursive>
 80036b4:	89ab      	ldrh	r3, [r5, #12]
 80036b6:	065b      	lsls	r3, r3, #25
 80036b8:	f53f af12 	bmi.w	80034e0 <_vfiprintf_r+0x4c>
 80036bc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80036be:	e711      	b.n	80034e4 <_vfiprintf_r+0x50>
 80036c0:	ab03      	add	r3, sp, #12
 80036c2:	9300      	str	r3, [sp, #0]
 80036c4:	462a      	mov	r2, r5
 80036c6:	4b09      	ldr	r3, [pc, #36]	; (80036ec <_vfiprintf_r+0x258>)
 80036c8:	a904      	add	r1, sp, #16
 80036ca:	4630      	mov	r0, r6
 80036cc:	f7fe fa24 	bl	8001b18 <_printf_i>
 80036d0:	e7e4      	b.n	800369c <_vfiprintf_r+0x208>
 80036d2:	bf00      	nop
 80036d4:	08004304 	.word	0x08004304
 80036d8:	08004324 	.word	0x08004324
 80036dc:	080042e4 	.word	0x080042e4
 80036e0:	080041d2 	.word	0x080041d2
 80036e4:	080041dc 	.word	0x080041dc
 80036e8:	080015d1 	.word	0x080015d1
 80036ec:	0800346f 	.word	0x0800346f
 80036f0:	080041d8 	.word	0x080041d8

080036f4 <__swbuf_r>:
 80036f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80036f6:	460e      	mov	r6, r1
 80036f8:	4614      	mov	r4, r2
 80036fa:	4605      	mov	r5, r0
 80036fc:	b118      	cbz	r0, 8003706 <__swbuf_r+0x12>
 80036fe:	6983      	ldr	r3, [r0, #24]
 8003700:	b90b      	cbnz	r3, 8003706 <__swbuf_r+0x12>
 8003702:	f000 f9e7 	bl	8003ad4 <__sinit>
 8003706:	4b21      	ldr	r3, [pc, #132]	; (800378c <__swbuf_r+0x98>)
 8003708:	429c      	cmp	r4, r3
 800370a:	d12b      	bne.n	8003764 <__swbuf_r+0x70>
 800370c:	686c      	ldr	r4, [r5, #4]
 800370e:	69a3      	ldr	r3, [r4, #24]
 8003710:	60a3      	str	r3, [r4, #8]
 8003712:	89a3      	ldrh	r3, [r4, #12]
 8003714:	071a      	lsls	r2, r3, #28
 8003716:	d52f      	bpl.n	8003778 <__swbuf_r+0x84>
 8003718:	6923      	ldr	r3, [r4, #16]
 800371a:	b36b      	cbz	r3, 8003778 <__swbuf_r+0x84>
 800371c:	6923      	ldr	r3, [r4, #16]
 800371e:	6820      	ldr	r0, [r4, #0]
 8003720:	1ac0      	subs	r0, r0, r3
 8003722:	6963      	ldr	r3, [r4, #20]
 8003724:	b2f6      	uxtb	r6, r6
 8003726:	4283      	cmp	r3, r0
 8003728:	4637      	mov	r7, r6
 800372a:	dc04      	bgt.n	8003736 <__swbuf_r+0x42>
 800372c:	4621      	mov	r1, r4
 800372e:	4628      	mov	r0, r5
 8003730:	f000 f93c 	bl	80039ac <_fflush_r>
 8003734:	bb30      	cbnz	r0, 8003784 <__swbuf_r+0x90>
 8003736:	68a3      	ldr	r3, [r4, #8]
 8003738:	3b01      	subs	r3, #1
 800373a:	60a3      	str	r3, [r4, #8]
 800373c:	6823      	ldr	r3, [r4, #0]
 800373e:	1c5a      	adds	r2, r3, #1
 8003740:	6022      	str	r2, [r4, #0]
 8003742:	701e      	strb	r6, [r3, #0]
 8003744:	6963      	ldr	r3, [r4, #20]
 8003746:	3001      	adds	r0, #1
 8003748:	4283      	cmp	r3, r0
 800374a:	d004      	beq.n	8003756 <__swbuf_r+0x62>
 800374c:	89a3      	ldrh	r3, [r4, #12]
 800374e:	07db      	lsls	r3, r3, #31
 8003750:	d506      	bpl.n	8003760 <__swbuf_r+0x6c>
 8003752:	2e0a      	cmp	r6, #10
 8003754:	d104      	bne.n	8003760 <__swbuf_r+0x6c>
 8003756:	4621      	mov	r1, r4
 8003758:	4628      	mov	r0, r5
 800375a:	f000 f927 	bl	80039ac <_fflush_r>
 800375e:	b988      	cbnz	r0, 8003784 <__swbuf_r+0x90>
 8003760:	4638      	mov	r0, r7
 8003762:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003764:	4b0a      	ldr	r3, [pc, #40]	; (8003790 <__swbuf_r+0x9c>)
 8003766:	429c      	cmp	r4, r3
 8003768:	d101      	bne.n	800376e <__swbuf_r+0x7a>
 800376a:	68ac      	ldr	r4, [r5, #8]
 800376c:	e7cf      	b.n	800370e <__swbuf_r+0x1a>
 800376e:	4b09      	ldr	r3, [pc, #36]	; (8003794 <__swbuf_r+0xa0>)
 8003770:	429c      	cmp	r4, r3
 8003772:	bf08      	it	eq
 8003774:	68ec      	ldreq	r4, [r5, #12]
 8003776:	e7ca      	b.n	800370e <__swbuf_r+0x1a>
 8003778:	4621      	mov	r1, r4
 800377a:	4628      	mov	r0, r5
 800377c:	f000 f81a 	bl	80037b4 <__swsetup_r>
 8003780:	2800      	cmp	r0, #0
 8003782:	d0cb      	beq.n	800371c <__swbuf_r+0x28>
 8003784:	f04f 37ff 	mov.w	r7, #4294967295
 8003788:	e7ea      	b.n	8003760 <__swbuf_r+0x6c>
 800378a:	bf00      	nop
 800378c:	08004304 	.word	0x08004304
 8003790:	08004324 	.word	0x08004324
 8003794:	080042e4 	.word	0x080042e4

08003798 <__ascii_wctomb>:
 8003798:	b149      	cbz	r1, 80037ae <__ascii_wctomb+0x16>
 800379a:	2aff      	cmp	r2, #255	; 0xff
 800379c:	bf85      	ittet	hi
 800379e:	238a      	movhi	r3, #138	; 0x8a
 80037a0:	6003      	strhi	r3, [r0, #0]
 80037a2:	700a      	strbls	r2, [r1, #0]
 80037a4:	f04f 30ff 	movhi.w	r0, #4294967295
 80037a8:	bf98      	it	ls
 80037aa:	2001      	movls	r0, #1
 80037ac:	4770      	bx	lr
 80037ae:	4608      	mov	r0, r1
 80037b0:	4770      	bx	lr
	...

080037b4 <__swsetup_r>:
 80037b4:	4b32      	ldr	r3, [pc, #200]	; (8003880 <__swsetup_r+0xcc>)
 80037b6:	b570      	push	{r4, r5, r6, lr}
 80037b8:	681d      	ldr	r5, [r3, #0]
 80037ba:	4606      	mov	r6, r0
 80037bc:	460c      	mov	r4, r1
 80037be:	b125      	cbz	r5, 80037ca <__swsetup_r+0x16>
 80037c0:	69ab      	ldr	r3, [r5, #24]
 80037c2:	b913      	cbnz	r3, 80037ca <__swsetup_r+0x16>
 80037c4:	4628      	mov	r0, r5
 80037c6:	f000 f985 	bl	8003ad4 <__sinit>
 80037ca:	4b2e      	ldr	r3, [pc, #184]	; (8003884 <__swsetup_r+0xd0>)
 80037cc:	429c      	cmp	r4, r3
 80037ce:	d10f      	bne.n	80037f0 <__swsetup_r+0x3c>
 80037d0:	686c      	ldr	r4, [r5, #4]
 80037d2:	89a3      	ldrh	r3, [r4, #12]
 80037d4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80037d8:	0719      	lsls	r1, r3, #28
 80037da:	d42c      	bmi.n	8003836 <__swsetup_r+0x82>
 80037dc:	06dd      	lsls	r5, r3, #27
 80037de:	d411      	bmi.n	8003804 <__swsetup_r+0x50>
 80037e0:	2309      	movs	r3, #9
 80037e2:	6033      	str	r3, [r6, #0]
 80037e4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80037e8:	81a3      	strh	r3, [r4, #12]
 80037ea:	f04f 30ff 	mov.w	r0, #4294967295
 80037ee:	e03e      	b.n	800386e <__swsetup_r+0xba>
 80037f0:	4b25      	ldr	r3, [pc, #148]	; (8003888 <__swsetup_r+0xd4>)
 80037f2:	429c      	cmp	r4, r3
 80037f4:	d101      	bne.n	80037fa <__swsetup_r+0x46>
 80037f6:	68ac      	ldr	r4, [r5, #8]
 80037f8:	e7eb      	b.n	80037d2 <__swsetup_r+0x1e>
 80037fa:	4b24      	ldr	r3, [pc, #144]	; (800388c <__swsetup_r+0xd8>)
 80037fc:	429c      	cmp	r4, r3
 80037fe:	bf08      	it	eq
 8003800:	68ec      	ldreq	r4, [r5, #12]
 8003802:	e7e6      	b.n	80037d2 <__swsetup_r+0x1e>
 8003804:	0758      	lsls	r0, r3, #29
 8003806:	d512      	bpl.n	800382e <__swsetup_r+0x7a>
 8003808:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800380a:	b141      	cbz	r1, 800381e <__swsetup_r+0x6a>
 800380c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003810:	4299      	cmp	r1, r3
 8003812:	d002      	beq.n	800381a <__swsetup_r+0x66>
 8003814:	4630      	mov	r0, r6
 8003816:	f7ff fcd5 	bl	80031c4 <_free_r>
 800381a:	2300      	movs	r3, #0
 800381c:	6363      	str	r3, [r4, #52]	; 0x34
 800381e:	89a3      	ldrh	r3, [r4, #12]
 8003820:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8003824:	81a3      	strh	r3, [r4, #12]
 8003826:	2300      	movs	r3, #0
 8003828:	6063      	str	r3, [r4, #4]
 800382a:	6923      	ldr	r3, [r4, #16]
 800382c:	6023      	str	r3, [r4, #0]
 800382e:	89a3      	ldrh	r3, [r4, #12]
 8003830:	f043 0308 	orr.w	r3, r3, #8
 8003834:	81a3      	strh	r3, [r4, #12]
 8003836:	6923      	ldr	r3, [r4, #16]
 8003838:	b94b      	cbnz	r3, 800384e <__swsetup_r+0x9a>
 800383a:	89a3      	ldrh	r3, [r4, #12]
 800383c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8003840:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003844:	d003      	beq.n	800384e <__swsetup_r+0x9a>
 8003846:	4621      	mov	r1, r4
 8003848:	4630      	mov	r0, r6
 800384a:	f000 fa09 	bl	8003c60 <__smakebuf_r>
 800384e:	89a0      	ldrh	r0, [r4, #12]
 8003850:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003854:	f010 0301 	ands.w	r3, r0, #1
 8003858:	d00a      	beq.n	8003870 <__swsetup_r+0xbc>
 800385a:	2300      	movs	r3, #0
 800385c:	60a3      	str	r3, [r4, #8]
 800385e:	6963      	ldr	r3, [r4, #20]
 8003860:	425b      	negs	r3, r3
 8003862:	61a3      	str	r3, [r4, #24]
 8003864:	6923      	ldr	r3, [r4, #16]
 8003866:	b943      	cbnz	r3, 800387a <__swsetup_r+0xc6>
 8003868:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800386c:	d1ba      	bne.n	80037e4 <__swsetup_r+0x30>
 800386e:	bd70      	pop	{r4, r5, r6, pc}
 8003870:	0781      	lsls	r1, r0, #30
 8003872:	bf58      	it	pl
 8003874:	6963      	ldrpl	r3, [r4, #20]
 8003876:	60a3      	str	r3, [r4, #8]
 8003878:	e7f4      	b.n	8003864 <__swsetup_r+0xb0>
 800387a:	2000      	movs	r0, #0
 800387c:	e7f7      	b.n	800386e <__swsetup_r+0xba>
 800387e:	bf00      	nop
 8003880:	20000004 	.word	0x20000004
 8003884:	08004304 	.word	0x08004304
 8003888:	08004324 	.word	0x08004324
 800388c:	080042e4 	.word	0x080042e4

08003890 <abort>:
 8003890:	b508      	push	{r3, lr}
 8003892:	2006      	movs	r0, #6
 8003894:	f000 fa4c 	bl	8003d30 <raise>
 8003898:	2001      	movs	r0, #1
 800389a:	f000 fb57 	bl	8003f4c <_exit>
	...

080038a0 <__sflush_r>:
 80038a0:	898a      	ldrh	r2, [r1, #12]
 80038a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80038a6:	4605      	mov	r5, r0
 80038a8:	0710      	lsls	r0, r2, #28
 80038aa:	460c      	mov	r4, r1
 80038ac:	d458      	bmi.n	8003960 <__sflush_r+0xc0>
 80038ae:	684b      	ldr	r3, [r1, #4]
 80038b0:	2b00      	cmp	r3, #0
 80038b2:	dc05      	bgt.n	80038c0 <__sflush_r+0x20>
 80038b4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80038b6:	2b00      	cmp	r3, #0
 80038b8:	dc02      	bgt.n	80038c0 <__sflush_r+0x20>
 80038ba:	2000      	movs	r0, #0
 80038bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80038c0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80038c2:	2e00      	cmp	r6, #0
 80038c4:	d0f9      	beq.n	80038ba <__sflush_r+0x1a>
 80038c6:	2300      	movs	r3, #0
 80038c8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80038cc:	682f      	ldr	r7, [r5, #0]
 80038ce:	602b      	str	r3, [r5, #0]
 80038d0:	d032      	beq.n	8003938 <__sflush_r+0x98>
 80038d2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80038d4:	89a3      	ldrh	r3, [r4, #12]
 80038d6:	075a      	lsls	r2, r3, #29
 80038d8:	d505      	bpl.n	80038e6 <__sflush_r+0x46>
 80038da:	6863      	ldr	r3, [r4, #4]
 80038dc:	1ac0      	subs	r0, r0, r3
 80038de:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80038e0:	b10b      	cbz	r3, 80038e6 <__sflush_r+0x46>
 80038e2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80038e4:	1ac0      	subs	r0, r0, r3
 80038e6:	2300      	movs	r3, #0
 80038e8:	4602      	mov	r2, r0
 80038ea:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80038ec:	6a21      	ldr	r1, [r4, #32]
 80038ee:	4628      	mov	r0, r5
 80038f0:	47b0      	blx	r6
 80038f2:	1c43      	adds	r3, r0, #1
 80038f4:	89a3      	ldrh	r3, [r4, #12]
 80038f6:	d106      	bne.n	8003906 <__sflush_r+0x66>
 80038f8:	6829      	ldr	r1, [r5, #0]
 80038fa:	291d      	cmp	r1, #29
 80038fc:	d82c      	bhi.n	8003958 <__sflush_r+0xb8>
 80038fe:	4a2a      	ldr	r2, [pc, #168]	; (80039a8 <__sflush_r+0x108>)
 8003900:	40ca      	lsrs	r2, r1
 8003902:	07d6      	lsls	r6, r2, #31
 8003904:	d528      	bpl.n	8003958 <__sflush_r+0xb8>
 8003906:	2200      	movs	r2, #0
 8003908:	6062      	str	r2, [r4, #4]
 800390a:	04d9      	lsls	r1, r3, #19
 800390c:	6922      	ldr	r2, [r4, #16]
 800390e:	6022      	str	r2, [r4, #0]
 8003910:	d504      	bpl.n	800391c <__sflush_r+0x7c>
 8003912:	1c42      	adds	r2, r0, #1
 8003914:	d101      	bne.n	800391a <__sflush_r+0x7a>
 8003916:	682b      	ldr	r3, [r5, #0]
 8003918:	b903      	cbnz	r3, 800391c <__sflush_r+0x7c>
 800391a:	6560      	str	r0, [r4, #84]	; 0x54
 800391c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800391e:	602f      	str	r7, [r5, #0]
 8003920:	2900      	cmp	r1, #0
 8003922:	d0ca      	beq.n	80038ba <__sflush_r+0x1a>
 8003924:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003928:	4299      	cmp	r1, r3
 800392a:	d002      	beq.n	8003932 <__sflush_r+0x92>
 800392c:	4628      	mov	r0, r5
 800392e:	f7ff fc49 	bl	80031c4 <_free_r>
 8003932:	2000      	movs	r0, #0
 8003934:	6360      	str	r0, [r4, #52]	; 0x34
 8003936:	e7c1      	b.n	80038bc <__sflush_r+0x1c>
 8003938:	6a21      	ldr	r1, [r4, #32]
 800393a:	2301      	movs	r3, #1
 800393c:	4628      	mov	r0, r5
 800393e:	47b0      	blx	r6
 8003940:	1c41      	adds	r1, r0, #1
 8003942:	d1c7      	bne.n	80038d4 <__sflush_r+0x34>
 8003944:	682b      	ldr	r3, [r5, #0]
 8003946:	2b00      	cmp	r3, #0
 8003948:	d0c4      	beq.n	80038d4 <__sflush_r+0x34>
 800394a:	2b1d      	cmp	r3, #29
 800394c:	d001      	beq.n	8003952 <__sflush_r+0xb2>
 800394e:	2b16      	cmp	r3, #22
 8003950:	d101      	bne.n	8003956 <__sflush_r+0xb6>
 8003952:	602f      	str	r7, [r5, #0]
 8003954:	e7b1      	b.n	80038ba <__sflush_r+0x1a>
 8003956:	89a3      	ldrh	r3, [r4, #12]
 8003958:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800395c:	81a3      	strh	r3, [r4, #12]
 800395e:	e7ad      	b.n	80038bc <__sflush_r+0x1c>
 8003960:	690f      	ldr	r7, [r1, #16]
 8003962:	2f00      	cmp	r7, #0
 8003964:	d0a9      	beq.n	80038ba <__sflush_r+0x1a>
 8003966:	0793      	lsls	r3, r2, #30
 8003968:	680e      	ldr	r6, [r1, #0]
 800396a:	bf08      	it	eq
 800396c:	694b      	ldreq	r3, [r1, #20]
 800396e:	600f      	str	r7, [r1, #0]
 8003970:	bf18      	it	ne
 8003972:	2300      	movne	r3, #0
 8003974:	eba6 0807 	sub.w	r8, r6, r7
 8003978:	608b      	str	r3, [r1, #8]
 800397a:	f1b8 0f00 	cmp.w	r8, #0
 800397e:	dd9c      	ble.n	80038ba <__sflush_r+0x1a>
 8003980:	6a21      	ldr	r1, [r4, #32]
 8003982:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8003984:	4643      	mov	r3, r8
 8003986:	463a      	mov	r2, r7
 8003988:	4628      	mov	r0, r5
 800398a:	47b0      	blx	r6
 800398c:	2800      	cmp	r0, #0
 800398e:	dc06      	bgt.n	800399e <__sflush_r+0xfe>
 8003990:	89a3      	ldrh	r3, [r4, #12]
 8003992:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003996:	81a3      	strh	r3, [r4, #12]
 8003998:	f04f 30ff 	mov.w	r0, #4294967295
 800399c:	e78e      	b.n	80038bc <__sflush_r+0x1c>
 800399e:	4407      	add	r7, r0
 80039a0:	eba8 0800 	sub.w	r8, r8, r0
 80039a4:	e7e9      	b.n	800397a <__sflush_r+0xda>
 80039a6:	bf00      	nop
 80039a8:	20400001 	.word	0x20400001

080039ac <_fflush_r>:
 80039ac:	b538      	push	{r3, r4, r5, lr}
 80039ae:	690b      	ldr	r3, [r1, #16]
 80039b0:	4605      	mov	r5, r0
 80039b2:	460c      	mov	r4, r1
 80039b4:	b913      	cbnz	r3, 80039bc <_fflush_r+0x10>
 80039b6:	2500      	movs	r5, #0
 80039b8:	4628      	mov	r0, r5
 80039ba:	bd38      	pop	{r3, r4, r5, pc}
 80039bc:	b118      	cbz	r0, 80039c6 <_fflush_r+0x1a>
 80039be:	6983      	ldr	r3, [r0, #24]
 80039c0:	b90b      	cbnz	r3, 80039c6 <_fflush_r+0x1a>
 80039c2:	f000 f887 	bl	8003ad4 <__sinit>
 80039c6:	4b14      	ldr	r3, [pc, #80]	; (8003a18 <_fflush_r+0x6c>)
 80039c8:	429c      	cmp	r4, r3
 80039ca:	d11b      	bne.n	8003a04 <_fflush_r+0x58>
 80039cc:	686c      	ldr	r4, [r5, #4]
 80039ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80039d2:	2b00      	cmp	r3, #0
 80039d4:	d0ef      	beq.n	80039b6 <_fflush_r+0xa>
 80039d6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80039d8:	07d0      	lsls	r0, r2, #31
 80039da:	d404      	bmi.n	80039e6 <_fflush_r+0x3a>
 80039dc:	0599      	lsls	r1, r3, #22
 80039de:	d402      	bmi.n	80039e6 <_fflush_r+0x3a>
 80039e0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80039e2:	f000 f915 	bl	8003c10 <__retarget_lock_acquire_recursive>
 80039e6:	4628      	mov	r0, r5
 80039e8:	4621      	mov	r1, r4
 80039ea:	f7ff ff59 	bl	80038a0 <__sflush_r>
 80039ee:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80039f0:	07da      	lsls	r2, r3, #31
 80039f2:	4605      	mov	r5, r0
 80039f4:	d4e0      	bmi.n	80039b8 <_fflush_r+0xc>
 80039f6:	89a3      	ldrh	r3, [r4, #12]
 80039f8:	059b      	lsls	r3, r3, #22
 80039fa:	d4dd      	bmi.n	80039b8 <_fflush_r+0xc>
 80039fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80039fe:	f000 f908 	bl	8003c12 <__retarget_lock_release_recursive>
 8003a02:	e7d9      	b.n	80039b8 <_fflush_r+0xc>
 8003a04:	4b05      	ldr	r3, [pc, #20]	; (8003a1c <_fflush_r+0x70>)
 8003a06:	429c      	cmp	r4, r3
 8003a08:	d101      	bne.n	8003a0e <_fflush_r+0x62>
 8003a0a:	68ac      	ldr	r4, [r5, #8]
 8003a0c:	e7df      	b.n	80039ce <_fflush_r+0x22>
 8003a0e:	4b04      	ldr	r3, [pc, #16]	; (8003a20 <_fflush_r+0x74>)
 8003a10:	429c      	cmp	r4, r3
 8003a12:	bf08      	it	eq
 8003a14:	68ec      	ldreq	r4, [r5, #12]
 8003a16:	e7da      	b.n	80039ce <_fflush_r+0x22>
 8003a18:	08004304 	.word	0x08004304
 8003a1c:	08004324 	.word	0x08004324
 8003a20:	080042e4 	.word	0x080042e4

08003a24 <std>:
 8003a24:	2300      	movs	r3, #0
 8003a26:	b510      	push	{r4, lr}
 8003a28:	4604      	mov	r4, r0
 8003a2a:	e9c0 3300 	strd	r3, r3, [r0]
 8003a2e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8003a32:	6083      	str	r3, [r0, #8]
 8003a34:	8181      	strh	r1, [r0, #12]
 8003a36:	6643      	str	r3, [r0, #100]	; 0x64
 8003a38:	81c2      	strh	r2, [r0, #14]
 8003a3a:	6183      	str	r3, [r0, #24]
 8003a3c:	4619      	mov	r1, r3
 8003a3e:	2208      	movs	r2, #8
 8003a40:	305c      	adds	r0, #92	; 0x5c
 8003a42:	f7fd fd1d 	bl	8001480 <memset>
 8003a46:	4b05      	ldr	r3, [pc, #20]	; (8003a5c <std+0x38>)
 8003a48:	6263      	str	r3, [r4, #36]	; 0x24
 8003a4a:	4b05      	ldr	r3, [pc, #20]	; (8003a60 <std+0x3c>)
 8003a4c:	62a3      	str	r3, [r4, #40]	; 0x28
 8003a4e:	4b05      	ldr	r3, [pc, #20]	; (8003a64 <std+0x40>)
 8003a50:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003a52:	4b05      	ldr	r3, [pc, #20]	; (8003a68 <std+0x44>)
 8003a54:	6224      	str	r4, [r4, #32]
 8003a56:	6323      	str	r3, [r4, #48]	; 0x30
 8003a58:	bd10      	pop	{r4, pc}
 8003a5a:	bf00      	nop
 8003a5c:	08003d69 	.word	0x08003d69
 8003a60:	08003d8b 	.word	0x08003d8b
 8003a64:	08003dc3 	.word	0x08003dc3
 8003a68:	08003de7 	.word	0x08003de7

08003a6c <_cleanup_r>:
 8003a6c:	4901      	ldr	r1, [pc, #4]	; (8003a74 <_cleanup_r+0x8>)
 8003a6e:	f000 b8af 	b.w	8003bd0 <_fwalk_reent>
 8003a72:	bf00      	nop
 8003a74:	080039ad 	.word	0x080039ad

08003a78 <__sfmoreglue>:
 8003a78:	b570      	push	{r4, r5, r6, lr}
 8003a7a:	2268      	movs	r2, #104	; 0x68
 8003a7c:	1e4d      	subs	r5, r1, #1
 8003a7e:	4355      	muls	r5, r2
 8003a80:	460e      	mov	r6, r1
 8003a82:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8003a86:	f7ff fc09 	bl	800329c <_malloc_r>
 8003a8a:	4604      	mov	r4, r0
 8003a8c:	b140      	cbz	r0, 8003aa0 <__sfmoreglue+0x28>
 8003a8e:	2100      	movs	r1, #0
 8003a90:	e9c0 1600 	strd	r1, r6, [r0]
 8003a94:	300c      	adds	r0, #12
 8003a96:	60a0      	str	r0, [r4, #8]
 8003a98:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8003a9c:	f7fd fcf0 	bl	8001480 <memset>
 8003aa0:	4620      	mov	r0, r4
 8003aa2:	bd70      	pop	{r4, r5, r6, pc}

08003aa4 <__sfp_lock_acquire>:
 8003aa4:	4801      	ldr	r0, [pc, #4]	; (8003aac <__sfp_lock_acquire+0x8>)
 8003aa6:	f000 b8b3 	b.w	8003c10 <__retarget_lock_acquire_recursive>
 8003aaa:	bf00      	nop
 8003aac:	20000205 	.word	0x20000205

08003ab0 <__sfp_lock_release>:
 8003ab0:	4801      	ldr	r0, [pc, #4]	; (8003ab8 <__sfp_lock_release+0x8>)
 8003ab2:	f000 b8ae 	b.w	8003c12 <__retarget_lock_release_recursive>
 8003ab6:	bf00      	nop
 8003ab8:	20000205 	.word	0x20000205

08003abc <__sinit_lock_acquire>:
 8003abc:	4801      	ldr	r0, [pc, #4]	; (8003ac4 <__sinit_lock_acquire+0x8>)
 8003abe:	f000 b8a7 	b.w	8003c10 <__retarget_lock_acquire_recursive>
 8003ac2:	bf00      	nop
 8003ac4:	20000206 	.word	0x20000206

08003ac8 <__sinit_lock_release>:
 8003ac8:	4801      	ldr	r0, [pc, #4]	; (8003ad0 <__sinit_lock_release+0x8>)
 8003aca:	f000 b8a2 	b.w	8003c12 <__retarget_lock_release_recursive>
 8003ace:	bf00      	nop
 8003ad0:	20000206 	.word	0x20000206

08003ad4 <__sinit>:
 8003ad4:	b510      	push	{r4, lr}
 8003ad6:	4604      	mov	r4, r0
 8003ad8:	f7ff fff0 	bl	8003abc <__sinit_lock_acquire>
 8003adc:	69a3      	ldr	r3, [r4, #24]
 8003ade:	b11b      	cbz	r3, 8003ae8 <__sinit+0x14>
 8003ae0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003ae4:	f7ff bff0 	b.w	8003ac8 <__sinit_lock_release>
 8003ae8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8003aec:	6523      	str	r3, [r4, #80]	; 0x50
 8003aee:	4b13      	ldr	r3, [pc, #76]	; (8003b3c <__sinit+0x68>)
 8003af0:	4a13      	ldr	r2, [pc, #76]	; (8003b40 <__sinit+0x6c>)
 8003af2:	681b      	ldr	r3, [r3, #0]
 8003af4:	62a2      	str	r2, [r4, #40]	; 0x28
 8003af6:	42a3      	cmp	r3, r4
 8003af8:	bf04      	itt	eq
 8003afa:	2301      	moveq	r3, #1
 8003afc:	61a3      	streq	r3, [r4, #24]
 8003afe:	4620      	mov	r0, r4
 8003b00:	f000 f820 	bl	8003b44 <__sfp>
 8003b04:	6060      	str	r0, [r4, #4]
 8003b06:	4620      	mov	r0, r4
 8003b08:	f000 f81c 	bl	8003b44 <__sfp>
 8003b0c:	60a0      	str	r0, [r4, #8]
 8003b0e:	4620      	mov	r0, r4
 8003b10:	f000 f818 	bl	8003b44 <__sfp>
 8003b14:	2200      	movs	r2, #0
 8003b16:	60e0      	str	r0, [r4, #12]
 8003b18:	2104      	movs	r1, #4
 8003b1a:	6860      	ldr	r0, [r4, #4]
 8003b1c:	f7ff ff82 	bl	8003a24 <std>
 8003b20:	68a0      	ldr	r0, [r4, #8]
 8003b22:	2201      	movs	r2, #1
 8003b24:	2109      	movs	r1, #9
 8003b26:	f7ff ff7d 	bl	8003a24 <std>
 8003b2a:	68e0      	ldr	r0, [r4, #12]
 8003b2c:	2202      	movs	r2, #2
 8003b2e:	2112      	movs	r1, #18
 8003b30:	f7ff ff78 	bl	8003a24 <std>
 8003b34:	2301      	movs	r3, #1
 8003b36:	61a3      	str	r3, [r4, #24]
 8003b38:	e7d2      	b.n	8003ae0 <__sinit+0xc>
 8003b3a:	bf00      	nop
 8003b3c:	08003f68 	.word	0x08003f68
 8003b40:	08003a6d 	.word	0x08003a6d

08003b44 <__sfp>:
 8003b44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003b46:	4607      	mov	r7, r0
 8003b48:	f7ff ffac 	bl	8003aa4 <__sfp_lock_acquire>
 8003b4c:	4b1e      	ldr	r3, [pc, #120]	; (8003bc8 <__sfp+0x84>)
 8003b4e:	681e      	ldr	r6, [r3, #0]
 8003b50:	69b3      	ldr	r3, [r6, #24]
 8003b52:	b913      	cbnz	r3, 8003b5a <__sfp+0x16>
 8003b54:	4630      	mov	r0, r6
 8003b56:	f7ff ffbd 	bl	8003ad4 <__sinit>
 8003b5a:	3648      	adds	r6, #72	; 0x48
 8003b5c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8003b60:	3b01      	subs	r3, #1
 8003b62:	d503      	bpl.n	8003b6c <__sfp+0x28>
 8003b64:	6833      	ldr	r3, [r6, #0]
 8003b66:	b30b      	cbz	r3, 8003bac <__sfp+0x68>
 8003b68:	6836      	ldr	r6, [r6, #0]
 8003b6a:	e7f7      	b.n	8003b5c <__sfp+0x18>
 8003b6c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8003b70:	b9d5      	cbnz	r5, 8003ba8 <__sfp+0x64>
 8003b72:	4b16      	ldr	r3, [pc, #88]	; (8003bcc <__sfp+0x88>)
 8003b74:	60e3      	str	r3, [r4, #12]
 8003b76:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8003b7a:	6665      	str	r5, [r4, #100]	; 0x64
 8003b7c:	f000 f847 	bl	8003c0e <__retarget_lock_init_recursive>
 8003b80:	f7ff ff96 	bl	8003ab0 <__sfp_lock_release>
 8003b84:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8003b88:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8003b8c:	6025      	str	r5, [r4, #0]
 8003b8e:	61a5      	str	r5, [r4, #24]
 8003b90:	2208      	movs	r2, #8
 8003b92:	4629      	mov	r1, r5
 8003b94:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8003b98:	f7fd fc72 	bl	8001480 <memset>
 8003b9c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8003ba0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8003ba4:	4620      	mov	r0, r4
 8003ba6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003ba8:	3468      	adds	r4, #104	; 0x68
 8003baa:	e7d9      	b.n	8003b60 <__sfp+0x1c>
 8003bac:	2104      	movs	r1, #4
 8003bae:	4638      	mov	r0, r7
 8003bb0:	f7ff ff62 	bl	8003a78 <__sfmoreglue>
 8003bb4:	4604      	mov	r4, r0
 8003bb6:	6030      	str	r0, [r6, #0]
 8003bb8:	2800      	cmp	r0, #0
 8003bba:	d1d5      	bne.n	8003b68 <__sfp+0x24>
 8003bbc:	f7ff ff78 	bl	8003ab0 <__sfp_lock_release>
 8003bc0:	230c      	movs	r3, #12
 8003bc2:	603b      	str	r3, [r7, #0]
 8003bc4:	e7ee      	b.n	8003ba4 <__sfp+0x60>
 8003bc6:	bf00      	nop
 8003bc8:	08003f68 	.word	0x08003f68
 8003bcc:	ffff0001 	.word	0xffff0001

08003bd0 <_fwalk_reent>:
 8003bd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003bd4:	4606      	mov	r6, r0
 8003bd6:	4688      	mov	r8, r1
 8003bd8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8003bdc:	2700      	movs	r7, #0
 8003bde:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8003be2:	f1b9 0901 	subs.w	r9, r9, #1
 8003be6:	d505      	bpl.n	8003bf4 <_fwalk_reent+0x24>
 8003be8:	6824      	ldr	r4, [r4, #0]
 8003bea:	2c00      	cmp	r4, #0
 8003bec:	d1f7      	bne.n	8003bde <_fwalk_reent+0xe>
 8003bee:	4638      	mov	r0, r7
 8003bf0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003bf4:	89ab      	ldrh	r3, [r5, #12]
 8003bf6:	2b01      	cmp	r3, #1
 8003bf8:	d907      	bls.n	8003c0a <_fwalk_reent+0x3a>
 8003bfa:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8003bfe:	3301      	adds	r3, #1
 8003c00:	d003      	beq.n	8003c0a <_fwalk_reent+0x3a>
 8003c02:	4629      	mov	r1, r5
 8003c04:	4630      	mov	r0, r6
 8003c06:	47c0      	blx	r8
 8003c08:	4307      	orrs	r7, r0
 8003c0a:	3568      	adds	r5, #104	; 0x68
 8003c0c:	e7e9      	b.n	8003be2 <_fwalk_reent+0x12>

08003c0e <__retarget_lock_init_recursive>:
 8003c0e:	4770      	bx	lr

08003c10 <__retarget_lock_acquire_recursive>:
 8003c10:	4770      	bx	lr

08003c12 <__retarget_lock_release_recursive>:
 8003c12:	4770      	bx	lr

08003c14 <__swhatbuf_r>:
 8003c14:	b570      	push	{r4, r5, r6, lr}
 8003c16:	460e      	mov	r6, r1
 8003c18:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003c1c:	2900      	cmp	r1, #0
 8003c1e:	b096      	sub	sp, #88	; 0x58
 8003c20:	4614      	mov	r4, r2
 8003c22:	461d      	mov	r5, r3
 8003c24:	da08      	bge.n	8003c38 <__swhatbuf_r+0x24>
 8003c26:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8003c2a:	2200      	movs	r2, #0
 8003c2c:	602a      	str	r2, [r5, #0]
 8003c2e:	061a      	lsls	r2, r3, #24
 8003c30:	d410      	bmi.n	8003c54 <__swhatbuf_r+0x40>
 8003c32:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003c36:	e00e      	b.n	8003c56 <__swhatbuf_r+0x42>
 8003c38:	466a      	mov	r2, sp
 8003c3a:	f000 f8fb 	bl	8003e34 <_fstat_r>
 8003c3e:	2800      	cmp	r0, #0
 8003c40:	dbf1      	blt.n	8003c26 <__swhatbuf_r+0x12>
 8003c42:	9a01      	ldr	r2, [sp, #4]
 8003c44:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8003c48:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8003c4c:	425a      	negs	r2, r3
 8003c4e:	415a      	adcs	r2, r3
 8003c50:	602a      	str	r2, [r5, #0]
 8003c52:	e7ee      	b.n	8003c32 <__swhatbuf_r+0x1e>
 8003c54:	2340      	movs	r3, #64	; 0x40
 8003c56:	2000      	movs	r0, #0
 8003c58:	6023      	str	r3, [r4, #0]
 8003c5a:	b016      	add	sp, #88	; 0x58
 8003c5c:	bd70      	pop	{r4, r5, r6, pc}
	...

08003c60 <__smakebuf_r>:
 8003c60:	898b      	ldrh	r3, [r1, #12]
 8003c62:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003c64:	079d      	lsls	r5, r3, #30
 8003c66:	4606      	mov	r6, r0
 8003c68:	460c      	mov	r4, r1
 8003c6a:	d507      	bpl.n	8003c7c <__smakebuf_r+0x1c>
 8003c6c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8003c70:	6023      	str	r3, [r4, #0]
 8003c72:	6123      	str	r3, [r4, #16]
 8003c74:	2301      	movs	r3, #1
 8003c76:	6163      	str	r3, [r4, #20]
 8003c78:	b002      	add	sp, #8
 8003c7a:	bd70      	pop	{r4, r5, r6, pc}
 8003c7c:	ab01      	add	r3, sp, #4
 8003c7e:	466a      	mov	r2, sp
 8003c80:	f7ff ffc8 	bl	8003c14 <__swhatbuf_r>
 8003c84:	9900      	ldr	r1, [sp, #0]
 8003c86:	4605      	mov	r5, r0
 8003c88:	4630      	mov	r0, r6
 8003c8a:	f7ff fb07 	bl	800329c <_malloc_r>
 8003c8e:	b948      	cbnz	r0, 8003ca4 <__smakebuf_r+0x44>
 8003c90:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003c94:	059a      	lsls	r2, r3, #22
 8003c96:	d4ef      	bmi.n	8003c78 <__smakebuf_r+0x18>
 8003c98:	f023 0303 	bic.w	r3, r3, #3
 8003c9c:	f043 0302 	orr.w	r3, r3, #2
 8003ca0:	81a3      	strh	r3, [r4, #12]
 8003ca2:	e7e3      	b.n	8003c6c <__smakebuf_r+0xc>
 8003ca4:	4b0d      	ldr	r3, [pc, #52]	; (8003cdc <__smakebuf_r+0x7c>)
 8003ca6:	62b3      	str	r3, [r6, #40]	; 0x28
 8003ca8:	89a3      	ldrh	r3, [r4, #12]
 8003caa:	6020      	str	r0, [r4, #0]
 8003cac:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003cb0:	81a3      	strh	r3, [r4, #12]
 8003cb2:	9b00      	ldr	r3, [sp, #0]
 8003cb4:	6163      	str	r3, [r4, #20]
 8003cb6:	9b01      	ldr	r3, [sp, #4]
 8003cb8:	6120      	str	r0, [r4, #16]
 8003cba:	b15b      	cbz	r3, 8003cd4 <__smakebuf_r+0x74>
 8003cbc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003cc0:	4630      	mov	r0, r6
 8003cc2:	f000 f8c9 	bl	8003e58 <_isatty_r>
 8003cc6:	b128      	cbz	r0, 8003cd4 <__smakebuf_r+0x74>
 8003cc8:	89a3      	ldrh	r3, [r4, #12]
 8003cca:	f023 0303 	bic.w	r3, r3, #3
 8003cce:	f043 0301 	orr.w	r3, r3, #1
 8003cd2:	81a3      	strh	r3, [r4, #12]
 8003cd4:	89a0      	ldrh	r0, [r4, #12]
 8003cd6:	4305      	orrs	r5, r0
 8003cd8:	81a5      	strh	r5, [r4, #12]
 8003cda:	e7cd      	b.n	8003c78 <__smakebuf_r+0x18>
 8003cdc:	08003a6d 	.word	0x08003a6d

08003ce0 <_raise_r>:
 8003ce0:	291f      	cmp	r1, #31
 8003ce2:	b538      	push	{r3, r4, r5, lr}
 8003ce4:	4604      	mov	r4, r0
 8003ce6:	460d      	mov	r5, r1
 8003ce8:	d904      	bls.n	8003cf4 <_raise_r+0x14>
 8003cea:	2316      	movs	r3, #22
 8003cec:	6003      	str	r3, [r0, #0]
 8003cee:	f04f 30ff 	mov.w	r0, #4294967295
 8003cf2:	bd38      	pop	{r3, r4, r5, pc}
 8003cf4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8003cf6:	b112      	cbz	r2, 8003cfe <_raise_r+0x1e>
 8003cf8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8003cfc:	b94b      	cbnz	r3, 8003d12 <_raise_r+0x32>
 8003cfe:	4620      	mov	r0, r4
 8003d00:	f000 f830 	bl	8003d64 <_getpid_r>
 8003d04:	462a      	mov	r2, r5
 8003d06:	4601      	mov	r1, r0
 8003d08:	4620      	mov	r0, r4
 8003d0a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003d0e:	f000 b817 	b.w	8003d40 <_kill_r>
 8003d12:	2b01      	cmp	r3, #1
 8003d14:	d00a      	beq.n	8003d2c <_raise_r+0x4c>
 8003d16:	1c59      	adds	r1, r3, #1
 8003d18:	d103      	bne.n	8003d22 <_raise_r+0x42>
 8003d1a:	2316      	movs	r3, #22
 8003d1c:	6003      	str	r3, [r0, #0]
 8003d1e:	2001      	movs	r0, #1
 8003d20:	e7e7      	b.n	8003cf2 <_raise_r+0x12>
 8003d22:	2400      	movs	r4, #0
 8003d24:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8003d28:	4628      	mov	r0, r5
 8003d2a:	4798      	blx	r3
 8003d2c:	2000      	movs	r0, #0
 8003d2e:	e7e0      	b.n	8003cf2 <_raise_r+0x12>

08003d30 <raise>:
 8003d30:	4b02      	ldr	r3, [pc, #8]	; (8003d3c <raise+0xc>)
 8003d32:	4601      	mov	r1, r0
 8003d34:	6818      	ldr	r0, [r3, #0]
 8003d36:	f7ff bfd3 	b.w	8003ce0 <_raise_r>
 8003d3a:	bf00      	nop
 8003d3c:	20000004 	.word	0x20000004

08003d40 <_kill_r>:
 8003d40:	b538      	push	{r3, r4, r5, lr}
 8003d42:	4d07      	ldr	r5, [pc, #28]	; (8003d60 <_kill_r+0x20>)
 8003d44:	2300      	movs	r3, #0
 8003d46:	4604      	mov	r4, r0
 8003d48:	4608      	mov	r0, r1
 8003d4a:	4611      	mov	r1, r2
 8003d4c:	602b      	str	r3, [r5, #0]
 8003d4e:	f000 f8d7 	bl	8003f00 <_kill>
 8003d52:	1c43      	adds	r3, r0, #1
 8003d54:	d102      	bne.n	8003d5c <_kill_r+0x1c>
 8003d56:	682b      	ldr	r3, [r5, #0]
 8003d58:	b103      	cbz	r3, 8003d5c <_kill_r+0x1c>
 8003d5a:	6023      	str	r3, [r4, #0]
 8003d5c:	bd38      	pop	{r3, r4, r5, pc}
 8003d5e:	bf00      	nop
 8003d60:	20000200 	.word	0x20000200

08003d64 <_getpid_r>:
 8003d64:	f000 b8bc 	b.w	8003ee0 <_getpid>

08003d68 <__sread>:
 8003d68:	b510      	push	{r4, lr}
 8003d6a:	460c      	mov	r4, r1
 8003d6c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003d70:	f000 f894 	bl	8003e9c <_read_r>
 8003d74:	2800      	cmp	r0, #0
 8003d76:	bfab      	itete	ge
 8003d78:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8003d7a:	89a3      	ldrhlt	r3, [r4, #12]
 8003d7c:	181b      	addge	r3, r3, r0
 8003d7e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8003d82:	bfac      	ite	ge
 8003d84:	6563      	strge	r3, [r4, #84]	; 0x54
 8003d86:	81a3      	strhlt	r3, [r4, #12]
 8003d88:	bd10      	pop	{r4, pc}

08003d8a <__swrite>:
 8003d8a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d8e:	461f      	mov	r7, r3
 8003d90:	898b      	ldrh	r3, [r1, #12]
 8003d92:	05db      	lsls	r3, r3, #23
 8003d94:	4605      	mov	r5, r0
 8003d96:	460c      	mov	r4, r1
 8003d98:	4616      	mov	r6, r2
 8003d9a:	d505      	bpl.n	8003da8 <__swrite+0x1e>
 8003d9c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003da0:	2302      	movs	r3, #2
 8003da2:	2200      	movs	r2, #0
 8003da4:	f000 f868 	bl	8003e78 <_lseek_r>
 8003da8:	89a3      	ldrh	r3, [r4, #12]
 8003daa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003dae:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003db2:	81a3      	strh	r3, [r4, #12]
 8003db4:	4632      	mov	r2, r6
 8003db6:	463b      	mov	r3, r7
 8003db8:	4628      	mov	r0, r5
 8003dba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003dbe:	f000 b817 	b.w	8003df0 <_write_r>

08003dc2 <__sseek>:
 8003dc2:	b510      	push	{r4, lr}
 8003dc4:	460c      	mov	r4, r1
 8003dc6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003dca:	f000 f855 	bl	8003e78 <_lseek_r>
 8003dce:	1c43      	adds	r3, r0, #1
 8003dd0:	89a3      	ldrh	r3, [r4, #12]
 8003dd2:	bf15      	itete	ne
 8003dd4:	6560      	strne	r0, [r4, #84]	; 0x54
 8003dd6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8003dda:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8003dde:	81a3      	strheq	r3, [r4, #12]
 8003de0:	bf18      	it	ne
 8003de2:	81a3      	strhne	r3, [r4, #12]
 8003de4:	bd10      	pop	{r4, pc}

08003de6 <__sclose>:
 8003de6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003dea:	f000 b813 	b.w	8003e14 <_close_r>
	...

08003df0 <_write_r>:
 8003df0:	b538      	push	{r3, r4, r5, lr}
 8003df2:	4d07      	ldr	r5, [pc, #28]	; (8003e10 <_write_r+0x20>)
 8003df4:	4604      	mov	r4, r0
 8003df6:	4608      	mov	r0, r1
 8003df8:	4611      	mov	r1, r2
 8003dfa:	2200      	movs	r2, #0
 8003dfc:	602a      	str	r2, [r5, #0]
 8003dfe:	461a      	mov	r2, r3
 8003e00:	f7fc ff31 	bl	8000c66 <_write>
 8003e04:	1c43      	adds	r3, r0, #1
 8003e06:	d102      	bne.n	8003e0e <_write_r+0x1e>
 8003e08:	682b      	ldr	r3, [r5, #0]
 8003e0a:	b103      	cbz	r3, 8003e0e <_write_r+0x1e>
 8003e0c:	6023      	str	r3, [r4, #0]
 8003e0e:	bd38      	pop	{r3, r4, r5, pc}
 8003e10:	20000200 	.word	0x20000200

08003e14 <_close_r>:
 8003e14:	b538      	push	{r3, r4, r5, lr}
 8003e16:	4d06      	ldr	r5, [pc, #24]	; (8003e30 <_close_r+0x1c>)
 8003e18:	2300      	movs	r3, #0
 8003e1a:	4604      	mov	r4, r0
 8003e1c:	4608      	mov	r0, r1
 8003e1e:	602b      	str	r3, [r5, #0]
 8003e20:	f000 f84e 	bl	8003ec0 <_close>
 8003e24:	1c43      	adds	r3, r0, #1
 8003e26:	d102      	bne.n	8003e2e <_close_r+0x1a>
 8003e28:	682b      	ldr	r3, [r5, #0]
 8003e2a:	b103      	cbz	r3, 8003e2e <_close_r+0x1a>
 8003e2c:	6023      	str	r3, [r4, #0]
 8003e2e:	bd38      	pop	{r3, r4, r5, pc}
 8003e30:	20000200 	.word	0x20000200

08003e34 <_fstat_r>:
 8003e34:	b538      	push	{r3, r4, r5, lr}
 8003e36:	4d07      	ldr	r5, [pc, #28]	; (8003e54 <_fstat_r+0x20>)
 8003e38:	2300      	movs	r3, #0
 8003e3a:	4604      	mov	r4, r0
 8003e3c:	4608      	mov	r0, r1
 8003e3e:	4611      	mov	r1, r2
 8003e40:	602b      	str	r3, [r5, #0]
 8003e42:	f000 f845 	bl	8003ed0 <_fstat>
 8003e46:	1c43      	adds	r3, r0, #1
 8003e48:	d102      	bne.n	8003e50 <_fstat_r+0x1c>
 8003e4a:	682b      	ldr	r3, [r5, #0]
 8003e4c:	b103      	cbz	r3, 8003e50 <_fstat_r+0x1c>
 8003e4e:	6023      	str	r3, [r4, #0]
 8003e50:	bd38      	pop	{r3, r4, r5, pc}
 8003e52:	bf00      	nop
 8003e54:	20000200 	.word	0x20000200

08003e58 <_isatty_r>:
 8003e58:	b538      	push	{r3, r4, r5, lr}
 8003e5a:	4d06      	ldr	r5, [pc, #24]	; (8003e74 <_isatty_r+0x1c>)
 8003e5c:	2300      	movs	r3, #0
 8003e5e:	4604      	mov	r4, r0
 8003e60:	4608      	mov	r0, r1
 8003e62:	602b      	str	r3, [r5, #0]
 8003e64:	f000 f844 	bl	8003ef0 <_isatty>
 8003e68:	1c43      	adds	r3, r0, #1
 8003e6a:	d102      	bne.n	8003e72 <_isatty_r+0x1a>
 8003e6c:	682b      	ldr	r3, [r5, #0]
 8003e6e:	b103      	cbz	r3, 8003e72 <_isatty_r+0x1a>
 8003e70:	6023      	str	r3, [r4, #0]
 8003e72:	bd38      	pop	{r3, r4, r5, pc}
 8003e74:	20000200 	.word	0x20000200

08003e78 <_lseek_r>:
 8003e78:	b538      	push	{r3, r4, r5, lr}
 8003e7a:	4d07      	ldr	r5, [pc, #28]	; (8003e98 <_lseek_r+0x20>)
 8003e7c:	4604      	mov	r4, r0
 8003e7e:	4608      	mov	r0, r1
 8003e80:	4611      	mov	r1, r2
 8003e82:	2200      	movs	r2, #0
 8003e84:	602a      	str	r2, [r5, #0]
 8003e86:	461a      	mov	r2, r3
 8003e88:	f000 f842 	bl	8003f10 <_lseek>
 8003e8c:	1c43      	adds	r3, r0, #1
 8003e8e:	d102      	bne.n	8003e96 <_lseek_r+0x1e>
 8003e90:	682b      	ldr	r3, [r5, #0]
 8003e92:	b103      	cbz	r3, 8003e96 <_lseek_r+0x1e>
 8003e94:	6023      	str	r3, [r4, #0]
 8003e96:	bd38      	pop	{r3, r4, r5, pc}
 8003e98:	20000200 	.word	0x20000200

08003e9c <_read_r>:
 8003e9c:	b538      	push	{r3, r4, r5, lr}
 8003e9e:	4d07      	ldr	r5, [pc, #28]	; (8003ebc <_read_r+0x20>)
 8003ea0:	4604      	mov	r4, r0
 8003ea2:	4608      	mov	r0, r1
 8003ea4:	4611      	mov	r1, r2
 8003ea6:	2200      	movs	r2, #0
 8003ea8:	602a      	str	r2, [r5, #0]
 8003eaa:	461a      	mov	r2, r3
 8003eac:	f000 f838 	bl	8003f20 <_read>
 8003eb0:	1c43      	adds	r3, r0, #1
 8003eb2:	d102      	bne.n	8003eba <_read_r+0x1e>
 8003eb4:	682b      	ldr	r3, [r5, #0]
 8003eb6:	b103      	cbz	r3, 8003eba <_read_r+0x1e>
 8003eb8:	6023      	str	r3, [r4, #0]
 8003eba:	bd38      	pop	{r3, r4, r5, pc}
 8003ebc:	20000200 	.word	0x20000200

08003ec0 <_close>:
 8003ec0:	4b02      	ldr	r3, [pc, #8]	; (8003ecc <_close+0xc>)
 8003ec2:	2258      	movs	r2, #88	; 0x58
 8003ec4:	601a      	str	r2, [r3, #0]
 8003ec6:	f04f 30ff 	mov.w	r0, #4294967295
 8003eca:	4770      	bx	lr
 8003ecc:	20000200 	.word	0x20000200

08003ed0 <_fstat>:
 8003ed0:	4b02      	ldr	r3, [pc, #8]	; (8003edc <_fstat+0xc>)
 8003ed2:	2258      	movs	r2, #88	; 0x58
 8003ed4:	601a      	str	r2, [r3, #0]
 8003ed6:	f04f 30ff 	mov.w	r0, #4294967295
 8003eda:	4770      	bx	lr
 8003edc:	20000200 	.word	0x20000200

08003ee0 <_getpid>:
 8003ee0:	4b02      	ldr	r3, [pc, #8]	; (8003eec <_getpid+0xc>)
 8003ee2:	2258      	movs	r2, #88	; 0x58
 8003ee4:	601a      	str	r2, [r3, #0]
 8003ee6:	f04f 30ff 	mov.w	r0, #4294967295
 8003eea:	4770      	bx	lr
 8003eec:	20000200 	.word	0x20000200

08003ef0 <_isatty>:
 8003ef0:	4b02      	ldr	r3, [pc, #8]	; (8003efc <_isatty+0xc>)
 8003ef2:	2258      	movs	r2, #88	; 0x58
 8003ef4:	601a      	str	r2, [r3, #0]
 8003ef6:	2000      	movs	r0, #0
 8003ef8:	4770      	bx	lr
 8003efa:	bf00      	nop
 8003efc:	20000200 	.word	0x20000200

08003f00 <_kill>:
 8003f00:	4b02      	ldr	r3, [pc, #8]	; (8003f0c <_kill+0xc>)
 8003f02:	2258      	movs	r2, #88	; 0x58
 8003f04:	601a      	str	r2, [r3, #0]
 8003f06:	f04f 30ff 	mov.w	r0, #4294967295
 8003f0a:	4770      	bx	lr
 8003f0c:	20000200 	.word	0x20000200

08003f10 <_lseek>:
 8003f10:	4b02      	ldr	r3, [pc, #8]	; (8003f1c <_lseek+0xc>)
 8003f12:	2258      	movs	r2, #88	; 0x58
 8003f14:	601a      	str	r2, [r3, #0]
 8003f16:	f04f 30ff 	mov.w	r0, #4294967295
 8003f1a:	4770      	bx	lr
 8003f1c:	20000200 	.word	0x20000200

08003f20 <_read>:
 8003f20:	4b02      	ldr	r3, [pc, #8]	; (8003f2c <_read+0xc>)
 8003f22:	2258      	movs	r2, #88	; 0x58
 8003f24:	601a      	str	r2, [r3, #0]
 8003f26:	f04f 30ff 	mov.w	r0, #4294967295
 8003f2a:	4770      	bx	lr
 8003f2c:	20000200 	.word	0x20000200

08003f30 <_sbrk>:
 8003f30:	4a04      	ldr	r2, [pc, #16]	; (8003f44 <_sbrk+0x14>)
 8003f32:	6811      	ldr	r1, [r2, #0]
 8003f34:	4603      	mov	r3, r0
 8003f36:	b909      	cbnz	r1, 8003f3c <_sbrk+0xc>
 8003f38:	4903      	ldr	r1, [pc, #12]	; (8003f48 <_sbrk+0x18>)
 8003f3a:	6011      	str	r1, [r2, #0]
 8003f3c:	6810      	ldr	r0, [r2, #0]
 8003f3e:	4403      	add	r3, r0
 8003f40:	6013      	str	r3, [r2, #0]
 8003f42:	4770      	bx	lr
 8003f44:	20000208 	.word	0x20000208
 8003f48:	20000210 	.word	0x20000210

08003f4c <_exit>:
 8003f4c:	e7fe      	b.n	8003f4c <_exit>
	...

08003f50 <_init>:
 8003f50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003f52:	bf00      	nop
 8003f54:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003f56:	bc08      	pop	{r3}
 8003f58:	469e      	mov	lr, r3
 8003f5a:	4770      	bx	lr

08003f5c <_fini>:
 8003f5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003f5e:	bf00      	nop
 8003f60:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003f62:	bc08      	pop	{r3}
 8003f64:	469e      	mov	lr, r3
 8003f66:	4770      	bx	lr
